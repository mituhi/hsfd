<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.run.dao.ValueTimeMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.run.entity.ValueTime" >
    <id column="value_id" property="valueId" jdbcType="VARCHAR" />
    <result column="value_code" property="valueCode" jdbcType="VARCHAR" />
    <result column="value_name" property="valueName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    value_id, value_code, value_name, status, sort
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.run.entity.ValueTimeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from value_time
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from value_time
    where value_id = #{valueId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from value_time
    where value_id = #{valueId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.run.entity.ValueTimeExample" >
    delete from value_time
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.run.entity.ValueTime" >
    insert into value_time (value_id, value_code, value_name, 
      status, sort)
    values (#{valueId,jdbcType=VARCHAR}, #{valueCode,jdbcType=VARCHAR}, #{valueName,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.run.entity.ValueTime" >
    insert into value_time
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="valueId != null" >
        value_id,
      </if>
      <if test="valueCode != null" >
        value_code,
      </if>
      <if test="valueName != null" >
        value_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="sort != null" >
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="valueId != null" >
        #{valueId,jdbcType=VARCHAR},
      </if>
      <if test="valueCode != null" >
        #{valueCode,jdbcType=VARCHAR},
      </if>
      <if test="valueName != null" >
        #{valueName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.run.entity.ValueTimeExample" resultType="java.lang.Integer" >
    select count(*) from value_time
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update value_time
    <set >
      <if test="record.valueId != null" >
        value_id = #{record.valueId,jdbcType=VARCHAR},
      </if>
      <if test="record.valueCode != null" >
        value_code = #{record.valueCode,jdbcType=VARCHAR},
      </if>
      <if test="record.valueName != null" >
        value_name = #{record.valueName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update value_time
    set value_id = #{record.valueId,jdbcType=VARCHAR},
      value_code = #{record.valueCode,jdbcType=VARCHAR},
      value_name = #{record.valueName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.run.entity.ValueTime" >
    update value_time
    <set >
      <if test="valueCode != null" >
        value_code = #{valueCode,jdbcType=VARCHAR},
      </if>
      <if test="valueName != null" >
        value_name = #{valueName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where value_id = #{valueId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.run.entity.ValueTime" >
    update value_time
    set value_code = #{valueCode,jdbcType=VARCHAR},
      value_name = #{valueName,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER}
    where value_id = #{valueId,jdbcType=VARCHAR}
  </update>
  
    	<!-- 批量删除值次表数据 -->
	<delete id="deleteValueTime" parameterType="java.util.List">
		delete from value_time WHERE value_id in 
		<foreach collection="list" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<!-- 批量获取信息 -->
	<select id="listValueTime" parameterType="com.qz.zframe.run.entity.ValueTime" resultMap="BaseResultMap">
        select
        value_id,
        value_code,
        value_name,
        status,
        sort
        from value_time
        <where>
        
            <if test="valueId != null and valueId != ''">
                and value_id = #{valueId}
            </if>
            
            <if test="valueCode != null and valueCode != ''">
                and value_id = #{valueCode}
            </if>
            
            <if test="valueName != null and valueName != ''">
                and value_name like concat('%', #{valueName}, '%')
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="sort != null and sort != ''">
                and sort = #{sort}
            </if>
        </where>
        order by sort
	</select>
  
  
</mapper>