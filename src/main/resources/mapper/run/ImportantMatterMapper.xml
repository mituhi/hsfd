<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.run.dao.ImportantMatterMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.run.entity.ImportantMatter" >
    <id column="matter_id" property="matterId" jdbcType="VARCHAR" />
    <result column="log_type_id" property="logTypeId" jdbcType="VARCHAR" />
    <result column="log_code" property="logCode" jdbcType="VARCHAR" />
    <result column="log_name" property="logName" jdbcType="VARCHAR" />
    <result column="wind_code" property="windCode" jdbcType="VARCHAR" />
    <result column="wind_name" property="windName" jdbcType="VARCHAR" />
    <result column="important_matter" property="importantMatter" jdbcType="VARCHAR" />
    <result column="update_person" property="updatePerson" jdbcType="TIMESTAMP" />
    <result column="user_name" property="updatePersonName" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    matter_id, log_type_id, wind_code, important_matter, update_person, update_time
  </sql>

  <sql id="Get_Column_List" >
    a.matter_id as matter_id, a.log_type_id as log_type_id, b.log_code as log_code, b.log_name as log_name, a.wind_code as wind_code, d.architecture_name as wind_name,
    a.important_matter as important_matter, a.update_person as update_person, e.user_name as user_name, a.update_time as update_time
  </sql>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.run.entity.ImportantMatterExample" >
    select
    <include refid="Get_Column_List" />
    from
    (select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from important_matter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>) a
    left join log_type b on a.log_type_id = b.log_type_id
    left join org_architecture d on (a.wind_Code = d.architecture_code and d.architecture_type = '02')
    left join isc_user e on a.update_person = e.user_id
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from important_matter
    where matter_id = #{matterId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from important_matter
    where matter_id = #{matterId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.run.entity.ImportantMatterExample" >
    delete from important_matter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.run.entity.ImportantMatter" >
    insert into important_matter (matter_id, log_type_id, wind_code, 
      important_matter, update_person, update_time
      )
    values (#{matterId,jdbcType=VARCHAR}, #{logTypeId,jdbcType=VARCHAR}, #{windCode,jdbcType=VARCHAR}, 
      #{importantMatter,jdbcType=VARCHAR}, #{updatePerson,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.run.entity.ImportantMatter" >
    insert into important_matter
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="matterId != null" >
        matter_id,
      </if>
      <if test="logTypeId != null" >
        log_type_id,
      </if>
      <if test="windCode != null" >
        wind_code,
      </if>
      <if test="importantMatter != null" >
        important_matter,
      </if>
      <if test="updatePerson != null" >
        update_person,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="matterId != null" >
        #{matterId,jdbcType=VARCHAR},
      </if>
      <if test="logTypeId != null" >
        #{logTypeId,jdbcType=VARCHAR},
      </if>
      <if test="windCode != null" >
        #{windCode,jdbcType=VARCHAR},
      </if>
      <if test="importantMatter != null" >
        #{importantMatter,jdbcType=VARCHAR},
      </if>
      <if test="updatePerson != null" >
        #{updatePerson,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.run.entity.ImportantMatterExample" resultType="java.lang.Integer" >
    select count(*) from important_matter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update important_matter
    <set >
      <if test="record.matterId != null" >
        matter_id = #{record.matterId,jdbcType=VARCHAR},
      </if>
      <if test="record.logTypeId != null" >
        log_type_id = #{record.logTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.windCode != null" >
        wind_code = #{record.windCode,jdbcType=VARCHAR},
      </if>
      <if test="record.importantMatter != null" >
        important_matter = #{record.importantMatter,jdbcType=VARCHAR},
      </if>
      <if test="record.updatePerson != null" >
        update_person = #{record.updatePerson,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update important_matter
    set matter_id = #{record.matterId,jdbcType=VARCHAR},
      log_type_id = #{record.logTypeId,jdbcType=VARCHAR},
      wind_code = #{record.windCode,jdbcType=VARCHAR},
      important_matter = #{record.importantMatter,jdbcType=VARCHAR},
      update_person = #{record.updatePerson,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.run.entity.ImportantMatter" >
    update important_matter
    <set >
      <if test="logTypeId != null" >
        log_type_id = #{logTypeId,jdbcType=VARCHAR},
      </if>
      <if test="windCode != null" >
        wind_code = #{windCode,jdbcType=VARCHAR},
      </if>
      <if test="importantMatter != null" >
        important_matter = #{importantMatter,jdbcType=VARCHAR},
      </if>
      <if test="updatePerson != null" >
        update_person = #{updatePerson,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where matter_id = #{matterId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.run.entity.ImportantMatter" >
    update important_matter
    set log_type_id = #{logTypeId,jdbcType=VARCHAR},
      wind_code = #{windCode,jdbcType=VARCHAR},
      important_matter = #{importantMatter,jdbcType=VARCHAR},
      update_person = #{updatePerson,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where matter_id = #{matterId,jdbcType=VARCHAR}
  </update>
</mapper>