<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.run.dao.ShiftMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.run.entity.Shift" >
    <id column="shift_id" property="shiftId" jdbcType="VARCHAR" />
    <result column="shift_code" property="shiftCode" jdbcType="VARCHAR" />
    <result column="shift_name" property="shiftName" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="VARCHAR" />
    <result column="end_time" property="endTime" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="is_meter_read" property="isMeterRead" jdbcType="VARCHAR" />
    <result column="status_name" property="statusName" jdbcType="VARCHAR" />
    <result column="is_meter_read_name" property="isMeterReadName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    shift_id, shift_code, shift_name, start_time, end_time, status, sort, is_meter_read,status_name,is_meter_read_name 
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.run.entity.ShiftExample" >
    select
      <include refid="Base_Column_List" />
   from(
    select t.*,a.title as status_name,s.title as is_meter_read_name 
    from shift  t
    LEFT JOIN sp_code a ON t.STATUS = a.name
    LEFT JOIN sp_code_type b ON a.code_type_id = b.id
	LEFT JOIN sp_code s ON t.is_meter_read = s.name 
	LEFT JOIN sp_code_type d ON s.code_type_id = d.id 
	where  b.NAME = 'SHIFT_VALUE' 
	AND d.NAME = 'METERREAD' ) sh 
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    t.* ,a.title as status_name,sc.title as is_meter_read_name 
    from shift t
    LEFT JOIN sp_code a ON t.STATUS = a.NAME 
    LEFT JOIN sp_code_type b ON a.code_type_id = b.id
	LEFT JOIN sp_code sc ON t.is_meter_read = sc.name 
	LEFT JOIN sp_code_type d ON sc.code_type_id = d.id 
	where  b.NAME = 'SHIFT_VALUE' 
	AND d.NAME = 'METERREAD' 
    and t.shift_id = #{shiftId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from shift
    where shift_id = #{shiftId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.run.entity.ShiftExample" >
    delete from shift
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.run.entity.Shift" >
    insert into shift (shift_id, shift_code, shift_name, 
      start_time, end_time, status, 
      sort, is_meter_read)
    values (#{shiftId,jdbcType=VARCHAR}, #{shiftCode,jdbcType=VARCHAR}, #{shiftName,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{isMeterRead,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.run.entity.Shift" >
    insert into shift
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shiftId != null" >
        shift_id,
      </if>
      <if test="shiftCode != null" >
        shift_code,
      </if>
      <if test="shiftName != null" >
        shift_name,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="isMeterRead != null" >
        is_meter_read,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shiftId != null" >
        #{shiftId,jdbcType=VARCHAR},
      </if>
      <if test="shiftCode != null" >
        #{shiftCode,jdbcType=VARCHAR},
      </if>
      <if test="shiftName != null" >
        #{shiftName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="isMeterRead != null" >
        #{isMeterRead,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.run.entity.ShiftExample" resultType="java.lang.Integer" >
    select count(*) from shift
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update shift
    <set >
      <if test="record.shiftId != null" >
        shift_id = #{record.shiftId,jdbcType=VARCHAR},
      </if>
      <if test="record.shiftCode != null" >
        shift_code = #{record.shiftCode,jdbcType=VARCHAR},
      </if>
      <if test="record.shiftName != null" >
        shift_name = #{record.shiftName,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.isMeterRead != null" >
        is_meter_read = #{record.isMeterRead,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update shift
    set shift_id = #{record.shiftId,jdbcType=VARCHAR},
      shift_code = #{record.shiftCode,jdbcType=VARCHAR},
      shift_name = #{record.shiftName,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      is_meter_read = #{record.isMeterRead,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.run.entity.Shift" >
    update shift
    <set >
      <if test="shiftCode != null" >
        shift_code = #{shiftCode,jdbcType=VARCHAR},
      </if>
      <if test="shiftName != null" >
        shift_name = #{shiftName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="isMeterRead != null" >
        is_meter_read = #{isMeterRead,jdbcType=VARCHAR},
      </if>
    </set>
    where shift_id = #{shiftId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.run.entity.Shift" >
    update shift
    set shift_code = #{shiftCode,jdbcType=VARCHAR},
      shift_name = #{shiftName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      is_meter_read = #{isMeterRead,jdbcType=VARCHAR}
    where shift_id = #{shiftId,jdbcType=VARCHAR}
  </update>
  
    
  <select id="selectMaxSort" resultMap="BaseResultMap">
  	SELECT MAX(sort) as sort FROM `shift` 
  </select>
  
   <select id="selectCount" resultType="java.lang.Integer">
   select count(*) from shift
  </select>
  <select id="selectSort" resultMap="BaseResultMap" parameterType="com.qz.zframe.run.entity.Shift">
   select  
   s.*
  <!--  <include refid="Base_Column_List" /> -->
   from shift  s where  sort=#{sort,jdbcType=INTEGER}
  </select>
  
</mapper>