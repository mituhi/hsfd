<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.run.dao.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.run.entity.Goods" >
    <id column="goods_id" property="goodsId" jdbcType="VARCHAR" />
    <result column="goods_code" property="goodsCode" jdbcType="VARCHAR" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="is_enabled" property="isEnabled" jdbcType="VARCHAR" />
    <result column="goods_status" property="goodsStatus" jdbcType="VARCHAR" />
    <result column="handover_goods_id" property="handoverGoodsId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    goods_id, goods_code, goods_name, remark, sort, is_enabled, goods_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.run.entity.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where goods_id = #{goodsId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from goods
    where handover_goods_id = #{handoverGoodsId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.run.entity.GoodsExample" >
    delete from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.run.entity.Goods" >
    insert into goods (goods_id, goods_code, goods_name, 
      remark, sort, is_enabled, 
      goods_status)
    values (#{goodsId,jdbcType=VARCHAR}, #{goodsCode,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{isEnabled,jdbcType=VARCHAR}, 
      #{goodsStatus,jdbcType=VARCHAR})
  </insert>
  
    <insert id="insertList" parameterType="com.qz.zframe.run.entity.Goods" >
    insert into goods (goods_id, goods_code, goods_name, 
      remark, sort, is_enabled, 
      goods_status,handover_goods_id)
    values 
      <foreach collection="list" item="item" index="index" separator="," >
    (#{item.goodsId,jdbcType=VARCHAR}, #{item.goodsCode,jdbcType=VARCHAR}, #{item.goodsName,jdbcType=VARCHAR}, 
      #{item.remark,jdbcType=VARCHAR}, #{item.sort,jdbcType=INTEGER}, #{item.isEnabled,jdbcType=VARCHAR}, 
      #{item.goodsStatus,jdbcType=VARCHAR},#{item.handoverGoodsId,jdbcType=VARCHAR})
   </foreach>
  </insert>
  
  
  
  <insert id="insertSelective" parameterType="com.qz.zframe.run.entity.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="goodsCode != null" >
        goods_code,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="isEnabled != null" >
        is_enabled,
      </if>
      <if test="goodsStatus != null" >
        goods_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="goodsCode != null" >
        #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="isEnabled != null" >
        #{isEnabled,jdbcType=VARCHAR},
      </if>
      <if test="goodsStatus != null" >
        #{goodsStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.run.entity.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods
    <set >
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsCode != null" >
        goods_code = #{record.goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.isEnabled != null" >
        is_enabled = #{record.isEnabled,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsStatus != null" >
        goods_status = #{record.goodsStatus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods
    set goods_id = #{record.goodsId,jdbcType=VARCHAR},
      goods_code = #{record.goodsCode,jdbcType=VARCHAR},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      is_enabled = #{record.isEnabled,jdbcType=VARCHAR},
      goods_status = #{record.goodsStatus,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.run.entity.Goods" >
    update goods
    <set >
      <if test="goodsCode != null" >
        goods_code = #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="isEnabled != null" >
        is_enabled = #{isEnabled,jdbcType=VARCHAR},
      </if>
      <if test="goodsStatus != null" >
        goods_status = #{goodsStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.run.entity.Goods" >
    update goods
    set goods_code = #{goodsCode,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      is_enabled = #{isEnabled,jdbcType=VARCHAR},
      goods_status = #{goodsStatus,jdbcType=VARCHAR}
    where goods_id = #{goodsId,jdbcType=VARCHAR}
  </update>
  
  
   <delete id="deleteGoodsList" parameterType="java.util.List">
         delete from goods where handover_goods_id in
         <foreach item="item" collection="list" open="(" close=")" separator=",">
             #{item}
         </foreach>
   </delete>
   <select id="selectMaxGoodsCode" resultType="java.lang.String" parameterType="java.util.Map">
    select max(goods_code) from goods a 
    left join handover_goods b on a.handover_goods_id=b.handover_goods_id where a.handover_goods_id != #{params.handoverGoodsId,jdbcType=VARCHAR} 
    and b.wind_code=#{params.windCode,jdbcType=VARCHAR}
  </select>
</mapper>