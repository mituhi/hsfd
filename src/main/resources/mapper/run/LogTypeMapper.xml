<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.run.dao.LogTypeMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.run.entity.LogType" >
    <id column="log_type_id" property="logTypeId" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="log_type" property="logType" jdbcType="VARCHAR" />
    <result column="log_code" property="logCode" jdbcType="VARCHAR" />
    <result column="log_name" property="logName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    log_type_id, department, log_type, log_code, log_name, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.run.entity.LogTypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from log_type
    where log_type_id = #{logTypeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from log_type
    where log_type_id = #{logTypeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.run.entity.LogTypeExample" >
    delete from log_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.run.entity.LogType" >
    insert into log_type (log_type_id, department, log_type, 
      log_code, log_name, status
      )
    values (#{logTypeId,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, #{logType,jdbcType=VARCHAR}, 
      #{logCode,jdbcType=VARCHAR}, #{logName,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.run.entity.LogType" >
    insert into log_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logTypeId != null" >
        log_type_id,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="logType != null" >
        log_type,
      </if>
      <if test="logCode != null" >
        log_code,
      </if>
      <if test="logName != null" >
        log_name,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logTypeId != null" >
        #{logTypeId,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="logType != null" >
        #{logType,jdbcType=VARCHAR},
      </if>
      <if test="logCode != null" >
        #{logCode,jdbcType=VARCHAR},
      </if>
      <if test="logName != null" >
        #{logName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.run.entity.LogTypeExample" resultType="java.lang.Integer" >
    select count(*) from log_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update log_type
    <set >
      <if test="record.logTypeId != null" >
        log_type_id = #{record.logTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.logType != null" >
        log_type = #{record.logType,jdbcType=VARCHAR},
      </if>
      <if test="record.logCode != null" >
        log_code = #{record.logCode,jdbcType=VARCHAR},
      </if>
      <if test="record.logName != null" >
        log_name = #{record.logName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update log_type
    set log_type_id = #{record.logTypeId,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      log_type = #{record.logType,jdbcType=VARCHAR},
      log_code = #{record.logCode,jdbcType=VARCHAR},
      log_name = #{record.logName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.run.entity.LogType" >
    update log_type
    <set >
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="logType != null" >
        log_type = #{logType,jdbcType=VARCHAR},
      </if>
      <if test="logCode != null" >
        log_code = #{logCode,jdbcType=VARCHAR},
      </if>
      <if test="logName != null" >
        log_name = #{logName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where log_type_id = #{logTypeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.run.entity.LogType" >
    update log_type
    set department = #{department,jdbcType=VARCHAR},
      log_type = #{logType,jdbcType=VARCHAR},
      log_code = #{logCode,jdbcType=VARCHAR},
      log_name = #{logName,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where log_type_id = #{logTypeId,jdbcType=VARCHAR}
  </update>
</mapper>