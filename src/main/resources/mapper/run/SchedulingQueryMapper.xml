<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.run.dao.SchedulingQueryMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.run.entity.SchedulingQuery" >
    <result column="start_time" property="startTime" jdbcType="DATE" />
    <result column="end_time" property="endTime" jdbcType="DATE" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="scheduling_code" property="schedulingCode" jdbcType="VARCHAR" />
    <result column="scheduling_name" property="schedulingName" jdbcType="VARCHAR" />
    <result column="value_name" property="valueName" jdbcType="VARCHAR" />
    <result column="shift_name" property="shiftName" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="scheduling_rule_id" property="schedulingRuleId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    start_time, end_time, department, scheduling_code, scheduling_name, value_name, shift_name, 
    user_id, scheduling_rule_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.run.entity.SchedulingQueryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from scheduling_query
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.qz.zframe.run.entity.SchedulingQueryExample" >
    delete from scheduling_query
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.run.entity.SchedulingQuery" >
    insert into scheduling_query (start_time, end_time, department, 
      scheduling_code, scheduling_name, value_name, 
      shift_name, user_id, scheduling_rule_id
      )
    values (#{startTime,jdbcType=DATE}, #{endTime,jdbcType=DATE}, #{department,jdbcType=VARCHAR}, 
      #{schedulingCode,jdbcType=VARCHAR}, #{schedulingName,jdbcType=VARCHAR}, #{valueName,jdbcType=VARCHAR}, 
      #{shiftName,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{schedulingRuleId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.run.entity.SchedulingQuery" >
    insert into scheduling_query
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="schedulingCode != null" >
        scheduling_code,
      </if>
      <if test="schedulingName != null" >
        scheduling_name,
      </if>
      <if test="valueName != null" >
        value_name,
      </if>
      <if test="shiftName != null" >
        shift_name,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="schedulingRuleId != null" >
        scheduling_rule_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="startTime != null" >
        #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=DATE},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="schedulingCode != null" >
        #{schedulingCode,jdbcType=VARCHAR},
      </if>
      <if test="schedulingName != null" >
        #{schedulingName,jdbcType=VARCHAR},
      </if>
      <if test="valueName != null" >
        #{valueName,jdbcType=VARCHAR},
      </if>
      <if test="shiftName != null" >
        #{shiftName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="schedulingRuleId != null" >
        #{schedulingRuleId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.run.entity.SchedulingQueryExample" resultType="java.lang.Integer" >
    select count(*) from scheduling_query
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update scheduling_query
    <set >
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=DATE},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=DATE},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.schedulingCode != null" >
        scheduling_code = #{record.schedulingCode,jdbcType=VARCHAR},
      </if>
      <if test="record.schedulingName != null" >
        scheduling_name = #{record.schedulingName,jdbcType=VARCHAR},
      </if>
      <if test="record.valueName != null" >
        value_name = #{record.valueName,jdbcType=VARCHAR},
      </if>
      <if test="record.shiftName != null" >
        shift_name = #{record.shiftName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.schedulingRuleId != null" >
        scheduling_rule_id = #{record.schedulingRuleId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update scheduling_query
    set start_time = #{record.startTime,jdbcType=DATE},
      end_time = #{record.endTime,jdbcType=DATE},
      department = #{record.department,jdbcType=VARCHAR},
      scheduling_code = #{record.schedulingCode,jdbcType=VARCHAR},
      scheduling_name = #{record.schedulingName,jdbcType=VARCHAR},
      value_name = #{record.valueName,jdbcType=VARCHAR},
      shift_name = #{record.shiftName,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      scheduling_rule_id = #{record.schedulingRuleId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <!-- 获取排班查询字段 -->
 <select id="selectSchedulingQuery" resultMap="BaseResultMap" parameterType="com.qz.zframe.run.entity.SchedulingQuery">
  	SELECT 
		scheduling_associated.start_time,scheduling_associated.end_time , shift_name , user_id, value_time.value_name,
		scheduling_management.department ,
		scheduling_code, scheduling_name
		FROM 
		value_time,shift,scheduling_rule,scheduling_management,
		user_value_time,rule_shift_value,scheduling_associated
		
		<where>
			user_value_time.value_id = value_time.value_id
			and
			user_value_time.scheduling_rule_id = scheduling_rule.scheduling_rule_id
			and
			scheduling_associated.scheduling_management_id =scheduling_management.scheduling_management_id
			and
			scheduling_associated.scheduling_rule_id = scheduling_rule.scheduling_rule_id
			and
			rule_shift_value.value_id = value_time.value_id
			and
			rule_shift_value.shift_id = shift.shift_id
			and
			rule_shift_value.scheduling_rule_id = scheduling_rule.scheduling_rule_id
			
			<!-- 用startTime来查询 -->
			<if test="startTime != null">
				and scheduling_associated.start_time &lt;= #{startTime} and scheduling_associated.end_time >= #{startTime}
                <!-- and scheduling_associated.start_time >= #{startTime} -->
            </if>
            
            <!-- 
            <if test="endTime != null">
                and scheduling_associated.end_time  &lt;=  #{endTime}
            </if> -->
            
			<if test="department != null and department != ''">
                and scheduling_management.department = #{department}
            </if>

			<if test="schedulingName != null and schedulingName != ''">
              and  scheduling_management.scheduling_name = #{schedulingName}
            </if>
            
		</where>
    </select>
  


 <resultMap id="myResultMap" type="com.qz.zframe.run.entity.SchedulingQuery" >
    <result column="start_time" property="startTime" jdbcType="DATE" />
    <result column="end_time" property="endTime" jdbcType="DATE" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="scheduling_code" property="schedulingCode" jdbcType="VARCHAR" />
    <result column="scheduling_name" property="schedulingName" jdbcType="VARCHAR" />
    <result column="value_name" property="valueName" jdbcType="VARCHAR" />
    <result column="shift_name" property="shiftName" jdbcType="VARCHAR" />
    <result column="user_name" property="userId" jdbcType="VARCHAR" />
    <result column="scheduling_rule_id" property="schedulingRuleId" jdbcType="VARCHAR" />
  </resultMap>



  <!-- 获取排班查询字段：带有名字 -->
 <select id="selectSchedulingQueryWithUserName" resultMap="myResultMap" parameterType="com.qz.zframe.run.entity.SchedulingQuery">
  	SELECT 
		scheduling_associated.start_time,scheduling_associated.end_time , shift_name , user_name, value_time.value_name,
		scheduling_management.department ,
		scheduling_code, scheduling_name
		FROM 
		value_time,shift,scheduling_rule,scheduling_management,
		user_value_time,rule_shift_value,scheduling_associated,isc_user
		
		<where>
			user_value_time.value_id = value_time.value_id
			and
			user_value_time.scheduling_rule_id = scheduling_rule.scheduling_rule_id
			and
			user_value_time.user_id = isc_user.user_id
			and
			scheduling_associated.scheduling_management_id =scheduling_management.scheduling_management_id
			and
			scheduling_associated.scheduling_rule_id = scheduling_rule.scheduling_rule_id
			and
			rule_shift_value.value_id = value_time.value_id
			and
			rule_shift_value.shift_id = shift.shift_id
			and
			rule_shift_value.scheduling_rule_id = scheduling_rule.scheduling_rule_id
			
			<!-- 用startTime来查询 -->
			<if test="startTime != null">
				and scheduling_associated.start_time &lt;= #{startTime} and scheduling_associated.end_time >= #{startTime}
                <!-- and scheduling_associated.start_time >= #{startTime} -->
            </if>
            
            <!-- 
            <if test="endTime != null">
                and scheduling_associated.end_time  &lt;=  #{endTime}
            </if> -->
            
			<if test="department != null and department != ''">
                and scheduling_management.department = #{department}
            </if>

			<if test="schedulingName != null and schedulingName != ''">
              and  scheduling_management.scheduling_name = #{schedulingName}
            </if>
            
		</where>
    </select>
  
  
  
  
  	<select id="queryOperator" resultMap="BaseResultMap" parameterType="com.qz.zframe.run.entity.SchedulingQuery">
  	
	SELECT 
		scheduling_associated.start_time , scheduling_associated.end_time , scheduling_management.department ,
		scheduling_code ,scheduling_name , value_time.value_name , shift.shift_name ,user_value_time.user_id ,scheduling_rule.scheduling_rule_id
		FROM 
		value_time,shift,scheduling_rule,scheduling_management,
		user_value_time,rule_shift_value,scheduling_associated
		where 
		user_value_time.value_id = value_time.value_id
		and
		user_value_time.scheduling_rule_id = scheduling_rule.scheduling_rule_id
		and
		scheduling_associated.scheduling_management_id =scheduling_management.scheduling_management_id
		and
		scheduling_associated.scheduling_rule_id = scheduling_rule.scheduling_rule_id
		and
		rule_shift_value.value_id = value_time.value_id
		and
		rule_shift_value.shift_id = shift.shift_id
		and
		rule_shift_value.scheduling_rule_id = scheduling_rule.scheduling_rule_id
	
         <if test="startTime != null">
         	<!-- 在这里设置了查询的时间：有待商榷 -->
             and scheduling_associated.start_time &lt;=  #{startTime}
             and scheduling_associated.end_time >=  #{startTime}
         </if>
     
        
		<if test="shiftName != null and shiftName != ''">
            and shift.shift_name = #{shiftName}
         </if>
         
         <if test="schedulingRuleId != null and schedulingRuleId != ''">
         	and scheduling_rule.scheduling_rule_id = #{schedulingRuleId}
         </if>
         
         <if test="valueName != null and valueName != ''">
					and value_name=#{valueName}         
        </if>
		
		<if test="schedulingName != null and schedulingName != ''">
           and  scheduling_management.scheduling_name = #{schedulingName}
         </if>
  	</select>
  
 	 <!-- 值班人员修改 -->
  	<update id="updateOperator"   parameterType="com.qz.zframe.run.entity.SchedulingQuery" >
  		
  		update 
			value_time,shift,scheduling_rule,scheduling_management,
			user_value_time,rule_shift_value,scheduling_associated
			set user_value_time.user_id = #{userId} 
			where 
			user_value_time.value_id = value_time.value_id
			and
			user_value_time.scheduling_rule_id = scheduling_rule.scheduling_rule_id
			and
			scheduling_associated.scheduling_management_id =scheduling_management.scheduling_management_id
			and
			scheduling_associated.scheduling_rule_id = scheduling_rule.scheduling_rule_id
			and
			rule_shift_value.value_id = value_time.value_id
			and
			rule_shift_value.shift_id = shift.shift_id
			and
			rule_shift_value.scheduling_rule_id = scheduling_rule.scheduling_rule_id
			and 
			scheduling_management.scheduling_name = #{schedulingName}
			and
			shift.shift_name = #{shiftName}
			and 
			value_time.value_name = #{valueName}
  		
  	</update>
  
  
  
</mapper>