<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.run.dao.DeviceTypeMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.run.entity.DeviceType" >
    <id column="type_id" property="typeId" jdbcType="VARCHAR" />
    <result column="device_type" property="deviceType" jdbcType="VARCHAR" />
    <result column="device_status" property="deviceStatus" jdbcType="VARCHAR" />
    <result column="status_name" property="statusName" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    type_id, device_type, device_status, sort, update_time, remark
  </sql>

  <sql id="Get_Column_List" >
    a.type_id as type_id, a.device_type as device_type, a.device_status as device_status, a.sort as sort,
    a.update_time as update_time, a.remark as remark,e.title as status_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.run.entity.DeviceTypeExample" >
    select
    <include refid="Get_Column_List"/>
    from
    (select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from device_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>) a
    left join sp_code_type d on d.name = 'DEVICE_TYPE_STATUS'
    left join sp_code e on (e.code_type_id = d.id and e.name = a.device_status)
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="getDistinctDeviceTypeList" resultMap="BaseResultMap" parameterType="com.qz.zframe.run.entity.DeviceTypeExample" >
    select
    distinct
    type_id,
    device_type
    from device_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from device_type
    where type_id = #{typeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from device_type
    where type_id = #{typeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.run.entity.DeviceTypeExample" >
    delete from device_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.run.entity.DeviceType" >
    insert into device_type (type_id, device_type, device_status, 
      sort, update_time, remark
      )
    values (#{typeId,jdbcType=VARCHAR}, #{deviceType,jdbcType=VARCHAR}, #{deviceStatus,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.run.entity.DeviceType" >
    insert into device_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="deviceType != null" >
        device_type,
      </if>
      <if test="deviceStatus != null" >
        device_status,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null" >
        #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="deviceStatus != null" >
        #{deviceStatus,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.run.entity.DeviceTypeExample" resultType="java.lang.Integer" >
    select count(*) from device_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update device_type
    <set >
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceType != null" >
        device_type = #{record.deviceType,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceStatus != null" >
        device_status = #{record.deviceStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update device_type
    set type_id = #{record.typeId,jdbcType=VARCHAR},
      device_type = #{record.deviceType,jdbcType=VARCHAR},
      device_status = #{record.deviceStatus,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.run.entity.DeviceType" >
    update device_type
    <set >
      <if test="deviceType != null" >
        device_type = #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="deviceStatus != null" >
        device_status = #{deviceStatus,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where type_id = #{typeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.run.entity.DeviceType" >
    update device_type
    set device_type = #{deviceType,jdbcType=VARCHAR},
      device_status = #{deviceStatus,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where type_id = #{typeId,jdbcType=VARCHAR}
  </update>
  
  
  <select id="selectMaxSort" resultMap="BaseResultMap">
  	SELECT MAX(sort) as sort FROM `device_type` 
  </select>
  
  
  
</mapper>