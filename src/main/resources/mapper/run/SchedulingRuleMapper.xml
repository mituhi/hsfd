<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.run.dao.SchedulingRuleMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.run.entity.SchedulingRule" >
    <id column="scheduling_rule_id" property="schedulingRuleId" jdbcType="VARCHAR" />
    <result column="scheduling_rule_code" property="schedulingRuleCode" jdbcType="VARCHAR" />
    <result column="scheduling_rule" property="schedulingRule" jdbcType="VARCHAR" />
    <result column="wind_code" property="windCode" jdbcType="VARCHAR" />
    <result column="rotation_cycle" property="rotationCycle" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="architecture_name" property="windName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.qz.zframe.run.entity.dto.RuleShiftValueDto" >
    <id column="scheduling_rule_id" property="schedulingRuleId" jdbcType="VARCHAR" />
    <result column="shift_id" property="shiftId" jdbcType="VARCHAR" />
    <result column="shift_name" property="shiftName" jdbcType="VARCHAR" />
    <result column="value_id" property="valueId" jdbcType="VARCHAR" />
    <result column="value_name" property="valueName" jdbcType="VARCHAR" />
    <result column="day_id" property="dayId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="BaseResultMap3" type="com.qz.zframe.run.entity.dto.IscUserDto" >
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="value_id" property="valueId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    scheduling_rule_id, scheduling_rule_code, scheduling_rule, wind_code,
    rotation_cycle, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.run.entity.SchedulingRuleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from scheduling_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from scheduling_rule
    where scheduling_rule_id = #{schedulingRuleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from scheduling_rule
    where scheduling_rule_id = #{schedulingRuleId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.run.entity.SchedulingRuleExample" >
    delete from scheduling_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.run.entity.SchedulingRule" >
    insert into scheduling_rule (scheduling_rule_id, scheduling_rule_code, 
      scheduling_rule, wind_code, rotation_cycle,true_id,
      status)
    values (#{schedulingRuleId,jdbcType=VARCHAR}, #{schedulingRuleCode,jdbcType=VARCHAR}, 
      #{schedulingRule,jdbcType=VARCHAR}, #{windCode,jdbcType=VARCHAR}, #{rotationCycle,jdbcType=VARCHAR},#{trueId,jdbcType=VARCHAR},
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.run.entity.SchedulingRule" >
    insert into scheduling_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="schedulingRuleId != null" >
        scheduling_rule_id,
      </if>
      <if test="schedulingRuleCode != null" >
        scheduling_rule_code,
      </if>
      <if test="schedulingRule != null" >
        scheduling_rule,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="schedulingShift != null" >
        scheduling_shift,
      </if>
      <if test="rotationCycle != null" >
        rotation_cycle,
      </if>
      <if test="isAcrossDay != null" >
        is_across_day,
      </if>
      <if test="dayNum != null" >
        day_num,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="schedulingRuleId != null" >
        #{schedulingRuleId,jdbcType=VARCHAR},
      </if>
      <if test="schedulingRuleCode != null" >
        #{schedulingRuleCode,jdbcType=VARCHAR},
      </if>
      <if test="schedulingRule != null" >
        #{schedulingRule,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="schedulingShift != null" >
        #{schedulingShift,jdbcType=VARCHAR},
      </if>
      <if test="rotationCycle != null" >
        #{rotationCycle,jdbcType=VARCHAR},
      </if>
      <if test="isAcrossDay != null" >
        #{isAcrossDay,jdbcType=VARCHAR},
      </if>
      <if test="dayNum != null" >
        #{dayNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.run.entity.SchedulingRuleExample" resultType="java.lang.Integer" >
    select count(*) from scheduling_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update scheduling_rule
    <set >
      <if test="record.schedulingRuleId != null" >
        scheduling_rule_id = #{record.schedulingRuleId,jdbcType=VARCHAR},
      </if>
      <if test="record.schedulingRuleCode != null" >
        scheduling_rule_code = #{record.schedulingRuleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.schedulingRule != null" >
        scheduling_rule = #{record.schedulingRule,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.schedulingShift != null" >
        scheduling_shift = #{record.schedulingShift,jdbcType=VARCHAR},
      </if>
      <if test="record.rotationCycle != null" >
        rotation_cycle = #{record.rotationCycle,jdbcType=VARCHAR},
      </if>
      <if test="record.isAcrossDay != null" >
        is_across_day = #{record.isAcrossDay,jdbcType=VARCHAR},
      </if>
      <if test="record.dayNum != null" >
        day_num = #{record.dayNum,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update scheduling_rule
    set scheduling_rule_id = #{record.schedulingRuleId,jdbcType=VARCHAR},
      scheduling_rule_code = #{record.schedulingRuleCode,jdbcType=VARCHAR},
      scheduling_rule = #{record.schedulingRule,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      scheduling_shift = #{record.schedulingShift,jdbcType=VARCHAR},
      rotation_cycle = #{record.rotationCycle,jdbcType=VARCHAR},
      is_across_day = #{record.isAcrossDay,jdbcType=VARCHAR},
      day_num = #{record.dayNum,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.run.entity.SchedulingRule" >
    update scheduling_rule
    <set >
      <if test="schedulingRuleCode != null" >
        scheduling_rule_code = #{schedulingRuleCode,jdbcType=VARCHAR},
      </if>
      <if test="schedulingRule != null" >
        scheduling_rule = #{schedulingRule,jdbcType=VARCHAR},
      </if>
      <if test="windCode != null" >
        wind_code = #{windCode,jdbcType=VARCHAR},
      </if>
      <if test="rotationCycle != null" >
        rotation_cycle = #{rotationCycle,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where scheduling_rule_id = #{schedulingRuleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.run.entity.SchedulingRule" >
    update scheduling_rule
    set scheduling_rule_code = #{schedulingRuleCode,jdbcType=VARCHAR},
      scheduling_rule = #{schedulingRule,jdbcType=VARCHAR},
      wind_code = #{windCode,jdbcType=VARCHAR},
      rotation_cycle = #{rotationCycle,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where scheduling_rule_id = #{schedulingRuleId,jdbcType=VARCHAR}
  </update>

  <select id="selectByWindCode" parameterType="string" resultMap="BaseResultMap">
        SELECT s.scheduling_rule_id,s.scheduling_rule_code,s.scheduling_rule,
        s.wind_code,s.rotation_cycle,s.status,
        o.architecture_name
        FROM scheduling_rule s,org_architecture o
        WHERE true_id="0"
    <if test="windCode!=null and windCode!=''">
      and s.wind_code=#{windCode}
    </if>
    and o.architecture_type="02"
    and o.architecture_code=s.wind_code
  </select>

  <select id="getShifts" parameterType="string" resultType="com.qz.zframe.run.entity.Shift">
    SELECT s.shift_name as shiftName
    FROM shift s,rule_shift_value r
    WHERE s.shift_id=r.shift_id
    and r.scheduling_rule_id=#{schedulingRuleId}
  </select>

  <select id="findSchedulingRuleCode" parameterType="string" resultType="int">
    SELECT COUNT(scheduling_rule_code)
    FROM scheduling_rule
    WHERE scheduling_rule_code=#{schedulingRuleCode}
  </select>

  <select id="count" resultType="int">
    SELECT COUNT(scheduling_rule_id)
    FROM scheduling_rule
  </select>

  <update id="deleteById" parameterType="string">
    UPDATE scheduling_rule
    SET true_id='1'
    WHERE scheduling_rule_id=#{id}
  </update>

  <select id="countBySchedulingRuleId" parameterType="string" resultType="int">
    SELECT COUNT(scheduling_rule_id)
    FROM scheduling_rule
    WHERE scheduling_rule_id=#{schedulingRuleId}
  </select>

  <select id="countBySchedulingRuleCode" parameterType="string" resultType="int">
    SELECT COUNT(scheduling_rule_code)
    FROM scheduling_rule
    WHERE scheduling_rule_code=#{schedulingRuleCode}
    and true_id="0"
  </select>

  <select id="findSchedulingRuleCodeById" parameterType="string" resultType="string">
    SELECT scheduling_rule_code
    FROM scheduling_rule
    WHERE scheduling_rule_id=#{schedulingRuleId}
  </select>

  <select id="findRuleShiftValueDto" resultMap="BaseResultMap2">
      SELECT
      r.scheduling_rule_id,r.shift_id,s.shift_name,r.value_id,v.value_name,r.day_id
      FROM rule_shift_value r,shift s,value_time v
      WHERE
      scheduling_rule_id=#{schedulingRuleId}
      and r.shift_id=s.shift_id
      and r.value_id=v.value_id
      and day_id in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <select id="findIscUserDto" resultMap="BaseResultMap3">
      SELECT i.user_id,i.user_name
      FROM isc_user i,user_value_time u
      WHERE u.scheduling_rule_id=#{schedulingRuleId}
      and u.value_id=#{valueId}
      and i.user_id=u.user_id
  </select>

  <select id="findRuleShiftValueDtoByschedulingRuleIdAndDayId" resultMap="BaseResultMap2">
    SELECT
    r.scheduling_rule_id,r.shift_id,s.shift_name,r.value_id,v.value_name,r.day_id
    FROM rule_shift_value r,shift s,value_time v
    WHERE
    scheduling_rule_id=#{schedulingRuleId}
    and r.shift_id=s.shift_id
    and r.value_id=v.value_id
    and day_id=#{dayId}
  </select>

  <select id="findMaxDayIdBySchedulingRuleId" parameterType="string" resultType="string">
    SELECT max(day_id)
    FROM rule_shift_value
    WHERE scheduling_rule_id=#{schedulingRuleId};
  </select>

  <select id="findRuleShiftValueDtoByschedulingRuleId" resultMap="BaseResultMap2">
    SELECT
    r.scheduling_rule_id,r.shift_id,s.shift_name,r.value_id,v.value_name,r.day_id
    FROM rule_shift_value r,shift s,value_time v
    WHERE
    scheduling_rule_id=#{schedulingRuleId}
    and r.shift_id=s.shift_id
    and r.value_id=v.value_id
  </select>

  <select id="findIscUserDtoBySchedulingRuleId" resultMap="BaseResultMap3">
    SELECT i.user_id,i.user_name,u.value_id
    FROM isc_user i,user_value_time u
    WHERE u.scheduling_rule_id=#{schedulingRuleId}
    and i.user_id=u.user_id
  </select>

  <select id="findValueIdsBySchedulingRuleId" parameterType="string" resultType="string">
    SELECT distinct value_id
    FROM user_value_time
    WHERE scheduling_rule_id=#{schedulingRuleId}
  </select>

  <select id="findDayIdsBySchedulingRuleId" parameterType="string" resultType="string">
      SELECT DISTINCT day_id
      FROM rule_shift_value
      WHERE scheduling_rule_id=#{schedulingRuleId}
  </select>

  <select id="findValueIdsBySchedulingRuleById" parameterType="string" resultType="string">
      SELECT DISTINCT value_id
      FROM user_value_time
      WHERE scheduling_rule_id=#{schedulingRuleId}
  </select>

  <select id="findShiftIdsBySchedulingRuleById" parameterType="string" resultType="string">
    SELECT DISTINCT shift_id
    FROM rule_shift_value
    WHERE scheduling_rule_id=#{schedulingRuleId}
  </select>

</mapper>