<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.material.dao.StoreHouseTypeMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.material.entity.StoreHouseType" >
    <id column="type_id" property="typeId" jdbcType="VARCHAR" />
    <result column="type_code" property="typeCode" jdbcType="VARCHAR" />
    <result column="type_name" property="typeName" jdbcType="VARCHAR" />
    <result column="is_related_jobs" property="isRelatedJobs" jdbcType="VARCHAR" />
    <result column="is_negative" property="isNegative" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="VARCHAR" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="super_type_id" property="superTypeId" jdbcType="VARCHAR" />
	<result column="superTypeName" property="superTypeName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Pagination_Sql">
		<if test="isPage == 1">
			limit #{pageIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
		</if>
	</sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    type_id, type_code, type_name, is_related_jobs, is_negative, is_delete, creater, 
    create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.material.entity.StoreHouseTypeExample" >
    select a.*,b.type_name as superTypeName
    from storehouse_type a left join storehouse_type b on a.super_type_id=b.type_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="Pagination_Sql" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select a.*,b.type_name as superTypeName
    from storehouse_type a left join storehouse_type b on a.super_type_id=b.type_id
    where a.type_id = #{typeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from storehouse_type
    where type_id = #{typeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.material.entity.StoreHouseTypeExample" >
    delete from storehouse_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.material.entity.StoreHouseType" >
    insert into storehouse_type (type_id, type_code, type_name, 
      is_related_jobs, is_negative, is_delete, 
      creater, create_time)
    values (#{typeId,jdbcType=VARCHAR}, #{typeCode,jdbcType=VARCHAR}, #{typeName,jdbcType=VARCHAR}, 
      #{isRelatedJobs,jdbcType=VARCHAR}, #{isNegative,jdbcType=VARCHAR}, #{isDelete,jdbcType=VARCHAR}, 
      #{creater,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.material.entity.StoreHouseType" >
    insert into storehouse_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="typeCode != null" >
        type_code,
      </if>
      <if test="typeName != null" >
        type_name,
      </if>
      <if test="isRelatedJobs != null" >
        is_related_jobs,
      </if>
      <if test="isNegative != null" >
        is_negative,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="creater != null" >
        creater,
      </if>
        <if test="createTime != null" >
        create_time,
      </if>
       <if test="superTypeId != null" >
        super_type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null" >
        #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="isRelatedJobs != null" >
        #{isRelatedJobs,jdbcType=VARCHAR},
      </if>
      <if test="isNegative != null" >
        #{isNegative,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
     <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
     </if>
     <if test="superTypeId != null" >
        #{superTypeId,jdbcType=VARCHAR},
      </if>
      
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.material.entity.StoreHouseTypeExample" resultType="java.lang.Integer" >
    select count(*) from  storehouse_type a left join storehouse_type b on a.super_type_id=b.type_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update storehouse_type
    <set >
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=VARCHAR},
      </if>
      <if test="record.typeCode != null" >
        type_code = #{record.typeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.typeName != null" >
        type_name = #{record.typeName,jdbcType=VARCHAR},
      </if>
      <if test="record.isRelatedJobs != null" >
        is_related_jobs = #{record.isRelatedJobs,jdbcType=VARCHAR},
      </if>
      <if test="record.isNegative != null" >
        is_negative = #{record.isNegative,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update storehouse_type
    set type_id = #{record.typeId,jdbcType=VARCHAR},
      type_code = #{record.typeCode,jdbcType=VARCHAR},
      type_name = #{record.typeName,jdbcType=VARCHAR},
      is_related_jobs = #{record.isRelatedJobs,jdbcType=VARCHAR},
      is_negative = #{record.isNegative,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=VARCHAR},
      creater = #{record.creater,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.material.entity.StoreHouseType" >
    update storehouse_type
    <set >
      <if test="typeCode != null" >
        type_code = #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null" >
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="isRelatedJobs != null" >
        is_related_jobs = #{isRelatedJobs,jdbcType=VARCHAR},
      </if>
      <if test="isNegative != null" >
        is_negative = #{isNegative,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
       <if test="superTypeId != null" >
        super_type_id = #{superTypeId,jdbcType=VARCHAR},
      </if>
    </set>
    where type_id = #{typeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.material.entity.StoreHouseType" >
    update storehouse_type
    set type_code = #{typeCode,jdbcType=VARCHAR},
      type_name = #{typeName,jdbcType=VARCHAR},
      is_related_jobs = #{isRelatedJobs,jdbcType=VARCHAR},
      is_negative = #{isNegative,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where type_id = #{typeId,jdbcType=VARCHAR}
  </update>
  
  <update id="updateIsdete" parameterType="java.util.Map">
         update storehouse_type set is_delete=#{isDelete}  where type_id in
        <foreach collection="typeIds" item="typeIds" open="(" separator="," close=")">
            #{typeIds}
        </foreach>
    </update>
  
</mapper>