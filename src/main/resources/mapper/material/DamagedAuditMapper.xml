<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.material.dao.DamagedAuditMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.material.entity.DamagedAudit" >
    <id column="damaged_audit_id" property="damagedAuditId" jdbcType="VARCHAR" />
    <result column="damaged_audit_order" property="damagedAuditOrder" jdbcType="VARCHAR" />
    <result column="damaged_audit_describe" property="damagedAuditDescribe" jdbcType="VARCHAR" />
    <result column="wind_id" property="windId" jdbcType="VARCHAR" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="user_name" property="createName" jdbcType="VARCHAR" />
    <result column="architecture_name" property="windName" jdbcType="VARCHAR" />
    
    
  </resultMap>
   <sql id="Pagination_Sql">
		<if test="isPage == 1">
			limit
			#{pageIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
		</if>
	</sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    damaged_audit_id, damaged_audit_order, damaged_audit_describe, wind_id, creater, 
    create_time, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.material.entity.DamagedAuditExample" >
    select a.*,b.architecture_name,c.user_name from damaged_audit a left join org_architecture b on a.wind_id=b.architecture_id
    left join isc_user c on a.creater=c.user_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
     <include refid="Pagination_Sql" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select a.*,b.architecture_name,c.user_name from damaged_audit a left join org_architecture b on a.wind_id=b.architecture_id
    left join isc_user c on a.creater=c.user_id
    where a.damaged_audit_id = #{damagedAuditId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from damaged_audit
    where damaged_audit_id = #{damagedAuditId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.material.entity.DamagedAuditExample" >
    delete from damaged_audit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.material.entity.DamagedAudit" >
    insert into damaged_audit (damaged_audit_id, damaged_audit_order, 
      damaged_audit_describe, wind_id, creater, 
      create_time, status)
    values (#{damagedAuditId,jdbcType=VARCHAR}, #{damagedAuditOrder,jdbcType=VARCHAR}, 
      #{damagedAuditDescribe,jdbcType=VARCHAR}, #{windId,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.material.entity.DamagedAudit" >
    insert into damaged_audit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="damagedAuditId != null" >
        damaged_audit_id,
      </if>
      <if test="damagedAuditOrder != null" >
        damaged_audit_order,
      </if>
      <if test="damagedAuditDescribe != null" >
        damaged_audit_describe,
      </if>
      <if test="windId != null" >
        wind_id,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="damagedAuditId != null" >
        #{damagedAuditId,jdbcType=VARCHAR},
      </if>
      <if test="damagedAuditOrder != null" >
        #{damagedAuditOrder,jdbcType=VARCHAR},
      </if>
      <if test="damagedAuditDescribe != null" >
        #{damagedAuditDescribe,jdbcType=VARCHAR},
      </if>
      <if test="windId != null" >
        #{windId,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.material.entity.DamagedAuditExample" resultType="java.lang.Integer" >
    select count(*) from damaged_audit a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update damaged_audit
    <set >
      <if test="record.damagedAuditId != null" >
        damaged_audit_id = #{record.damagedAuditId,jdbcType=VARCHAR},
      </if>
      <if test="record.damagedAuditOrder != null" >
        damaged_audit_order = #{record.damagedAuditOrder,jdbcType=VARCHAR},
      </if>
      <if test="record.damagedAuditDescribe != null" >
        damaged_audit_describe = #{record.damagedAuditDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.windId != null" >
        wind_id = #{record.windId,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update damaged_audit
    set damaged_audit_id = #{record.damagedAuditId,jdbcType=VARCHAR},
      damaged_audit_order = #{record.damagedAuditOrder,jdbcType=VARCHAR},
      damaged_audit_describe = #{record.damagedAuditDescribe,jdbcType=VARCHAR},
      wind_id = #{record.windId,jdbcType=VARCHAR},
      creater = #{record.creater,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.material.entity.DamagedAudit" >
    update damaged_audit
    <set >
      <if test="damagedAuditOrder != null" >
        damaged_audit_order = #{damagedAuditOrder,jdbcType=VARCHAR},
      </if>
      <if test="damagedAuditDescribe != null" >
        damaged_audit_describe = #{damagedAuditDescribe,jdbcType=VARCHAR},
      </if>
      <if test="windId != null" >
        wind_id = #{windId,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where damaged_audit_id = #{damagedAuditId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.material.entity.DamagedAudit" >
    update damaged_audit
    set damaged_audit_order = #{damagedAuditOrder,jdbcType=VARCHAR},
      damaged_audit_describe = #{damagedAuditDescribe,jdbcType=VARCHAR},
      wind_id = #{windId,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where damaged_audit_id = #{damagedAuditId,jdbcType=VARCHAR}
  </update>
  
  <delete id="delBydamagedAuditIds" parameterType="java.util.List">
         delete from damaged_audit where damaged_audit_id in
         <foreach item="damagedAuditIds" collection="list" open="(" close=")" separator=",">
             #{damagedAuditIds}
         </foreach>
 </delete>
  
</mapper>