<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.material.dao.MaterialClassifyMapper">
	<resultMap id="BaseResultMap"
		type="com.qz.zframe.material.entity.MaterialClassify">
		<id column="material_classify_id" property="materialClassifyId" jdbcType="VARCHAR" />
		<result column="classify_name" property="classifyName" jdbcType="VARCHAR" />
		<result column="classify_describe" property="classifyDescribe" jdbcType="VARCHAR" />
		<result column="is_top" property="isTop" jdbcType="VARCHAR" />
		<result column="superior_classify_id" property="superiorClassifyId" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="sort" property="sort" jdbcType="INTEGER" />
		<result column="is_delete" property="isDelete" jdbcType="VARCHAR" />
		<result column="creater" property="creater" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="superiorClassifyName" property="superiorClassifyName" jdbcType="VARCHAR" />
		<result column="superClassifyDescribe" property="superClassifyDescribe" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Pagination_Sql">
		<if test="isPage == 1">
			limit
			#{pageIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
		</if>
	</sql>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		material_classify_id, classify_name, classify_describe, is_top, superior_classify_id,
		status, remark, sort, is_delete, creater, create_time
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.qz.zframe.material.entity.MaterialClassifyExample">
		select a.*,b.classify_name as superiorClassifyName,b.classify_describe as superClassifyDescribe,
		concat(a.classify_name,' ',a.classify_describe) as nameAndDescribe
from material_classify a left join  material_classify b on a.superior_classify_id= b.material_classify_id 
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<include refid="Pagination_Sql" />
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
select a.*,b.classify_name as superiorClassifyName,b.classify_describe as superClassifyDescribe,concat(a.classify_name,' ',a.classify_describe) as nameAndDescribe
from material_classify a left join  material_classify b on a.superior_classify_id= b.material_classify_id 
		where a.material_classify_id = #{materialClassifyId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from material_classify
		where material_classify_id = #{materialClassifyId,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.qz.zframe.material.entity.MaterialClassifyExample">
		delete from material_classify
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.qz.zframe.material.entity.MaterialClassify">
		insert into material_classify (material_classify_id, classify_name,
		classify_describe, is_top, superior_classify_id,
		status, remark, sort,
		is_delete, creater, create_time
		)
		values (#{materialClassifyId,jdbcType=VARCHAR},
		#{classifyName,jdbcType=VARCHAR},
		#{classifyDescribe,jdbcType=VARCHAR}, #{isTop,jdbcType=VARCHAR},
		#{superiorClassifyId,jdbcType=VARCHAR},
		#{status,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{sort,jdbcType=VARCHAR},
		#{isDelete,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR},
		#{create_time,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.qz.zframe.material.entity.MaterialClassify">
		insert into material_classify
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="materialClassifyId != null">
				material_classify_id,
			</if>
			<if test="classifyName != null">
				classify_name,
			</if>
			<if test="classifyDescribe != null">
				classify_describe,
			</if>
			<if test="isTop != null">
				is_top,
			</if>
			<if test="superiorClassifyId != null">
				superior_classify_id,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="sort != null">
				sort,
			</if>
			<if test="isDelete != null">
				is_delete,
			</if>
			<if test="creater != null">
				creater,
			</if>
				create_time,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="materialClassifyId != null">
				#{materialClassifyId,jdbcType=VARCHAR},
			</if>
			<if test="classifyName != null">
				#{classifyName,jdbcType=VARCHAR},
			</if>
			<if test="classifyDescribe != null">
				#{classifyDescribe,jdbcType=VARCHAR},
			</if>
			<if test="isTop != null">
				#{isTop,jdbcType=VARCHAR},
			</if>
			<if test="superiorClassifyId != null">
				#{superiorClassifyId,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=INTEGER},
			</if>
			<if test="isDelete != null">
				#{isDelete,jdbcType=VARCHAR},
			</if>
			<if test="creater != null">
				#{creater,jdbcType=VARCHAR},
			</if>
				now(),
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.qz.zframe.material.entity.MaterialClassifyExample"
		resultType="java.lang.Integer">
		select count(*) from material_classify a left join  material_classify b on a.superior_classify_id= b.material_classify_id 
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update material_classify
		<set>
			<if test="record.materialClassifyId != null">
				material_classify_id = #{record.materialClassifyId,jdbcType=VARCHAR},
			</if>
			<if test="record.classifyName != null">
				classify_name = #{record.classifyName,jdbcType=VARCHAR},
			</if>
			<if test="record.classifyDescribe != null">
				classify_describe = #{record.classifyDescribe,jdbcType=VARCHAR},
			</if>
			<if test="record.isTop != null">
				is_top = #{record.isTop,jdbcType=VARCHAR},
			</if>
			<if test="record.superiorClassifyId != null">
				superior_classify_id = #{record.superiorClassifyId,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=VARCHAR},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=VARCHAR},
			</if>
			<if test="record.sort != null">
				sort = #{record.sort,jdbcType=INTEGER},
			</if>
			<if test="record.isDelete != null">
				is_delete = #{record.isDelete,jdbcType=VARCHAR},
			</if>
			<if test="record.creater != null">
				creater = #{record.creater,jdbcType=VARCHAR},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update material_classify
		set material_classify_id = #{record.materialClassifyId,jdbcType=VARCHAR},
		classify_name = #{record.classifyName,jdbcType=VARCHAR},
		classify_describe = #{record.classifyDescribe,jdbcType=VARCHAR},
		is_top = #{record.isTop,jdbcType=VARCHAR},
		superior_classify_id = #{record.superiorClassifyId,jdbcType=VARCHAR},
		status = #{record.status,jdbcType=VARCHAR},
		remark = #{record.remark,jdbcType=VARCHAR},
		sort = #{record.sort,jdbcType=VARCHAR},
		is_delete = #{record.isDelete,jdbcType=VARCHAR},
		creater = #{record.creater,jdbcType=VARCHAR},
		create_time = #{record.createTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.material.entity.MaterialClassify">
		update material_classify
		<set>
			<if test="classifyName != null">
				classify_name = #{classifyName,jdbcType=VARCHAR},
			</if>
			<if test="classifyDescribe != null">
				classify_describe = #{classifyDescribe,jdbcType=VARCHAR},
			</if>
			<if test="isTop != null">
				is_top = #{isTop,jdbcType=VARCHAR},
			</if>
			<if test="superiorClassifyId != null">
				superior_classify_id = #{superiorClassifyId,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				sort = #{sort,jdbcType=INTEGER},
			</if>
			<if test="isDelete != null">
				is_delete = #{isDelete,jdbcType=VARCHAR},
			</if>
			<if test="creater != null">
				creater = #{creater,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where material_classify_id = #{materialClassifyId,jdbcType=VARCHAR}
	</update>
	
	
	<update id="updateByIsTopSelective" parameterType="com.qz.zframe.material.entity.MaterialClassify">
		update material_classify
		<set>
			<if test="classifyName != null">
				classify_name = #{classifyName,jdbcType=VARCHAR},
			</if>
			<if test="classifyDescribe != null">
				classify_describe = #{classifyDescribe,jdbcType=VARCHAR},
			</if>
			<if test="isTop != null">
				is_top = #{isTop,jdbcType=VARCHAR},
			</if>
			<if test="superiorClassifyId != null">
				superior_classify_id = #{superiorClassifyId,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				sort = #{sort,jdbcType=INTEGER},
			</if>
			<if test="isDelete != null">
				is_delete = #{isDelete,jdbcType=VARCHAR},
			</if>
			<if test="creater != null">
				creater = #{creater,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where superior_classify_id = #{superiorClassifyId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="com.qz.zframe.material.entity.MaterialClassify">
		update material_classify
		set classify_name = #{classifyName,jdbcType=VARCHAR},
		classify_describe = #{classifyDescribe,jdbcType=VARCHAR},
		is_top = #{isTop,jdbcType=VARCHAR},
		superior_classify_id = #{superiorClassifyId,jdbcType=VARCHAR},
		status = #{status,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		sort = #{sort,jdbcType=VARCHAR},
		is_delete = #{isDelete,jdbcType=VARCHAR},
		creater = #{creater,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP}
		where material_classify_id = #{materialClassifyId,jdbcType=VARCHAR}
	</update>
	
	 <update id="updateIsdete" parameterType="java.util.Map">
         update material_classify set is_delete=#{isDelete}  where material_classify_id in
        <foreach collection="materialClassifyIds" item="materialClassifyIds" open="(" separator="," close=")">
            #{materialClassifyIds}
        </foreach>
    </update>
    
    <select id="selectSon" parameterType="java.util.Map" resultType="java.lang.String">
       
         select material_classify_id from (
              select t1.material_classify_id, 
              if(find_in_set(superior_classify_id, @pids) > 0, @pids := concat(@pids, ',', material_classify_id), 0) as ischild
              from (
                   select material_classify_id,superior_classify_id from  material_classify  where is_delete=#{isDelete}
                  ) t1, 
                  (select @pids :=
                  <foreach collection="materialClassifyIds" item="materialClassifyIds" open="" separator="," close="">
            #{materialClassifyIds}
        </foreach>
        ) t2
             ) t3 where ischild != 0
    </select>
    
</mapper>