<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.material.dao.InInventoryMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.material.entity.InInventory" >
    <id column="in_inventory_id" property="inInventoryId" jdbcType="VARCHAR" />
    <result column="in_inventory_order" property="inInventoryOrder" jdbcType="VARCHAR" />
    <result column="goods_described" property="goodsDescribed" jdbcType="VARCHAR" />
    <result column="stock_add_id" property="stockAddId" jdbcType="VARCHAR" />
    <result column="stock_add_name" property="stockAddName" jdbcType="VARCHAR" />
    <result column="goods_type" property="typeCode" jdbcType="VARCHAR" />
    <result column="goodsTypeName" property="goodsTypeName" jdbcType="VARCHAR" />
    <result column="in_inventory_time" property="inInventoryTime" jdbcType="DATE" />
    <result column="contract_number" property="contractNumber" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="in_inventory_type" property="inInventoryType" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="VARCHAR" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="supplier_id" property="supplierId" jdbcType="VARCHAR" />
    <result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
    <result column="user_name" property="createName" jdbcType="VARCHAR" />
    <result column="approval_opinion" property="approvalOpinion" jdbcType="VARCHAR" />  
    <result column="architecture_id" property="architectureId" jdbcType="VARCHAR" />
    <result column="architecture_name" property="architectureName" jdbcType="VARCHAR" />
    <result column="companyName" property="companyName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Pagination_Sql">
		<if test="isPage == 1">
			limit
			#{pageIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
		</if>
	</sql>
  <sql id="Example_Where_Clause" >
  
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    in_inventory_id, in_inventory_order, goods_described, stock_add_id, goods_type, in_inventory_time, 
    wind_id, contract_number, company_id, in_inventory_type, is_delete, creater, create_time, 
    status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.material.entity.InInventoryExample" >
    select distinct a.*,b.architecture_name,c.stock_add_name,d.supplier_name,e.user_name,f.type_name as goodsTypeName,g.architecture_name as companyName
    from in_inventory a
    left join org_architecture b on a.architecture_id=b.architecture_id 
    left join stock_address c on a.stock_add_id = c.stock_add_id
    left join supplier d on a.supplier_id=d.supplier_id
    left join isc_user e on a.creater=e.user_id left join storehouse_type f on a.goods_type=f.type_code
    left join org_architecture g on a.company_id=g.architecture_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="Pagination_Sql" />
  </select>
  <select id="countByExample" parameterType="com.qz.zframe.material.entity.InInventoryExample" resultType="java.lang.Integer" >
    select count(distinct a.in_inventory_id) from in_inventory a  left join org_architecture b on a.architecture_id=b.architecture_id
    left join stock_address c on a.stock_add_id = c.stock_add_id
    left join supplier d on a.supplier_id=d.supplier_id
    left join isc_user e on a.creater=e.user_id left join storehouse_type f on a.goods_type=f.type_code
    left join org_architecture g on a.company_id=g.architecture_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
   select distinct a.*,b.architecture_name,c.stock_add_name,d.supplier_name,e.user_name,f.type_name as goodsTypeName,g.architecture_name as companyName
    from in_inventory a
    left join org_architecture b on a.architecture_id=b.architecture_id 
    left join stock_address c on a.stock_add_id = c.stock_add_id
    left join supplier d on a.supplier_id=d.supplier_id
    left join isc_user e on a.creater=e.user_id left join storehouse_type f on a.goods_type=f.type_code
    left join org_architecture g on a.company_id=g.architecture_id
    where a.in_inventory_id = #{inInventoryId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from in_inventory
    where in_inventory_id = #{inInventoryId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.material.entity.InInventoryExample" >
    delete from in_inventory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.material.entity.InInventory" >
    insert into in_inventory (in_inventory_id, in_inventory_order, 
      goods_described, stock_add_id, goods_type, 
      in_inventory_time, architecture_id, contract_number, 
      company_id, in_inventory_type, is_delete, 
      creater, create_time, status
      )
    values (#{inInventoryId,jdbcType=VARCHAR}, #{inInventoryOrder,jdbcType=VARCHAR}, 
      #{goodsDescribed,jdbcType=VARCHAR}, #{stockAddId,jdbcType=VARCHAR}, #{typeCode,jdbcType=VARCHAR},
      #{inInventoryTime,jdbcType=DATE}, #{architectureId,jdbcType=VARCHAR}, #{contractNumber,jdbcType=VARCHAR}, 
      #{companyId,jdbcType=VARCHAR}, #{inInventoryType,jdbcType=VARCHAR}, #{isDelete,jdbcType=VARCHAR}, 
      #{creater,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.material.entity.InInventory" >
    insert into in_inventory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="inInventoryId != null" >
        in_inventory_id,
      </if>
      <if test="inInventoryOrder != null" >
        in_inventory_order,
      </if>
      <if test="goodsDescribed != null" >
        goods_described,
      </if>
      <if test="stockAddId != null" >
        stock_add_id,
      </if>
      <if test="typeCode != null" >
        goods_type,
      </if>
      <if test="inInventoryTime != null" >
        in_inventory_time,
      </if>
      <if test="architectureId != null" >
        architecture_id,
      </if>
      <if test="contractNumber != null" >
        contract_number,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="inInventoryType != null" >
        in_inventory_type,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime !=null">
        create_time,
      </if> 
      <if test="status != null" >
        status,
      </if>
       <if test="supplierId != null" >
        supplier_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="inInventoryId != null" >
        #{inInventoryId,jdbcType=VARCHAR},
      </if>
      <if test="inInventoryOrder != null" >
        #{inInventoryOrder,jdbcType=VARCHAR},
      </if>
      <if test="goodsDescribed != null" >
        #{goodsDescribed,jdbcType=VARCHAR},
      </if>
      <if test="stockAddId != null" >
        #{stockAddId,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null" >
        #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="inInventoryTime != null" >
        #{inInventoryTime,jdbcType=DATE},
      </if>
      <if test="architectureId != null" >
        #{architectureId,jdbcType=VARCHAR},
      </if>
      <if test="contractNumber != null" >
        #{contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="inInventoryType != null" >
        #{inInventoryType,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
     <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update in_inventory a
    <set >
      <if test="record.inInventoryId != null" >
        in_inventory_id = #{record.inInventoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.inInventoryOrder != null" >
        in_inventory_order = #{record.inInventoryOrder,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsDescribed != null" >
        goods_described = #{record.goodsDescribed,jdbcType=VARCHAR},
      </if>
      <if test="record.stockAddId != null" >
        stock_add_id = #{record.stockAddId,jdbcType=VARCHAR},
      </if>
      <if test="record.typeCode != null" >
        goods_type = #{record.typeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.inInventoryTime != null" >
        in_inventory_time = #{record.inInventoryTime,jdbcType=DATE},
      </if>
      <if test="record.architectureId != null" >
        architecture_id = #{record.architectureId,jdbcType=VARCHAR},
      </if>
      <if test="record.contractNumber != null" >
        contract_number = #{record.contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.inInventoryType != null" >
        in_inventory_type = #{record.inInventoryType,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
       <if test="record.supplierId != null" >
        supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      </if>
      <if test="record.approvalOpinion != null" >
        approval_opinion = #{record.approvalOpinion,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update in_inventory
    set in_inventory_id = #{record.inInventoryId,jdbcType=VARCHAR},
      in_inventory_order = #{record.inInventoryOrder,jdbcType=VARCHAR},
      goods_described = #{record.goodsDescribed,jdbcType=VARCHAR},
      stock_add_id = #{record.stockAddId,jdbcType=VARCHAR},
      goods_type = #{record.typeCode,jdbcType=VARCHAR},
      in_inventory_time = #{record.inInventoryTime,jdbcType=DATE},
      wind_id = #{record.windId,jdbcType=INTEGER},
      contract_number = #{record.contractNumber,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      in_inventory_type = #{record.inInventoryType,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=VARCHAR},
      creater = #{record.creater,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.material.entity.InInventory" >
    update in_inventory
    <set >
      <if test="inInventoryOrder != null" >
        in_inventory_order = #{inInventoryOrder,jdbcType=VARCHAR},
      </if>
      <if test="goodsDescribed != null" >
        goods_described = #{goodsDescribed,jdbcType=VARCHAR},
      </if>
      <if test="stockAddId != null" >
        stock_add_id = #{stockAddId,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null" >
        goods_type = #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="inInventoryTime != null" >
        in_inventory_time = #{inInventoryTime,jdbcType=DATE},
      </if>
      <if test="architectureId != null" >
        architecture_id = #{architectureId,jdbcType=VARCHAR},
      </if>
      <if test="contractNumber != null" >
        contract_number = #{contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="inInventoryType != null" >
        in_inventory_type = #{inInventoryType,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=VARCHAR},
      </if>
       <if test="approvalOpinion != null" >
        approval_opinion = #{approvalOpinion,jdbcType=VARCHAR},
      </if>  
    </set>
    where in_inventory_id = #{inInventoryId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.material.entity.InInventory" >
    update in_inventory
    set in_inventory_order = #{inInventoryOrder,jdbcType=VARCHAR},
      goods_described = #{goodsDescribed,jdbcType=VARCHAR},
      stock_add_id = #{stockAddId,jdbcType=VARCHAR},
      goods_type = #{typeCode,jdbcType=VARCHAR},
      in_inventory_time = #{inInventoryTime,jdbcType=DATE},
      wind_id = #{windId,jdbcType=INTEGER},
      contract_number = #{contractNumber,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=VARCHAR},
      in_inventory_type = #{inInventoryType,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where in_inventory_id = #{inInventoryId,jdbcType=VARCHAR}
  </update>
  
  <delete id="delByInInventoryId"  parameterType="java.lang.String" >
   delete from in_inventory 
    where in_inventory_id = #{inInventoryId,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteByIds" parameterType="java.util.List">
         delete from in_inventory where in_inventory_id in
         <foreach item="inInventoryIds" collection="list" open="(" close=")" separator=",">
           #{inInventoryIds}
         </foreach>
 </delete>
  
  <select id="getMaxInInventoryOrder" resultType="java.lang.String"  parameterType= "java.lang.String">
   select max(in_inventory_order) from in_inventory where in_inventory_type=#{inInventoryType}
  </select>
  
  <select id="getNegativeByTypeCode" resultType="java.lang.String">
    select is_negative from storehouse_type where type_code = #{typeCode} and is_delete = '01'
  </select>
  
</mapper>