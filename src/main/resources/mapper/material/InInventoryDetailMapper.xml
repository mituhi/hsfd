<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.material.dao.InInventoryDetailMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.material.entity.InInventoryDetail" >
    <id column="in_inventory_detail_id" property="inInventoryDetailId" jdbcType="VARCHAR" />
    <result column="in_inventory_id" property="inInventoryId" jdbcType="VARCHAR" />
    <result column="material_id" property="materialId" jdbcType="VARCHAR" />
    <result column="goods_num" property="goodsNum" jdbcType="INTEGER" />
    <result column="tax_price" property="taxPrice" jdbcType="DECIMAL" />
    <result column="tax_amount" property="taxAmount" jdbcType="DECIMAL" />
    <result column="tax_bill" property="taxBill" jdbcType="VARCHAR" />
    <result column="un_tax_price" property="unTaxPrice" jdbcType="DECIMAL" />
    <result column="check_results" property="checkResults" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="manufacture_day" property="manufactureDay" jdbcType="DATE" />
    <result column="net_price" property="netPrice" jdbcType="DECIMAL" />
    <result column="net_worth" property="netWorth" jdbcType="DECIMAL" />
	<result column="material_code" property="materialCode" jdbcType="VARCHAR" />
	<result column="material_name" property="materialName" jdbcType="VARCHAR" />
	<result column="specifications" property="specifications" jdbcType="VARCHAR" />
	<result column="measuring_unit" property="measuringUnit"  jdbcType="VARCHAR" />
    
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    in_inventory_detail_id, in_inventory_id, material_id, goods_num, tax_price, tax_amount, 
    tax_bill, un_tax_price, check_results, remark, manufacture_day, net_price, net_worth
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.material.entity.InInventoryDetailExample" >
    select a.*,b.material_code,b.material_name,b.specifications,b.measuring_unit  from in_inventory_detail a left join material b on a.material_id=b.material_id 
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
     select a.*,b.material_code,b.material_name,b.specifications,b.measuring_unit  from in_inventory_detail a left join material b on a.material_id=b.material_id 
    where a.in_inventory_detail_id = #{inInventoryDetailId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from in_inventory_detail
    where in_inventory_detail_id = #{inInventoryDetailId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.material.entity.InInventoryDetailExample" >
    delete from in_inventory_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.material.entity.InInventoryDetail" >
    insert into in_inventory_detail (in_inventory_detail_id, in_inventory_id, 
      material_id, goods_num, tax_price, 
      tax_amount, tax_bill, un_tax_price, 
      check_results, remark, manufacture_day, 
      net_price, net_worth)
    values (#{inInventoryDetailId,jdbcType=VARCHAR}, #{inInventoryId,jdbcType=VARCHAR}, 
      #{materialId,jdbcType=VARCHAR}, #{goodsNum,jdbcType=INTEGER}, #{taxPrice,jdbcType=DECIMAL}, 
      #{taxAmount,jdbcType=DECIMAL}, #{taxBill,jdbcType=VARCHAR}, #{unTaxPrice,jdbcType=DECIMAL}, 
      #{checkResults,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{manufactureDay,jdbcType=DATE}, 
      #{netPrice,jdbcType=DECIMAL}, #{netWorth,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.material.entity.InInventoryDetail" >
    insert into in_inventory_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="inInventoryDetailId != null" >
        in_inventory_detail_id,
      </if>
      <if test="inInventoryId != null" >
        in_inventory_id,
      </if>
      <if test="materialId != null" >
        material_id,
      </if>
      <if test="goodsNum != null" >
        goods_num,
      </if>
      <if test="taxPrice != null" >
        tax_price,
      </if>
      <if test="taxAmount != null" >
        tax_amount,
      </if>
      <if test="taxBill != null" >
        tax_bill,
      </if>
      <if test="unTaxPrice != null" >
        un_tax_price,
      </if>
      <if test="checkResults != null" >
        check_results,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="manufactureDay != null" >
        manufacture_day,
      </if>
      <if test="netPrice != null" >
        net_price,
      </if>
      <if test="netWorth != null" >
        net_worth,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="inInventoryDetailId != null" >
        #{inInventoryDetailId,jdbcType=VARCHAR},
      </if>
      <if test="inInventoryId != null" >
        #{inInventoryId,jdbcType=VARCHAR},
      </if>
      <if test="materialId != null" >
        #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="goodsNum != null" >
        #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="taxPrice != null" >
        #{taxPrice,jdbcType=DECIMAL},
      </if>
      <if test="taxAmount != null" >
        #{taxAmount,jdbcType=DECIMAL},
      </if>
      <if test="taxBill != null" >
        #{taxBill,jdbcType=VARCHAR},
      </if>
      <if test="unTaxPrice != null" >
        #{unTaxPrice,jdbcType=DECIMAL},
      </if>
      <if test="checkResults != null" >
        #{checkResults,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="manufactureDay != null" >
        #{manufactureDay,jdbcType=DATE},
      </if>
      <if test="netPrice != null" >
        #{netPrice,jdbcType=DECIMAL},
      </if>
      <if test="netWorth != null" >
        #{netWorth,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.material.entity.InInventoryDetailExample" resultType="java.lang.Integer" >
    select count(*) from in_inventory_detail a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update in_inventory_detail
    <set >
      <if test="record.inInventoryDetailId != null" >
        in_inventory_detail_id = #{record.inInventoryDetailId,jdbcType=VARCHAR},
      </if>
      <if test="record.inInventoryId != null" >
        in_inventory_id = #{record.inInventoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.materialId != null" >
        material_id = #{record.materialId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsNum != null" >
        goods_num = #{record.goodsNum,jdbcType=INTEGER},
      </if>
      <if test="record.taxPrice != null" >
        tax_price = #{record.taxPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.taxAmount != null" >
        tax_amount = #{record.taxAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.taxBill != null" >
        tax_bill = #{record.taxBill,jdbcType=VARCHAR},
      </if>
      <if test="record.unTaxPrice != null" >
        un_tax_price = #{record.unTaxPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.checkResults != null" >
        check_results = #{record.checkResults,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.manufactureDay != null" >
        manufacture_day = #{record.manufactureDay,jdbcType=DATE},
      </if>
      <if test="record.netPrice != null" >
        net_price = #{record.netPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.netWorth != null" >
        net_worth = #{record.netWorth,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update in_inventory_detail
    set in_inventory_detail_id = #{record.inInventoryDetailId,jdbcType=VARCHAR},
      in_inventory_id = #{record.inInventoryId,jdbcType=VARCHAR},
      material_id = #{record.materialId,jdbcType=VARCHAR},
      goods_num = #{record.goodsNum,jdbcType=INTEGER},
      tax_price = #{record.taxPrice,jdbcType=DECIMAL},
      tax_amount = #{record.taxAmount,jdbcType=DECIMAL},
      tax_bill = #{record.taxBill,jdbcType=VARCHAR},
      un_tax_price = #{record.unTaxPrice,jdbcType=DECIMAL},
      check_results = #{record.checkResults,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      manufacture_day = #{record.manufactureDay,jdbcType=DATE},
      net_price = #{record.netPrice,jdbcType=DECIMAL},
      net_worth = #{record.netWorth,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.material.entity.InInventoryDetail" >
    update in_inventory_detail
    <set >
      <if test="inInventoryId != null" >
        in_inventory_id = #{inInventoryId,jdbcType=VARCHAR},
      </if>
      <if test="materialId != null" >
        material_id = #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="goodsNum != null" >
        goods_num = #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="taxPrice != null" >
        tax_price = #{taxPrice,jdbcType=DECIMAL},
      </if>
      <if test="taxAmount != null" >
        tax_amount = #{taxAmount,jdbcType=DECIMAL},
      </if>
      <if test="taxBill != null" >
        tax_bill = #{taxBill,jdbcType=VARCHAR},
      </if>
      <if test="unTaxPrice != null" >
        un_tax_price = #{unTaxPrice,jdbcType=DECIMAL},
      </if>
      <if test="checkResults != null" >
        check_results = #{checkResults,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="manufactureDay != null" >
        manufacture_day = #{manufactureDay,jdbcType=DATE},
      </if>
      <if test="netPrice != null" >
        net_price = #{netPrice,jdbcType=DECIMAL},
      </if>
      <if test="netWorth != null" >
        net_worth = #{netWorth,jdbcType=DECIMAL},
      </if>
    </set>
    where in_inventory_detail_id = #{inInventoryDetailId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.material.entity.InInventoryDetail" >
    update in_inventory_detail
    set in_inventory_id = #{inInventoryId,jdbcType=VARCHAR},
      material_id = #{materialId,jdbcType=VARCHAR},
      goods_num = #{goodsNum,jdbcType=INTEGER},
      tax_price = #{taxPrice,jdbcType=DECIMAL},
      tax_amount = #{taxAmount,jdbcType=DECIMAL},
      tax_bill = #{taxBill,jdbcType=VARCHAR},
      un_tax_price = #{unTaxPrice,jdbcType=DECIMAL},
      check_results = #{checkResults,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      manufacture_day = #{manufactureDay,jdbcType=DATE},
      net_price = #{netPrice,jdbcType=DECIMAL},
      net_worth = #{netWorth,jdbcType=DECIMAL}
    where in_inventory_detail_id = #{inInventoryDetailId,jdbcType=VARCHAR}
  </update>
  
   <delete id="deleteByIds"  parameterType="java.util.List" >
   delete from in_inventory_detail 
    where in_inventory_id in 
     <foreach item="inInventoryIds" collection="list" open="(" close=")" separator=",">
             #{inInventoryIds}
     </foreach>
  </delete>
  
  <delete id="delByInInventoryId"  parameterType="java.lang.String" >
   delete from in_inventory_detail  where in_inventory_id = #{inInventoryId}
  </delete>
  
</mapper>