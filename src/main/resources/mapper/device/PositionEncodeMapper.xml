<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.device.dao.PositionEncodeMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.device.entity.PositionEncode" >
    <id column="position_id" property="positionId" jdbcType="VARCHAR" />
    <result column="position_code" property="positionCode" jdbcType="VARCHAR" />
    <result column="position_name" property="positionName" jdbcType="VARCHAR" />
    <result column="superior_position" property="superiorPosition" jdbcType="VARCHAR" />
     <result column="superior_position_name" property="superiorPositionName" jdbcType="VARCHAR" />
    <result column="wind_id" property="windId" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="hierarchy" property="hierarchy" jdbcType="VARCHAR" />
    <result column="crew" property="crew" jdbcType="VARCHAR" />
    <result column="company_code" property="companyCode" jdbcType="VARCHAR" />
    <result column="cost_center" property="costCenter" jdbcType="VARCHAR" />
    <result column="maintenance_team" property="maintenanceTeam" jdbcType="VARCHAR" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="is_toplevel" jdbcType="VARCHAR" property="isToplevel" />
    <result column="wind_name" property="windName" jdbcType="VARCHAR" />
    <result column="crew_name" property="crewName" jdbcType="VARCHAR" />
    <result column="status_name" jdbcType="VARCHAR" property="statusName" />
    <result column="is_toplevel_name" jdbcType="VARCHAR" property="isToplevelName" />
    <result column="company_code_name" jdbcType="VARCHAR" property="companyCodeName" />
    <result column="maintenance_team_name" jdbcType="VARCHAR" property="maintenanceTeamName" />
    <result column="hierarchy_name" property="hierarchyName" jdbcType="VARCHAR" />
    <result column="cost_center_name" property="costCenterName" jdbcType="VARCHAR" />
    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
  </resultMap>
  
    <sql id="Pagination_Sql">
		<if test="isPage == 1">
			limit #{pageIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
		</if>
		</sql>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    position_id, position_code, position_name, superior_position, wind_id, department, superior_position_name,
    hierarchy, crew, company_code, cost_center, maintenance_team,is_toplevel,status,
    wind_name,crew_name,status_name,is_toplevel_name,company_code_name,maintenance_team_name,hierarchy_name,cost_center_name,create_time,
    department_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.device.entity.PositionEncodeExample" >
    select 
    <include refid="Base_Column_List" /> 
    from (
    select  
    p.*,
    a.title as status_name ,sc.title as is_toplevel_name ,f.architecture_name as wind_name,
	  c.crew_name as crew_name,g.architecture_code as company_code_name,h.architecture_name as maintenance_team_name,
	  k.architecture_name as cost_center_name,scc.title as hierarchy_name,j.architecture_name as department_name
    from position_encode p
    left join  (select * from org_architecture where architecture_type='02') f  on f.architecture_code=p.wind_id
	left join  (select * from org_architecture where architecture_type='01') g  on g.architecture_id=p.company_code
	left join  (select * from org_architecture where architecture_type='03') j  on j.architecture_id=p.department
	left join  (select * from org_architecture where architecture_type='04') h  on h.architecture_id=p.maintenance_team
	left join  (select * from org_architecture where architecture_type='05') k  on k.architecture_id=p.cost_center
    left join crew_information  c on  c.crew_id=p.crew
    LEFT JOIN sp_code a ON p.STATUS = a.NAME 
    LEFT JOIN sp_code_type b ON a.code_type_id = b.id
	LEFT JOIN sp_code sc ON p.is_toplevel = sc.name 
	LEFT JOIN sp_code_type d ON sc.code_type_id = d.id 
	LEFT JOIN sp_code scc ON p.hierarchy = scc.name 
	LEFT JOIN sp_code_type m  ON scc.code_type_id = m.id 
	WHERE
	b.NAME = 'POSITION_STATUS' 
	AND d.NAME = 'IS_TOPLEVEL' and  m.name='HIERARCHY_TYPE')p
   <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="Pagination_Sql" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select  
    p.*,
   <!--  a.title as status_name ,sc.title as is_toplevel_name , -->f.architecture_name as wind_name,
	  c.crew_name as crew_name,<!-- g.architecture_code as company_code_name, -->h.architecture_name as maintenance_team_name,
	  <!-- k.architecture_name as cost_center_name, --><!-- scc.title as hierarchy_name, -->j.architecture_name as department_name
    from position_encode p
    left join  (select * from org_architecture where architecture_type='02') f  on f.architecture_code=p.wind_id
<!-- 	left join  (select * from org_architecture where architecture_type='01') g  on g.architecture_id=p.company_code -->
	left join  (select * from org_architecture where architecture_type='03') j  on j.architecture_id=p.department
	left join  (select * from org_architecture where architecture_type='04') h  on h.architecture_id=p.maintenance_team
	<!-- left join  (select * from org_architecture where architecture_type='05') k  on k.architecture_id=p.cost_center -->
    left join crew_information  c on  c.crew_id=p.crew
<!--     LEFT JOIN sp_code a ON p.STATUS = a.NAME 
    LEFT JOIN sp_code_type b ON a.code_type_id = b.id
	LEFT JOIN sp_code sc ON p.is_toplevel = sc.name 
	LEFT JOIN sp_code_type d ON sc.code_type_id = d.id 
	LEFT JOIN sp_code scc ON p.hierarchy = scc.name 
	LEFT JOIN sp_code_type m  ON scc.code_type_id = m.id 
	WHERE
	 b.NAME = 'POSITION_STATUS' 
	AND d.NAME = 'IS_TOPLEVEL' and  m.name='HIERARCHY_TYPE'  -->
   where  p.position_id = #{positionId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectBySuperPosition" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select  
    p.*,
    a.title as status_name ,sc.title as is_toplevel_name ,f.architecture_name as wind_name,
	  c.crew_name as crew_name,g.architecture_code as company_code_name,h.architecture_name as maintenance_team_name,
	  k.architecture_name as cost_center_name,scc.title as hierarchy_name,j.architecture_name as department_name
    from position_encode p
    left join  (select * from org_architecture where architecture_type='02') f  on f.architecture_code=p.wind_id
	left join  (select * from org_architecture where architecture_type='01') g  on g.architecture_id=p.company_code
	left join  (select * from org_architecture where architecture_type='03') j  on j.architecture_id=p.department
	left join  (select * from org_architecture where architecture_type='04') h  on h.architecture_id=p.maintenance_team
	left join  (select * from org_architecture where architecture_type='05') k  on k.architecture_id=p.cost_center
    left join crew_information  c on  c.crew_id=p.crew
    LEFT JOIN sp_code a ON p.STATUS = a.NAME 
    LEFT JOIN sp_code_type b ON a.code_type_id = b.id
	LEFT JOIN sp_code sc ON p.is_toplevel = sc.name 
	LEFT JOIN sp_code_type d ON sc.code_type_id = d.id 
	LEFT JOIN sp_code scc ON p.hierarchy = scc.name 
	LEFT JOIN sp_code_type m  ON scc.code_type_id = m.id 
	WHERE
	b.NAME = 'POSITION_STATUS' 
	AND d.NAME = 'IS_TOPLEVEL' and  m.name='HIERARCHY_TYPE'
    and  p.superior_position = #{positionId,jdbcType=VARCHAR}
  </select>
  
  
  <select id="selectByIdAndCodeAndName" resultMap="BaseResultMap" parameterType="java.lang.String" >
<!--     select p.* from ( -->
    
    select  
    p.*,
    a.title as status_name ,sc.title as is_toplevel_name ,f.architecture_name as wind_name,
	  c.crew_name as crew_name,g.architecture_code as company_code_name,h.architecture_name as maintenance_team_name,
	  k.architecture_name as cost_center_name,scc.title as hierarchy_name,j.architecture_name as department_name
    from position_encode p
    left join  (select * from org_architecture where architecture_type='02') f  on f.architecture_code=p.wind_id
	left join  (select * from org_architecture where architecture_type='01') g  on g.architecture_id=p.company_code
	left join  (select * from org_architecture where architecture_type='03') j  on j.architecture_id=p.department
	left join  (select * from org_architecture where architecture_type='04') h  on h.architecture_id=p.maintenance_team
	left join  (select * from org_architecture where architecture_type='05') k  on k.architecture_id=p.cost_center
    left join crew_information  c on  c.crew_id=p.crew
    LEFT JOIN sp_code a ON p.STATUS = a.NAME 
    LEFT JOIN sp_code_type b ON a.code_type_id = b.id
	LEFT JOIN sp_code sc ON p.is_toplevel = sc.name 
	LEFT JOIN sp_code_type d ON sc.code_type_id = d.id 
	LEFT JOIN sp_code scc ON p.hierarchy = scc.name 
	LEFT JOIN sp_code_type m  ON scc.code_type_id = m.id 
	WHERE
	b.NAME = 'POSITION_STATUS' 
	AND d.NAME = 'IS_TOPLEVEL' and  m.name='HIERARCHY_TYPE'<!-- ) p -->  and position_id = #{positionId,jdbcType=VARCHAR}
   <!--  <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if> -->
  </select>
  
  <select id="selectStructure" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
     p.*
    from position_encode  p  where  p.status='01' 
  </select>
  
  <select id="selectIsTop" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
     p.*
    from position_encode  p  where  p.status='01'  and  p.is_toplevel='01'
    <if test=" windId !=null ">
        and  p.wind_id=#{windId}
    </if>
  </select>
  
  <select id="selectNotIsTop" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
     p.*
    from position_encode  p  where  p.status='01'  and  p.is_toplevel='02'
    <if test=" windId !=null ">
        and  p.wind_id=#{windId}
    </if>
  </select>
  
  <select id="selectStructureAndHierarchy1" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
     p.*
    from position_encode  p  where  p.status='01'  
    
    <if test=" windId !=null ">
        and  p.wind_id=#{windId}
    </if>
  </select>
  <select id="selectStructureAndHierarchy2" resultMap="BaseResultMap" parameterType="String">
    select 
     p.*
    from  position_encode  p  where  p.status='01' and  p.hierarchy=#{hierarchy,jdbcType=VARCHAR} and  p.wind_id=#{windId,jdbcType=VARCHAR}
    
  </select>
  <!-- <select id="selectStructureAndHierarchy3" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
     p.*
    from position_encode  p  where  p.status='01'and  p.hierarchy='03' order by wind_id
  </select>
  <select id="selectStructureAndHierarchy4" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
     p.*
    from position_encode  p  where  p.status='01' and  p.hierarchy='04' order by wind_id
  </select>
  <select id="selectStructureAndHierarchy5" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
     p.*
    from position_encode  p  where  p.status='01' and  p.hierarchy='05' order by wind_id
  </select> 
   -->
  
  
  
   <select id="selectStructures" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
     p.*
    from position_encode p  where  p.is_toplevel='01'  and p.status='01'
  </select>
  
   <select id="selectStructureList" parameterType="java.lang.String" resultMap="BaseResultMap">
       select  
    p.*,
    a.title as status_name ,sc.title as is_toplevel_name ,f.architecture_name as wind_name,
	  c.crew_name as crew_name,g.architecture_code as company_code_name,h.architecture_name as maintenance_team_name,
	  k.architecture_name as cost_center_name,scc.title as hierarchy_name,j.architecture_name as department_name
    from position_encode p
    left join  (select * from org_architecture where architecture_type='02') f  on f.architecture_code=p.wind_id
	left join  (select * from org_architecture where architecture_type='01') g  on g.architecture_id=p.company_code
	left join  (select * from org_architecture where architecture_type='03') j  on j.architecture_id=p.department
	left join  (select * from org_architecture where architecture_type='04') h  on h.architecture_id=p.maintenance_team
	left join  (select * from org_architecture where architecture_type='05') k  on k.architecture_id=p.cost_center
    left join crew_information  c on  c.crew_id=p.crew
    LEFT JOIN sp_code a ON p.STATUS = a.NAME 
    LEFT JOIN sp_code_type b ON a.code_type_id = b.id
	LEFT JOIN sp_code sc ON p.is_toplevel = sc.name 
	LEFT JOIN sp_code_type d ON sc.code_type_id = d.id 
	LEFT JOIN sp_code scc ON p.hierarchy = scc.name 
	LEFT JOIN sp_code_type m  ON scc.code_type_id = m.id 
	WHERE
	b.NAME = 'POSITION_STATUS' 
	AND d.NAME = 'IS_TOPLEVEL' and  m.name='HIERARCHY_TYPE'
    and  p.superior_position=#{positionId,jdbcType=VARCHAR}
  </select>
  
   <select id="selectByPositionCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
     p.*
    from position_encode p  where p.status='01' and   p.position_code=#{positionCode,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap"  parameterType="com.qz.zframe.device.entity.PositionEncode" >
  
     select  p.*  from  position_encode p  where p.status='01'
  
  </select>
  
      <!--根据风电场id 查询位置信息 -->
  <select id="selectByWindId" resultMap="BaseResultMap" parameterType="java.lang.String" >
      select  p.*   from  position_encode  p
      left join  (select * from org_architecture where architecture_type='02') f  on f.architecture_code=p.wind_id
      where  p.wind_id =#{windId,jdbcType=VARCHAR}
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from position_encode
    where position_id = #{positionId,jdbcType=VARCHAR}
  </delete>
  
   <delete id="deleteByPrimaryKeyList" parameterType="java.lang.String" >
    delete from position_encode
   <where>
    position_id   in 
     <foreach collection="list" item="items" open="(" separator="," close=")"> 
           #{items}
        </foreach>       
    </where>
  </delete>
  
  <delete id="deleteByExample" parameterType="com.qz.zframe.device.entity.PositionEncodeExample" >
    delete from position_encode
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.device.entity.PositionEncode" >
    insert into position_encode (position_id, position_code, position_name, 
      superior_position, wind_id, department, is_toplevel,status,
      hierarchy, crew, company_code, 
      cost_center, maintenance_team,superior_position_name,create_time)
    values (#{positionId,jdbcType=VARCHAR}, #{positionCode,jdbcType=VARCHAR}, #{positionName,jdbcType=VARCHAR}, 
      #{superiorPosition,jdbcType=VARCHAR}, #{windId,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, 
      #{isToplevel,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR},
      #{hierarchy,jdbcType=VARCHAR}, #{crew,jdbcType=VARCHAR}, #{companyCode,jdbcType=VARCHAR}, 
      #{costCenter,jdbcType=VARCHAR}, #{maintenanceTeam,jdbcType=VARCHAR},#{superiorPositionName,jdbcType=VARCHAR},#{createTime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.device.entity.PositionEncode" >
    insert into position_encode
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="positionId != null" >
        position_id,
      </if>
      <if test="positionCode != null" >
        position_code,
      </if>
      <if test="positionName != null" >
        position_name,
      </if>
      <if test="superiorPosition != null" >
        superior_position,
      </if>
      <if test="windId != null" >
        wind_id,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="hierarchy != null" >
        hierarchy,
      </if>
      <if test="crew != null" >
        crew,
      </if>
      <if test="companyCode != null" >
        company_code,
      </if>
      <if test="costCenter != null" >
        cost_center,
      </if>
      <if test="maintenanceTeam != null" >
        maintenance_team,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="positionId != null" >
        #{positionId,jdbcType=VARCHAR},
      </if>
      <if test="positionCode != null" >
        #{positionCode,jdbcType=VARCHAR},
      </if>
      <if test="positionName != null" >
        #{positionName,jdbcType=VARCHAR},
      </if>
      <if test="superiorPosition != null" >
        #{superiorPosition,jdbcType=VARCHAR},
      </if>
      <if test="windId != null" >
        #{windId,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="hierarchy != null" >
        #{hierarchy,jdbcType=VARCHAR},
      </if>
      <if test="crew != null" >
        #{crew,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null" >
        #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="costCenter != null" >
        #{costCenter,jdbcType=VARCHAR},
      </if>
      <if test="maintenanceTeam != null" >
        #{maintenanceTeam,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.device.entity.PositionEncodeExample" resultType="java.lang.Integer" >
    select count(*) from  (select  
    p.*,
    a.title as status_name ,sc.title as is_toplevel_name ,f.architecture_name as wind_name,
	  c.crew_name as crew_name,g.architecture_code as company_code_name,h.architecture_name as maintenance_team_name,
	  k.architecture_name as cost_center_name,scc.title as hierarchy_name,j.architecture_name as department_name
    from position_encode p
    left join  (select * from org_architecture where architecture_type='02') f  on f.architecture_code=p.wind_id
	left join  (select * from org_architecture where architecture_type='01') g  on g.architecture_id=p.company_code
	left join  (select * from org_architecture where architecture_type='03') j  on j.architecture_id=p.department
	left join  (select * from org_architecture where architecture_type='04') h  on h.architecture_id=p.maintenance_team
	left join  (select * from org_architecture where architecture_type='05') k  on k.architecture_id=p.cost_center
    left join crew_information  c on  c.crew_id=p.crew
    LEFT JOIN sp_code a ON p.STATUS = a.NAME 
    LEFT JOIN sp_code_type b ON a.code_type_id = b.id
	LEFT JOIN sp_code sc ON p.is_toplevel = sc.name 
	LEFT JOIN sp_code_type d ON sc.code_type_id = d.id 
	LEFT JOIN sp_code scc ON p.hierarchy = scc.name 
	LEFT JOIN sp_code_type m  ON scc.code_type_id = m.id 
	WHERE
	b.NAME = 'POSITION_STATUS' 
	AND d.NAME = 'IS_TOPLEVEL' and  m.name='HIERARCHY_TYPE')p
   <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update position_encode
    <set >
      <if test="record.positionId != null" >
        position_id = #{record.positionId,jdbcType=VARCHAR},
      </if>
      <if test="record.positionCode != null" >
        position_code = #{record.positionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.positionName != null" >
        position_name = #{record.positionName,jdbcType=VARCHAR},
      </if>
      <if test="record.superiorPosition != null" >
        superior_position = #{record.superiorPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.windId != null" >
        wind_id = #{record.windId,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.hierarchy != null" >
        hierarchy = #{record.hierarchy,jdbcType=VARCHAR},
      </if>
      <if test="record.crew != null" >
        crew = #{record.crew,jdbcType=VARCHAR},
      </if>
      <if test="record.companyCode != null" >
        company_code = #{record.companyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.costCenter != null" >
        cost_center = #{record.costCenter,jdbcType=VARCHAR},
      </if>
      <if test="record.maintenanceTeam != null" >
        maintenance_team = #{record.maintenanceTeam,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update position_encode
    set position_id = #{record.positionId,jdbcType=VARCHAR},
      position_code = #{record.positionCode,jdbcType=VARCHAR},
      position_name = #{record.positionName,jdbcType=VARCHAR},
      superior_position = #{record.superiorPosition,jdbcType=VARCHAR},
      wind_id = #{record.windId,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      hierarchy = #{record.hierarchy,jdbcType=VARCHAR},
      crew = #{record.crew,jdbcType=VARCHAR},
      company_code = #{record.companyCode,jdbcType=VARCHAR},
      cost_center = #{record.costCenter,jdbcType=VARCHAR},
      maintenance_team = #{record.maintenanceTeam,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.device.entity.PositionEncode" >
    update position_encode
    <set >
      <if test="positionCode != null" >
        position_code = #{positionCode,jdbcType=VARCHAR},
      </if>
      <if test="positionName != null" >
        position_name = #{positionName,jdbcType=VARCHAR},
      </if>
      <if test="superiorPosition != null" >
        superior_position = #{superiorPosition,jdbcType=VARCHAR},
      </if>
      <if test="windId != null" >
        wind_id = #{windId,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="hierarchy != null" >
        hierarchy = #{hierarchy,jdbcType=VARCHAR},
      </if>
      <if test="crew != null" >
        crew = #{crew,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null" >
        company_code = #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="costCenter != null" >
        cost_center = #{costCenter,jdbcType=VARCHAR},
      </if>
      <if test="maintenanceTeam != null" >
        maintenance_team = #{maintenanceTeam,jdbcType=VARCHAR},
      </if>
    </set>
    where position_id = #{positionId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.device.entity.PositionEncode" >
    update position_encode
    set position_code = #{positionCode,jdbcType=VARCHAR},
      position_name = #{positionName,jdbcType=VARCHAR},
      is_toplevel=#{isToplevel,jdbcType=VARCHAR},
      status=#{status,jdbcType=VARCHAR},
      superior_position = #{superiorPosition,jdbcType=VARCHAR},
      superior_position_name=#{superiorPositionName,jdbcType=VARCHAR},
      wind_id = #{windId,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      hierarchy = #{hierarchy,jdbcType=VARCHAR},
      crew = #{crew,jdbcType=VARCHAR},
      company_code = #{companyCode,jdbcType=VARCHAR},
      cost_center = #{costCenter,jdbcType=VARCHAR},
      maintenance_team = #{maintenanceTeam,jdbcType=VARCHAR},
      create_time=#{createTime,jdbcType=DATE}
    where position_id = #{positionId,jdbcType=VARCHAR}
  </update>
</mapper>