<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.tickets.mapper.OperateTicketTypeMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.tickets.entity.OperateTicketType" >
    <id column="oper_ticket_type_id" property="operTicketTypeId" jdbcType="VARCHAR" />
    <result column="ticket_type_number" property="ticketTypeNumber" jdbcType="VARCHAR" />
    <result column="ticket_type_desc" property="ticketTypeDesc" jdbcType="VARCHAR" />
    <result column="ticket_type_name" property="ticketTypeName" jdbcType="VARCHAR" />
    <result column="maintainer" property="maintainer" jdbcType="VARCHAR" />
    <result column="maintain_date" property="maintainDate" jdbcType="DATE" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="wind_id" property="windId" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    oper_ticket_type_id, ticket_type_number, ticket_type_desc, ticket_type_name, maintainer, 
    maintain_date, status, wind_id, remark
  </sql>





  <update id="batchDelete" parameterType="java.lang.String">
    update operate_ticket_type set status = '0'
    where oper_ticket_type_id in
    <foreach collection="array" index="index" item="item"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
  <resultMap id="GetResultMap" type="com.qz.zframe.tickets.vo.OperateTicketTypeVo" >
    <id column="oper_ticket_type_id" property="operTicketTypeId" jdbcType="VARCHAR" />
    <result column="ticket_type_number" property="ticketTypeNumber" jdbcType="VARCHAR" />
    <result column="ticket_type_desc" property="ticketTypeDesc" jdbcType="VARCHAR" />
    <result column="ticket_type_name" property="ticketTypeName" jdbcType="VARCHAR" />
    <result column="maintainer" property="maintainer" jdbcType="VARCHAR" />
    <result column="maintain_date" property="maintainDate" jdbcType="DATE" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="wind_id" property="windId" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="wind_name" property="windName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Get_Column_List" >
    a.oper_ticket_type_id as oper_ticket_type_id, a.ticket_type_number as ticket_type_number, a.ticket_type_desc as ticket_type_desc,
    a.ticket_type_name as ticket_type_name, a.maintainer as maintainer, a.maintain_date as maintain_date,
    a.status as status, a.wind_id as wind_id, a.remark as remark,
    b.architecture_name as wind_name
  </sql>
  <select id="getOperateTicketTypeDetail" resultMap="GetResultMap">
    select
    <include refid="Get_Column_List" />
    from operate_ticket_type a
    left join org_architecture b on a.wind_id = b.architecture_id and architecture_type = '02'
    where a.status != '0' and a.oper_ticket_type_id = #{ticketTypeId}
  </select>
  <select id="getOperateTicketTypeList" resultMap="GetResultMap">
    select
    <include refid="Get_Column_List" />
    from operate_ticket_type a
    left join org_architecture b on a.wind_id = b.architecture_id and architecture_type = '02'
    where a.status != '0'
    order by a.ticket_type_number desc
    limit ${map.start},${map.pageSize}
  </select>
  <select id="getTotal" resultType="java.lang.Integer">
    select
    count(*)
    from operate_ticket_type
    where status != '0'
  </select>






  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.tickets.entity.OperateTicketTypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operate_ticket_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from operate_ticket_type
    where oper_ticket_type_id = #{operTicketTypeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from operate_ticket_type
    where oper_ticket_type_id = #{operTicketTypeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.tickets.entity.OperateTicketTypeExample" >
    delete from operate_ticket_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.tickets.entity.OperateTicketType" >
    insert into operate_ticket_type (oper_ticket_type_id, ticket_type_number, 
      ticket_type_desc, ticket_type_name, maintainer, 
      maintain_date, status, wind_id, 
      remark)
    values (#{operTicketTypeId,jdbcType=VARCHAR}, #{ticketTypeNumber,jdbcType=VARCHAR}, 
      #{ticketTypeDesc,jdbcType=VARCHAR}, #{ticketTypeName,jdbcType=VARCHAR}, #{maintainer,jdbcType=VARCHAR}, 
      #{maintainDate,jdbcType=DATE}, #{status,jdbcType=VARCHAR}, #{windId,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.tickets.entity.OperateTicketType" >
    insert into operate_ticket_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="operTicketTypeId != null" >
        oper_ticket_type_id,
      </if>
      <if test="ticketTypeNumber != null" >
        ticket_type_number,
      </if>
      <if test="ticketTypeDesc != null" >
        ticket_type_desc,
      </if>
      <if test="ticketTypeName != null" >
        ticket_type_name,
      </if>
      <if test="maintainer != null" >
        maintainer,
      </if>
      <if test="maintainDate != null" >
        maintain_date,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="windId != null" >
        wind_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="operTicketTypeId != null" >
        #{operTicketTypeId,jdbcType=VARCHAR},
      </if>
      <if test="ticketTypeNumber != null" >
        #{ticketTypeNumber,jdbcType=VARCHAR},
      </if>
      <if test="ticketTypeDesc != null" >
        #{ticketTypeDesc,jdbcType=VARCHAR},
      </if>
      <if test="ticketTypeName != null" >
        #{ticketTypeName,jdbcType=VARCHAR},
      </if>
      <if test="maintainer != null" >
        #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="maintainDate != null" >
        #{maintainDate,jdbcType=DATE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="windId != null" >
        #{windId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.tickets.entity.OperateTicketTypeExample" resultType="java.lang.Integer" >
    select count(*) from operate_ticket_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update operate_ticket_type
    <set >
      <if test="record.operTicketTypeId != null" >
        oper_ticket_type_id = #{record.operTicketTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketTypeNumber != null" >
        ticket_type_number = #{record.ticketTypeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketTypeDesc != null" >
        ticket_type_desc = #{record.ticketTypeDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketTypeName != null" >
        ticket_type_name = #{record.ticketTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.maintainer != null" >
        maintainer = #{record.maintainer,jdbcType=VARCHAR},
      </if>
      <if test="record.maintainDate != null" >
        maintain_date = #{record.maintainDate,jdbcType=DATE},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.windId != null" >
        wind_id = #{record.windId,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update operate_ticket_type
    set oper_ticket_type_id = #{record.operTicketTypeId,jdbcType=VARCHAR},
      ticket_type_number = #{record.ticketTypeNumber,jdbcType=VARCHAR},
      ticket_type_desc = #{record.ticketTypeDesc,jdbcType=VARCHAR},
      ticket_type_name = #{record.ticketTypeName,jdbcType=VARCHAR},
      maintainer = #{record.maintainer,jdbcType=VARCHAR},
      maintain_date = #{record.maintainDate,jdbcType=DATE},
      status = #{record.status,jdbcType=VARCHAR},
      wind_id = #{record.windId,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.tickets.entity.OperateTicketType" >
    update operate_ticket_type
    <set >
      <if test="ticketTypeNumber != null" >
        ticket_type_number = #{ticketTypeNumber,jdbcType=VARCHAR},
      </if>
      <if test="ticketTypeDesc != null" >
        ticket_type_desc = #{ticketTypeDesc,jdbcType=VARCHAR},
      </if>
      <if test="ticketTypeName != null" >
        ticket_type_name = #{ticketTypeName,jdbcType=VARCHAR},
      </if>
      <if test="maintainer != null" >
        maintainer = #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="maintainDate != null" >
        maintain_date = #{maintainDate,jdbcType=DATE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="windId != null" >
        wind_id = #{windId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where oper_ticket_type_id = #{operTicketTypeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.tickets.entity.OperateTicketType" >
    update operate_ticket_type
    set ticket_type_number = #{ticketTypeNumber,jdbcType=VARCHAR},
      ticket_type_desc = #{ticketTypeDesc,jdbcType=VARCHAR},
      ticket_type_name = #{ticketTypeName,jdbcType=VARCHAR},
      maintainer = #{maintainer,jdbcType=VARCHAR},
      maintain_date = #{maintainDate,jdbcType=DATE},
      status = #{status,jdbcType=VARCHAR},
      wind_id = #{windId,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where oper_ticket_type_id = #{operTicketTypeId,jdbcType=VARCHAR}
  </update>
</mapper>