<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.tickets.mapper.WorkTicketTypeMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.tickets.entity.WorkTicketType" >
    <id column="ticket_type_id" property="ticketTypeId" jdbcType="VARCHAR" />
    <result column="serial_number" property="serialNumber" jdbcType="VARCHAR" />
    <result column="ticket_type_name" property="ticketTypeName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="maintainer" property="maintainer" jdbcType="VARCHAR" />
    <result column="maintain_date" property="maintainDate" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ticket_type_id, serial_number, ticket_type_name, status, maintainer, maintain_date
  </sql>

  <update id="batchDelete" parameterType="java.lang.String">
    update work_ticket_type set status = "0"
    where ticket_type_id in
    <foreach collection="array" index="index" item="item"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.tickets.entity.WorkTicketTypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work_ticket_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from work_ticket_type
    where ticket_type_id = #{ticketTypeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from work_ticket_type
    where ticket_type_id = #{ticketTypeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.tickets.entity.WorkTicketTypeExample" >
    delete from work_ticket_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.tickets.entity.WorkTicketType" >
    insert into work_ticket_type (ticket_type_id, serial_number, ticket_type_name, 
      status, maintainer, maintain_date
      )
    values (#{ticketTypeId,jdbcType=VARCHAR}, #{serialNumber,jdbcType=VARCHAR}, #{ticketTypeName,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{maintainer,jdbcType=VARCHAR}, #{maintainDate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.tickets.entity.WorkTicketType" >
    insert into work_ticket_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ticketTypeId != null" >
        ticket_type_id,
      </if>
      <if test="serialNumber != null" >
        serial_number,
      </if>
      <if test="ticketTypeName != null" >
        ticket_type_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="maintainer != null" >
        maintainer,
      </if>
      <if test="maintainDate != null" >
        maintain_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ticketTypeId != null" >
        #{ticketTypeId,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null" >
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="ticketTypeName != null" >
        #{ticketTypeName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="maintainer != null" >
        #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="maintainDate != null" >
        #{maintainDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.tickets.entity.WorkTicketTypeExample" resultType="java.lang.Integer" >
    select count(*) from work_ticket_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update work_ticket_type
    <set >
      <if test="record.ticketTypeId != null" >
        ticket_type_id = #{record.ticketTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.serialNumber != null" >
        serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketTypeName != null" >
        ticket_type_name = #{record.ticketTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.maintainer != null" >
        maintainer = #{record.maintainer,jdbcType=VARCHAR},
      </if>
      <if test="record.maintainDate != null" >
        maintain_date = #{record.maintainDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update work_ticket_type
    set ticket_type_id = #{record.ticketTypeId,jdbcType=VARCHAR},
      serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      ticket_type_name = #{record.ticketTypeName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      maintainer = #{record.maintainer,jdbcType=VARCHAR},
      maintain_date = #{record.maintainDate,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.tickets.entity.WorkTicketType" >
    update work_ticket_type
    <set >
      <if test="serialNumber != null" >
        serial_number = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="ticketTypeName != null" >
        ticket_type_name = #{ticketTypeName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="maintainer != null" >
        maintainer = #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="maintainDate != null" >
        maintain_date = #{maintainDate,jdbcType=DATE},
      </if>
    </set>
    where ticket_type_id = #{ticketTypeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.tickets.entity.WorkTicketType" >
    update work_ticket_type
    set serial_number = #{serialNumber,jdbcType=VARCHAR},
      ticket_type_name = #{ticketTypeName,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      maintainer = #{maintainer,jdbcType=VARCHAR},
      maintain_date = #{maintainDate,jdbcType=DATE}
    where ticket_type_id = #{ticketTypeId,jdbcType=VARCHAR}
  </update>
</mapper>