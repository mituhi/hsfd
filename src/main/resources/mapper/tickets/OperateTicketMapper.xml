<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.tickets.mapper.OperateTicketMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.tickets.entity.OperateTicket" >
    <id column="ticket_id" property="ticketId" jdbcType="VARCHAR" />
    <result column="serial_number" property="serialNumber" jdbcType="VARCHAR" />
    <result column="oper_ticket_type_id" property="operTicketTypeId" jdbcType="VARCHAR" />
    <result column="typical_ticket_id" property="typicalTicketId" jdbcType="VARCHAR" />
    <result column="workorder_id" property="workorderId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="maintainer" property="maintainer" jdbcType="VARCHAR" />
    <result column="maintain_date" property="maintainDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="flow_step" property="flowStep" jdbcType="VARCHAR" />
    <result column="wind_id" property="windId" jdbcType="VARCHAR" />
    <result column="crew_id" property="crewId" jdbcType="VARCHAR" />
    <result column="applicant" property="applicant" jdbcType="VARCHAR" />
    <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP" />
    <result column="sender" property="sender" jdbcType="VARCHAR" />
    <result column="receiver" property="receiver" jdbcType="VARCHAR" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="work_team" property="workTeam" jdbcType="VARCHAR" />
    <result column="executer" property="executer" jdbcType="VARCHAR" />
    <result column="supervisior" property="supervisior" jdbcType="VARCHAR" />
    <result column="oper_start_time" property="operStartTime" jdbcType="TIMESTAMP" />
    <result column="oper_end_time" property="operEndTime" jdbcType="TIMESTAMP" />
    <result column="position_id" property="positionId" jdbcType="VARCHAR" />
    <result column="position_desc" property="positionDesc" jdbcType="VARCHAR" />
    <result column="equipment_id" property="equipmentId" jdbcType="VARCHAR" />
    <result column="equipment_desc" property="equipmentDesc" jdbcType="VARCHAR" />
    <result column="operate_content" property="operateContent" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ticket_id, serial_number, oper_ticket_type_id, typical_ticket_id, workorder_id, order_id, 
    maintainer, maintain_date, status, flow_step, wind_id, crew_id, applicant, apply_time, 
    sender, receiver, send_time, work_team, executer, supervisior, oper_start_time, oper_end_time, 
    position_id, position_desc, equipment_id, equipment_desc, operate_content
  </sql>





  <delete id="batchDeleteTrue" parameterType="java.lang.String">
    delete from operate_ticket
    where ticket_id in
    <foreach collection="list" index="index" item="item"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <update id="batchDeleteFalse" parameterType="java.lang.String">
    update operate_ticket set status = '0'
    where ticket_id in
    <foreach collection="list" index="index" item="item"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
  <update id="batchDeleteFalseByWorkorderIds" parameterType="java.lang.String">
    update operate_ticket set workorder_id = null
    where workorder_id in
    <foreach collection="list" index="index" item="item"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
  <update id="batchDeleteFalseByOrderIds" parameterType="java.lang.String">
    update operate_ticket set order_id = null
    where order_id in
    <foreach collection="list" index="index" item="item"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
  <resultMap id="GetResultMap" type="com.qz.zframe.tickets.vo.OperateTicketVo" >
    <id column="ticket_id" property="ticketId" jdbcType="VARCHAR" />
    <result column="serial_number" property="serialNumber" jdbcType="VARCHAR" />
    <result column="oper_ticket_type_id" property="operTicketTypeId" jdbcType="VARCHAR" />
    <result column="typical_ticket_id" property="typicalTicketId" jdbcType="VARCHAR" />
    <result column="workorder_id" property="workorderId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="maintainer" property="maintainer" jdbcType="VARCHAR" />
    <result column="maintain_date" property="maintainDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="flow_step" property="flowStep" jdbcType="VARCHAR" />
    <result column="wind_id" property="windId" jdbcType="VARCHAR" />
    <result column="crew_id" property="crewId" jdbcType="VARCHAR" />
    <result column="applicant" property="applicant" jdbcType="VARCHAR" />
    <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP" />
    <result column="sender" property="sender" jdbcType="VARCHAR" />
    <result column="receiver" property="receiver" jdbcType="VARCHAR" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="work_team" property="workTeam" jdbcType="VARCHAR" />
    <result column="executer" property="executer" jdbcType="VARCHAR" />
    <result column="supervisior" property="supervisior" jdbcType="VARCHAR" />
    <result column="oper_start_time" property="operStartTime" jdbcType="TIMESTAMP" />
    <result column="oper_end_time" property="operEndTime" jdbcType="TIMESTAMP" />
    <result column="position_id" property="positionId" jdbcType="VARCHAR" />
    <result column="position_desc" property="positionDesc" jdbcType="VARCHAR" />
    <result column="equipment_id" property="equipmentId" jdbcType="VARCHAR" />
    <result column="equipment_desc" property="equipmentDesc" jdbcType="VARCHAR" />
    <result column="operate_content" property="operateContent" jdbcType="VARCHAR" />
    <result column="wind_name" property="windName" jdbcType="VARCHAR" />
    <result column="crew_name" property="crewName" jdbcType="VARCHAR" />
    <result column="position_name" property="positionName" jdbcType="VARCHAR" />
    <result column="equipment_name" property="equipmentName" jdbcType="VARCHAR" />
    <result column="ticket_type_name" property="ticketTypeName" jdbcType="VARCHAR" />
    <result column="typical_ticket_name" property="typicalTicketName" jdbcType="VARCHAR" />
    <result column="flow_step_name" property="flowStatusName" jdbcType="VARCHAR" />
    <result column="work_team_name" property="workTeamName" jdbcType="VARCHAR" />
    <result column="maintainer_name" property="maintainerName" jdbcType="VARCHAR" />
    <result column="applicant_name" property="applicantName" jdbcType="VARCHAR" />
    <result column="sender_name" property="senderName" jdbcType="VARCHAR" />
    <result column="receiver_name" property="receiverName" jdbcType="VARCHAR" />
    <result column="executer_name" property="executerName" jdbcType="VARCHAR" />
    <result column="supervisior_name" property="supervisiorName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Get_Column_List" >
    a.ticket_id as ticket_id, a.serial_number as serial_number, a.oper_ticket_type_id as oper_ticket_type_id,
    a.typical_ticket_id as typical_ticket_id, a.workorder_id as workorder_id, a.order_id as order_id,
    a.maintainer as maintainer, a.maintain_date as maintain_date, a.status as status, a.flow_step as flow_step,
    a.wind_id as wind_id, a.crew_id as crew_id, a.applicant as applicant, a.apply_time as apply_time,
    a.sender as sender, a.receiver as receiver, a.send_time as send_time, a.work_team as work_team, a.executer as executer,
    a.supervisior as supervisior, a.oper_start_time as oper_start_time, a.oper_end_time as oper_end_time,
    a.position_id as position_id, a.position_desc as position_desc, a.equipment_id as equipment_id, a.equipment_desc as equipment_desc,
    a.operate_content as operate_content,
    b.architecture_name as wind_name,d.crew_name as crew_name,e.position_name as position_name,f.equipment_name as equipment_name,
    g.ticket_type_name as ticket_type_name,h.typical_ticket_name as typical_ticket_name,i.title as flow_step_name,j.architecture_name as work_team_name,
    ua.user_name as maintainer_name,ub.user_name as applicant_name,uc.user_name as sender_name,ud.user_name as receiver_name,ue.user_name as executer_name,
    uf.user_name as supervisior_name
  </sql>
  <select id="getOperateTicketDetail" resultMap="GetResultMap">
  select
  <include refid="Get_Column_List" />
  from operate_ticket a
  left join org_architecture b on a.wind_id = b.architecture_code and b.architecture_type = '02'
  left join crew_information d on a.crew_id = d.crew_id
  left join position_encode e on a.position_id = e.position_id
  left join equipment_asset_ledger f on a.equipment_id = f.equipment_asset_id
  left join operate_ticket_type g on a.oper_ticket_type_id = g.oper_ticket_type_id
  left join typical_operate_ticket h on a.typical_ticket_id = h.typical_ticket_id
  left join sp_code i on (a.flow_step = i.name and i.code_type_id = '1046')
  left join org_architecture j on a.work_team = j.architecture_id
  left join isc_user ua on a.maintainer = ua.user_id
  left join isc_user ub on a.applicant = ub.user_id
  left join isc_user uc on a.sender = uc.user_id
  left join isc_user ud on a.receiver = ud.user_id
  left join isc_user ue on a.executer = ue.user_id
  left join isc_user uf on a.supervisior = uf.user_id
  where a.status != '0' and a.ticket_id = #{ticketId}
  </select>
  <select id="getOperateTicketList" resultMap="GetResultMap">
    select
    distinct
    <include refid="Get_Column_List" />
    from operate_ticket a
    left join org_architecture b on (a.wind_id = b.architecture_code and b.architecture_type = '02')
    left join crew_information d on a.crew_id = d.crew_id
    left join position_encode e on a.position_id = e.position_id
    left join equipment_asset_ledger f on a.equipment_id = f.equipment_asset_id
    left join operate_ticket_type g on a.oper_ticket_type_id = g.oper_ticket_type_id
    left join typical_operate_ticket h on a.typical_ticket_id = h.typical_ticket_id
    left join sp_code i on (a.flow_step = i.name and i.code_type_id = '1046')
    left join org_architecture j on a.work_team = j.architecture_id
    left join isc_user ua on a.maintainer = ua.user_id
    left join isc_user ub on a.applicant = ub.user_id
    left join isc_user uc on a.sender = uc.user_id
    left join isc_user ud on a.receiver = ud.user_id
    left join isc_user ue on a.executer = ue.user_id
    left join isc_user uf on a.supervisior = uf.user_id
    left join process k on (a.ticket_id = k.order_id and k.process_status = '01')
    left join process_detail l on (k.process_id = l.process_id and ((k.process_sort+1) = l.sort))
    left join process_detail_role_rela m on l.process_detail_id = m.process_detail_id
    left join approve_record n on a.ticket_id = n.order_id
    left join isc_user ug on n.approve_user = ug.user_id
    where 1=1
    <if test="map.operTicketTypeId != null and map.operTicketTypeId != ''">
      and a.oper_ticket_type_id = #{map.operTicketTypeId}
    </if>
    <if test="map.startWindId != null and map.startWindId != '' and (map.endWindId == null or map.endWindId == '')" >
      and a.wind_id = #{map.startWindId}
    </if>
    <if test="map.startWindId != null and map.startWindId != '' and map.endWindId != null and map.endWindId != ''" >
      and (a.wind_id between #{map.startWindId} and #{map.endWindId})
    </if>
    <if test="map.approveUser == null or map.approveUser == ''">
      <if test="map.status == null or map.status == ''">
        and ((a.status = '01' or a.status = '02' or a.status = '04') or (a.status = '03' and a.maintainer = #{userId}))
      </if>
      <if test="map.status == '01' or map.status =='02' or map.status == '04'">
        and a.status = #{map.status}
      </if>
      <if test="map.status == '03'">
        and (a.status = #{map.status} and a.maintainer = #{userId})
      </if>
    </if>
    <if test="map.approveUser != null and map.approveUser != ''">
      and (((a.flow_step = '01')
      and (m.role_id in
      <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
        #{item.roleId}
      </foreach>
      or ug.user_name = #{map.approveUser}))
      or ((a.flow_step = '02' or a.flow_step = '03') and ug.user_name = #{map.approveUser}))
    </if>
    <if test="map.operateContent != null and map.operateContent != ''">
      and a.operate_content like '%${map.operateContent}%'
    </if>
    <if test="map.startTime != null and map.startTime != '' and (map.endTime == null and map.endTime == '')">
      and a.apply_time = #{map.startTime}
    </if>
    <if test="map.startTime != null and map.startTime != '' and map.endTime != null and map.endTime != ''">
      and (a.apply_time between #{map.startTime} and #{map.endTime})
    </if>
    order by a.serial_number is null desc,a.serial_number desc,a.maintain_date desc
    limit ${map.start},${map.pageSize};
  </select>
  <select id="getTotal" resultType="java.lang.Integer">
    select
    count(distinct a.ticket_id)
    from operate_ticket a
    left join org_architecture b on (a.wind_id = b.architecture_code and b.architecture_type = '02')
    left join crew_information d on a.crew_id = d.crew_id
    left join position_encode e on a.position_id = e.position_id
    left join equipment_asset_ledger f on a.equipment_id = f.equipment_asset_id
    left join operate_ticket_type g on a.oper_ticket_type_id = g.oper_ticket_type_id
    left join typical_operate_ticket h on a.typical_ticket_id = h.typical_ticket_id
    left join sp_code i on (a.flow_step = i.name and i.code_type_id = '1046')
    left join org_architecture j on a.work_team = j.architecture_id
    left join isc_user ua on a.maintainer = ua.user_id
    left join isc_user ub on a.applicant = ub.user_id
    left join isc_user uc on a.sender = uc.user_id
    left join isc_user ud on a.receiver = ud.user_id
    left join isc_user ue on a.executer = ue.user_id
    left join isc_user uf on a.supervisior = uf.user_id
    left join process k on (a.ticket_id = k.order_id and k.process_status = '01')
    left join process_detail l on (k.process_id = l.process_id and ((k.process_sort+1) = l.sort))
    left join process_detail_role_rela m on l.process_detail_id = m.process_detail_id
    left join approve_record n on a.ticket_id = n.order_id
    left join isc_user ug on n.approve_user = ug.user_id
    where 1=1
    <if test="map.operTicketTypeId != null and map.operTicketTypeId != ''">
      and a.oper_ticket_type_id = #{map.operTicketTypeId}
    </if>
    <if test="map.startWindId != null and map.startWindId != '' and (map.endWindId == null or map.endWindId == '')" >
      and a.wind_id = #{map.startWindId}
    </if>
    <if test="map.startWindId != null and map.startWindId != '' and map.endWindId != null and map.endWindId != ''" >
      and (a.wind_id between #{map.startWindId} and #{map.endWindId})
    </if>
    <if test="map.approveUser == null or map.approveUser == ''">
      <if test="map.status == null or map.status == ''">
        and ((a.status = '01' or a.status = '02' or a.status = '04') or (a.status = '03' and a.maintainer = #{userId}))
      </if>
      <if test="map.status == '01' or map.status =='02' or map.status == '04'">
        and a.status = #{map.status}
      </if>
      <if test="map.status == '03'">
        and (a.status = #{map.status} and a.maintainer = #{userId})
      </if>
    </if>
    <if test="map.approveUser != null and map.approveUser != ''">
      and (((a.flow_step = '01')
      and (m.role_id in
      <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
        #{item.roleId}
      </foreach>
      or ug.user_name = #{map.approveUser}))
      or ((a.flow_step = '02' or a.flow_step = '03') and ug.user_name = #{map.approveUser}))
    </if>
    <if test="map.operateContent != null and map.operateContent != ''">
      and a.operate_content like '%${map.operateContent}%'
    </if>
    <if test="map.startTime != null and map.startTime != '' and (map.endTime == null and map.endTime == '')">
      and a.apply_time = #{map.startTime}
    </if>
    <if test="map.startTime != null and map.startTime != '' and map.endTime != null and map.endTime != ''">
      and a.apply_time between #{map.startTime} and #{map.endTime}
    </if>
  </select>
  <select id="getOperateTicketListForWorkorder" resultMap="GetResultMap">
    select
    <include refid="Get_Column_List" />
    from operate_ticket a
    left join org_architecture b on a.wind_id = b.architecture_code and b.architecture_type = '02'
    left join crew_information d on a.crew_id = d.crew_id
    left join position_encode e on a.position_id = e.position_id
    left join equipment_asset_ledger f on a.equipment_id = f.equipment_asset_id
    left join operate_ticket_type g on a.oper_ticket_type_id = g.oper_ticket_type_id
    left join typical_operate_ticket h on a.typical_ticket_id = h.typical_ticket_id
    left join sp_code i on (a.flow_step = i.name and i.code_type_id = '1046')
    left join org_architecture j on a.work_team = j.architecture_id
    left join isc_user ua on a.maintainer = ua.user_id
    left join isc_user ub on a.applicant = ub.user_id
    left join isc_user uc on a.sender = uc.user_id
    left join isc_user ud on a.receiver = ud.user_id
    left join isc_user ue on a.executer = ue.user_id
    left join isc_user uf on a.supervisior = uf.user_id
    where a.status = '01' and a.workorder_id is null and a.order_id is null
    <if test="map.operTicketTypeId != null and map.operTicketTypeId != ''">
      and a.oper_ticket_type_id = #{map.operTicketTypeId}
    </if>
    <if test="map.startWindId != null and map.startWindId != '' and (map.endWindId == null or map.endWindId == '')" >
      and a.wind_id = #{map.startWindId}
    </if>
    <if test="map.startWindId != null and map.startWindId != '' and map.endWindId != null and map.endWindId != ''" >
      and (a.wind_id between #{map.startWindId} and #{map.endWindId})
    </if>
    <if test="map.operateContent != null and map.operateContent != ''">
      and a.operate_content like '%${map.operateContent}%'
    </if>
    <if test="map.startTime != null and map.startTime != '' and (map.endTime == null and map.endTime == '')">
      and a.apply_time = #{map.startTime}
    </if>
    <if test="map.startTime != null and map.startTime != '' and map.endTime != null and map.endTime != ''">
      and (a.apply_time between #{map.startTime} and #{map.endTime})
    </if>
    order by a.serial_number is null desc,a.serial_number desc,maintain_date desc
    limit ${map.start},${map.pageSize};
  </select>
  <select id="getTotalForWorkorder" resultType="java.lang.Integer">
    select
    count(*)
    from operate_ticket a
    left join org_architecture b on a.wind_id = b.architecture_code and b.architecture_type = '02'
    left join crew_information d on a.crew_id = d.crew_id
    left join position_encode e on a.position_id = e.position_id
    left join equipment_asset_ledger f on a.equipment_id = f.equipment_asset_id
    left join operate_ticket_type g on a.oper_ticket_type_id = g.oper_ticket_type_id
    left join typical_operate_ticket h on a.typical_ticket_id = h.typical_ticket_id
    left join sp_code i on (a.flow_step = i.name and i.code_type_id = '1046')
    left join org_architecture j on a.work_team = j.architecture_id
    left join isc_user ua on a.maintainer = ua.user_id
    left join isc_user ub on a.applicant = ub.user_id
    left join isc_user uc on a.sender = uc.user_id
    left join isc_user ud on a.receiver = ud.user_id
    left join isc_user ue on a.executer = ue.user_id
    left join isc_user uf on a.supervisior = uf.user_id
    where a.status = '01' and a.workorder_id is null and a.order_id is null
    <if test="map.operTicketTypeId != null and map.operTicketTypeId != ''">
      and a.oper_ticket_type_id = #{map.operTicketTypeId}
    </if>
    <if test="map.startWindId != null and map.startWindId != '' and (map.endWindId == null or map.endWindId == '')" >
      and a.wind_id = #{map.startWindId}
    </if>
    <if test="map.startWindId != null and map.startWindId != '' and map.endWindId != null and map.endWindId != ''" >
      and (a.wind_id between #{map.startWindId} and #{map.endWindId})
    </if>
    <if test="map.operateContent != null and map.operateContent != ''">
      and a.operate_content like '%${map.operateContent}%'
    </if>
    <if test="map.startTime != null and map.startTime != '' and (map.endTime == null and map.endTime == '')">
      and a.apply_time = #{map.startTime}
    </if>
    <if test="map.startTime != null and map.startTime != '' and map.endTime != null and map.endTime != ''">
      and a.apply_time between #{map.startTime} and #{map.endTime}
    </if>
  </select>
  <resultMap id="OperateTicketStatisticsMap" type="com.qz.zframe.tickets.vo.TicketStatisticsRes">
    <result column="wind_id" property="windId" jdbcType="VARCHAR" />
    <result column="architecture_name" property="windName" jdbcType="VARCHAR" />
    <result column="apply_count" property="applyCount" jdbcType="VARCHAR" />
    <result column="in_process_count" property="inProcessCount" jdbcType="VARCHAR" />
    <result column="complete_count" property="completeCount" jdbcType="VARCHAR" />
    <result column="invalid_count" property="invalidCount" jdbcType="VARCHAR" />
    <result column="complete_rate" property="completeRate" jdbcType="VARCHAR" />
  </resultMap>
  <select id="getOperateTicketStatisticsList" resultMap="OperateTicketStatisticsMap">
    select a.*,(a.complete_count/a.apply_count) as 'complete_rate',b.architecture_name
    from (select wind_id,count(*) as 'apply_count',
    sum(IF(status = '01', 1, 0)) as 'in_process_count',
    sum(IF(status = '02', 1, 0)) as 'complete_count',
    sum(IF(status = '04', 1, 0)) as 'invalid_count'
    from operate_ticket
    where 1=1
    <if test="startWindCode != null and startWindCode != '' and (endWindCode == null or endWindCode == '')" >
      and a.wind_id = #{startWindCode}
    </if>
    <if test="startWindCode != null and startWindCode != '' and endWindCode != null and endWindCode != ''" >
      and (a.wind_id between #{startWindCode} and #{endWindCode})
    </if>
    <if test="startTime != null and startTime !='' and (endTime == null or endTime == '' )">
      and apply_time = #{startTime}
    </if>
    <if test="startTime != null and startTime !='' and endTime != null and endTime !=''">
      and apply_time between #{startTime} and #{endTime}
    </if>
    group by wind_id) as a
    left join org_architecture b on a.wind_id = b.architecture_code and b.architecture_type = '02'
  </select>
  <resultMap id="OperorderMap" type="com.qz.zframe.maintain.vo.OperateTicketForWorkorderVo">
    <result column="ticket_id" property="ticketId" jdbcType="VARCHAR" />
    <result column="ticket_number" property="serialNumber" jdbcType="VARCHAR" />
    <result column="work_team" property="workTeam" jdbcType="VARCHAR" />
    <result column="work_team_name" property="workTeamName" jdbcType="VARCHAR" />
    <result column="ticket_type_name" property="ticketTypeName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="applicant" property="applicant" jdbcType="VARCHAR" />
    <result column="applicant_name" property="applicantName" jdbcType="VARCHAR" />
    <result column="apply_time" property="applyTime" jdbcType="DATE" />
    <result column="operate_content" property="operateContent" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Operorder_Column_List">
    a.ticket_id as ticket_id,
    a.serial_number as ticket_number,
    a.work_team as work_team,
    a.status as status,
    d.architecture_name as work_team_name,
    b.ticket_type_name as ticket_type_name,
    a.applicant as applicant,
    f.user_name as applicant_name,
    a.apply_time as apply_time,
    a.operate_content as operate_content
  </sql>
  <select id="getDefectOperTicketList" resultMap="OperorderMap">
    select
    <include refid="Operorder_Column_List"/>
    from operate_ticket a
    left join operate_ticket_type b on a.oper_ticket_type_id = b.oper_ticket_type_id
    left join org_architecture d on a.work_team = d.architecture_id
    left join isc_user f on a.applicant = f.user_id
    where a.status != '0' and a.workorder_id = #{workorderId}
    order by a.serial_number desc
  </select>
  <select id="getOrderOperTicketList" resultMap="OperorderMap">
    select
    <include refid="Operorder_Column_List"/>
    from operate_ticket a
    left join operate_ticket_type b on a.oper_ticket_type_id = b.oper_ticket_type_id
    left join org_architecture d on a.work_team = d.architecture_id
    left join isc_user f on a.applicant = f.user_id
    where a.status != '0' and a.order_id = #{orderId}
    order by a.serial_number desc
  </select>










  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.tickets.entity.OperateTicketExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operate_ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from operate_ticket
    where ticket_id = #{ticketId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from operate_ticket
    where ticket_id = #{ticketId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.tickets.entity.OperateTicketExample" >
    delete from operate_ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.tickets.entity.OperateTicket" >
    insert into operate_ticket (ticket_id, serial_number, oper_ticket_type_id, 
      typical_ticket_id, workorder_id, order_id, 
      maintainer, maintain_date, status, 
      flow_step, wind_id, crew_id, 
      applicant, apply_time, sender, 
      receiver, send_time, work_team, 
      executer, supervisior, oper_start_time, 
      oper_end_time, position_id, position_desc, 
      equipment_id, equipment_desc, operate_content
      )
    values (#{ticketId,jdbcType=VARCHAR}, #{serialNumber,jdbcType=VARCHAR}, #{operTicketTypeId,jdbcType=VARCHAR}, 
      #{typicalTicketId,jdbcType=VARCHAR}, #{workorderId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, 
      #{maintainer,jdbcType=VARCHAR}, #{maintainDate,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR},
      #{flowStep,jdbcType=VARCHAR}, #{windId,jdbcType=VARCHAR}, #{crewId,jdbcType=VARCHAR}, 
      #{applicant,jdbcType=VARCHAR}, #{applyTime,jdbcType=TIMESTAMP}, #{sender,jdbcType=VARCHAR}, 
      #{receiver,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, #{workTeam,jdbcType=VARCHAR}, 
      #{executer,jdbcType=VARCHAR}, #{supervisior,jdbcType=VARCHAR}, #{operStartTime,jdbcType=TIMESTAMP}, 
      #{operEndTime,jdbcType=TIMESTAMP}, #{positionId,jdbcType=VARCHAR}, #{positionDesc,jdbcType=VARCHAR}, 
      #{equipmentId,jdbcType=VARCHAR}, #{equipmentDesc,jdbcType=VARCHAR}, #{operateContent,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.tickets.entity.OperateTicket" >
    insert into operate_ticket
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ticketId != null and ticketId != ''" >
        ticket_id,
      </if>
      <if test="serialNumber != null and serialNumber != ''" >
        serial_number,
      </if>
      <if test="operTicketTypeId != null" >
        oper_ticket_type_id,
      </if>
      <if test="typicalTicketId != null" >
        typical_ticket_id,
      </if>
      <if test="workorderId != null" >
        workorder_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="maintainer != null" >
        maintainer,
      </if>
      <if test="maintainDate != null" >
        maintain_date,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="flowStep != null" >
        flow_step,
      </if>
      <if test="windId != null" >
        wind_id,
      </if>
      <if test="crewId != null" >
        crew_id,
      </if>
      <if test="applicant != null" >
        applicant,
      </if>
      <if test="applyTime != null" >
        apply_time,
      </if>
      <if test="sender != null" >
        sender,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
      <if test="workTeam != null" >
        work_team,
      </if>
      <if test="executer != null" >
        executer,
      </if>
      <if test="supervisior != null" >
        supervisior,
      </if>
      <if test="operStartTime != null" >
        oper_start_time,
      </if>
      <if test="operEndTime != null" >
        oper_end_time,
      </if>
      <if test="positionId != null" >
        position_id,
      </if>
      <if test="positionDesc != null" >
        position_desc,
      </if>
      <if test="equipmentId != null" >
        equipment_id,
      </if>
      <if test="equipmentDesc != null" >
        equipment_desc,
      </if>
      <if test="operateContent != null" >
        operate_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ticketId != null and ticketId != ''" >
        #{ticketId,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null and serialNumber != ''" >
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="operTicketTypeId != null" >
        #{operTicketTypeId,jdbcType=VARCHAR},
      </if>
      <if test="typicalTicketId != null" >
        #{typicalTicketId,jdbcType=VARCHAR},
      </if>
      <if test="workorderId != null" >
        #{workorderId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="maintainer != null" >
        #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="maintainDate != null" >
        #{maintainDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="flowStep != null" >
        #{flowStep,jdbcType=VARCHAR},
      </if>
      <if test="windId != null" >
        #{windId,jdbcType=VARCHAR},
      </if>
      <if test="crewId != null" >
        #{crewId,jdbcType=VARCHAR},
      </if>
      <if test="applicant != null" >
        #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null" >
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sender != null" >
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workTeam != null" >
        #{workTeam,jdbcType=VARCHAR},
      </if>
      <if test="executer != null" >
        #{executer,jdbcType=VARCHAR},
      </if>
      <if test="supervisior != null" >
        #{supervisior,jdbcType=VARCHAR},
      </if>
      <if test="operStartTime != null" >
        #{operStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operEndTime != null" >
        #{operEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="positionId != null" >
        #{positionId,jdbcType=VARCHAR},
      </if>
      <if test="positionDesc != null" >
        #{positionDesc,jdbcType=VARCHAR},
      </if>
      <if test="equipmentId != null" >
        #{equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="equipmentDesc != null" >
        #{equipmentDesc,jdbcType=VARCHAR},
      </if>
      <if test="operateContent != null" >
        #{operateContent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.tickets.entity.OperateTicketExample" resultType="java.lang.Integer" >
    select count(*) from operate_ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update operate_ticket
    <set >
      <if test="record.ticketId != null" >
        ticket_id = #{record.ticketId,jdbcType=VARCHAR},
      </if>
      <if test="record.serialNumber != null" >
        serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.operTicketTypeId != null" >
        oper_ticket_type_id = #{record.operTicketTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.typicalTicketId != null" >
        typical_ticket_id = #{record.typicalTicketId,jdbcType=VARCHAR},
      </if>
      <if test="record.workorderId != null" >
        workorder_id = #{record.workorderId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.maintainer != null" >
        maintainer = #{record.maintainer,jdbcType=VARCHAR},
      </if>
      <if test="record.maintainDate != null" >
        maintain_date = #{record.maintainDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.flowStep != null" >
        flow_step = #{record.flowStep,jdbcType=VARCHAR},
      </if>
      <if test="record.windId != null" >
        wind_id = #{record.windId,jdbcType=VARCHAR},
      </if>
      <if test="record.crewId != null" >
        crew_id = #{record.crewId,jdbcType=VARCHAR},
      </if>
      <if test="record.applicant != null" >
        applicant = #{record.applicant,jdbcType=VARCHAR},
      </if>
      <if test="record.applyTime != null" >
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sender != null" >
        sender = #{record.sender,jdbcType=VARCHAR},
      </if>
      <if test="record.receiver != null" >
        receiver = #{record.receiver,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null" >
        send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.workTeam != null" >
        work_team = #{record.workTeam,jdbcType=VARCHAR},
      </if>
      <if test="record.executer != null" >
        executer = #{record.executer,jdbcType=VARCHAR},
      </if>
      <if test="record.supervisior != null" >
        supervisior = #{record.supervisior,jdbcType=VARCHAR},
      </if>
      <if test="record.operStartTime != null" >
        oper_start_time = #{record.operStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operEndTime != null" >
        oper_end_time = #{record.operEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.positionId != null" >
        position_id = #{record.positionId,jdbcType=VARCHAR},
      </if>
      <if test="record.positionDesc != null" >
        position_desc = #{record.positionDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentId != null" >
        equipment_id = #{record.equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentDesc != null" >
        equipment_desc = #{record.equipmentDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.operateContent != null" >
        operate_content = #{record.operateContent,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update operate_ticket
    set ticket_id = #{record.ticketId,jdbcType=VARCHAR},
      serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      oper_ticket_type_id = #{record.operTicketTypeId,jdbcType=VARCHAR},
      typical_ticket_id = #{record.typicalTicketId,jdbcType=VARCHAR},
      workorder_id = #{record.workorderId,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      maintainer = #{record.maintainer,jdbcType=VARCHAR},
      maintain_date = #{record.maintainDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      flow_step = #{record.flowStep,jdbcType=VARCHAR},
      wind_id = #{record.windId,jdbcType=VARCHAR},
      crew_id = #{record.crewId,jdbcType=VARCHAR},
      applicant = #{record.applicant,jdbcType=VARCHAR},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      sender = #{record.sender,jdbcType=VARCHAR},
      receiver = #{record.receiver,jdbcType=VARCHAR},
      send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      work_team = #{record.workTeam,jdbcType=VARCHAR},
      executer = #{record.executer,jdbcType=VARCHAR},
      supervisior = #{record.supervisior,jdbcType=VARCHAR},
      oper_start_time = #{record.operStartTime,jdbcType=TIMESTAMP},
      oper_end_time = #{record.operEndTime,jdbcType=TIMESTAMP},
      position_id = #{record.positionId,jdbcType=VARCHAR},
      position_desc = #{record.positionDesc,jdbcType=VARCHAR},
      equipment_id = #{record.equipmentId,jdbcType=VARCHAR},
      equipment_desc = #{record.equipmentDesc,jdbcType=VARCHAR},
      operate_content = #{record.operateContent,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.tickets.entity.OperateTicket" >
    update operate_ticket
    <set >
      <if test="serialNumber != null and serialNumber != ''" >
        serial_number = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="operTicketTypeId != null" >
        oper_ticket_type_id = #{operTicketTypeId,jdbcType=VARCHAR},
      </if>
      <if test="typicalTicketId != null" >
        typical_ticket_id = #{typicalTicketId,jdbcType=VARCHAR},
      </if>
      <if test="workorderId != null" >
        workorder_id = #{workorderId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="maintainer != null" >
        maintainer = #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="maintainDate != null" >
        maintain_date = #{maintainDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="flowStep != null" >
        flow_step = #{flowStep,jdbcType=VARCHAR},
      </if>
      <if test="windId != null" >
        wind_id = #{windId,jdbcType=VARCHAR},
      </if>
      <if test="crewId != null" >
        crew_id = #{crewId,jdbcType=VARCHAR},
      </if>
      <if test="applicant != null" >
        applicant = #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null" >
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sender != null" >
        sender = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workTeam != null" >
        work_team = #{workTeam,jdbcType=VARCHAR},
      </if>
      <if test="executer != null" >
        executer = #{executer,jdbcType=VARCHAR},
      </if>
      <if test="supervisior != null" >
        supervisior = #{supervisior,jdbcType=VARCHAR},
      </if>
      <if test="operStartTime != null" >
        oper_start_time = #{operStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operEndTime != null" >
        oper_end_time = #{operEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="positionId != null" >
        position_id = #{positionId,jdbcType=VARCHAR},
      </if>
      <if test="positionDesc != null" >
        position_desc = #{positionDesc,jdbcType=VARCHAR},
      </if>
      <if test="equipmentId != null" >
        equipment_id = #{equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="equipmentDesc != null" >
        equipment_desc = #{equipmentDesc,jdbcType=VARCHAR},
      </if>
      <if test="operateContent != null" >
        operate_content = #{operateContent,jdbcType=VARCHAR},
      </if>
    </set>
    where ticket_id = #{ticketId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.tickets.entity.OperateTicket" >
    update operate_ticket
    set serial_number = #{serialNumber,jdbcType=VARCHAR},
      oper_ticket_type_id = #{operTicketTypeId,jdbcType=VARCHAR},
      typical_ticket_id = #{typicalTicketId,jdbcType=VARCHAR},
      workorder_id = #{workorderId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      maintainer = #{maintainer,jdbcType=VARCHAR},
      maintain_date = #{maintainDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      flow_step = #{flowStep,jdbcType=VARCHAR},
      wind_id = #{windId,jdbcType=VARCHAR},
      crew_id = #{crewId,jdbcType=VARCHAR},
      applicant = #{applicant,jdbcType=VARCHAR},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      sender = #{sender,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      work_team = #{workTeam,jdbcType=VARCHAR},
      executer = #{executer,jdbcType=VARCHAR},
      supervisior = #{supervisior,jdbcType=VARCHAR},
      oper_start_time = #{operStartTime,jdbcType=TIMESTAMP},
      oper_end_time = #{operEndTime,jdbcType=TIMESTAMP},
      position_id = #{positionId,jdbcType=VARCHAR},
      position_desc = #{positionDesc,jdbcType=VARCHAR},
      equipment_id = #{equipmentId,jdbcType=VARCHAR},
      equipment_desc = #{equipmentDesc,jdbcType=VARCHAR},
      operate_content = #{operateContent,jdbcType=VARCHAR}
    where ticket_id = #{ticketId,jdbcType=VARCHAR}
  </update>
</mapper>