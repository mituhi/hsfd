<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.tickets.mapper.TypicalOperateTicketMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.tickets.entity.TypicalOperateTicket" >
    <id column="typical_ticket_id" property="typicalTicketId" jdbcType="VARCHAR" />
    <result column="serial_number" property="serialNumber" jdbcType="VARCHAR" />
    <result column="typical_ticke_code" property="typicalTickeCode" jdbcType="VARCHAR" />
    <result column="ticket_type_id" property="ticketTypeId" jdbcType="VARCHAR" />
    <result column="ticket_type_name" property="ticketTypeName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="maintainer" property="maintainer" jdbcType="VARCHAR" />
    <result column="maintain_date" property="maintainDate" jdbcType="DATE" />
    <result column="localtion" property="localtion" jdbcType="VARCHAR" />
    <result column="wind_id" property="windId" jdbcType="VARCHAR" />
    <result column="equipment" property="equipment" jdbcType="VARCHAR" />
    <result column="dapartments" property="dapartments" jdbcType="VARCHAR" />
    <result column="operate_content" property="operateContent" jdbcType="VARCHAR" />
    <result column="operate_items_ids" property="operateItemsIds" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    typical_ticket_id, serial_number, typical_ticke_code, ticket_type_id, ticket_type_name, 
    status, maintainer, maintain_date, localtion, wind_id, equipment, dapartments, operate_content, 
    operate_items_ids
  </sql>

  <update id="batchDelete" parameterType="java.lang.String">
    update typical_operate_ticket set status = "0"
    where typical_ticket_id in
    <foreach collection="array" index="index" item="item"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>

  <select id="getTypicalOperateTicketListByPC" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from typical_operate_ticket
    where 1=1
    <if test="map.operateContent != null">
      and operate_content like '%${map.operateContent}%'
    </if>
    <if test="map.status != null">
      and status = #{map.status}
    </if>
    <if test="map.departments != null">
      and departments = #{map.departments}
    </if>
    order by serial_number desc
    limit ${map.start},${map.pageSize};
  </select>

  <select id="getTotalCount" resultType="java.lang.Integer">
    select
    count(*)
    from typical_operate_ticket
    where 1=1
    <if test="map.operateContent != null">
      and operate_content like '%${map.operateContent}%'
    </if>
    <if test="map.status != null">
      and status = #{map.status}
    </if>
    <if test="map.departments != null">
      and departments = #{map.departments}
    </if>
  </select>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.tickets.entity.TypicalOperateTicketExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from typical_operate_ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from typical_operate_ticket
    where typical_ticket_id = #{typicalTicketId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from typical_operate_ticket
    where typical_ticket_id = #{typicalTicketId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.tickets.entity.TypicalOperateTicketExample" >
    delete from typical_operate_ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.tickets.entity.TypicalOperateTicket" >
    insert into typical_operate_ticket (typical_ticket_id, serial_number, typical_ticke_code, 
      ticket_type_id, ticket_type_name, status, 
      maintainer, maintain_date, localtion, 
      wind_id, equipment, dapartments, 
      operate_content, operate_items_ids)
    values (#{typicalTicketId,jdbcType=VARCHAR}, #{serialNumber,jdbcType=VARCHAR}, #{typicalTickeCode,jdbcType=VARCHAR}, 
      #{ticketTypeId,jdbcType=VARCHAR}, #{ticketTypeName,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{maintainer,jdbcType=VARCHAR}, #{maintainDate,jdbcType=DATE}, #{localtion,jdbcType=VARCHAR}, 
      #{windId,jdbcType=VARCHAR}, #{equipment,jdbcType=VARCHAR}, #{dapartments,jdbcType=VARCHAR}, 
      #{operateContent,jdbcType=VARCHAR}, #{operateItemsIds,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.tickets.entity.TypicalOperateTicket" >
    insert into typical_operate_ticket
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="typicalTicketId != null" >
        typical_ticket_id,
      </if>
      <if test="serialNumber != null" >
        serial_number,
      </if>
      <if test="typicalTickeCode != null" >
        typical_ticke_code,
      </if>
      <if test="ticketTypeId != null" >
        ticket_type_id,
      </if>
      <if test="ticketTypeName != null" >
        ticket_type_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="maintainer != null" >
        maintainer,
      </if>
      <if test="maintainDate != null" >
        maintain_date,
      </if>
      <if test="localtion != null" >
        localtion,
      </if>
      <if test="windId != null" >
        wind_id,
      </if>
      <if test="equipment != null" >
        equipment,
      </if>
      <if test="dapartments != null" >
        dapartments,
      </if>
      <if test="operateContent != null" >
        operate_content,
      </if>
      <if test="operateItemsIds != null" >
        operate_items_ids,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="typicalTicketId != null" >
        #{typicalTicketId,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null" >
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="typicalTickeCode != null" >
        #{typicalTickeCode,jdbcType=VARCHAR},
      </if>
      <if test="ticketTypeId != null" >
        #{ticketTypeId,jdbcType=VARCHAR},
      </if>
      <if test="ticketTypeName != null" >
        #{ticketTypeName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="maintainer != null" >
        #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="maintainDate != null" >
        #{maintainDate,jdbcType=DATE},
      </if>
      <if test="localtion != null" >
        #{localtion,jdbcType=VARCHAR},
      </if>
      <if test="windId != null" >
        #{windId,jdbcType=VARCHAR},
      </if>
      <if test="equipment != null" >
        #{equipment,jdbcType=VARCHAR},
      </if>
      <if test="dapartments != null" >
        #{dapartments,jdbcType=VARCHAR},
      </if>
      <if test="operateContent != null" >
        #{operateContent,jdbcType=VARCHAR},
      </if>
      <if test="operateItemsIds != null" >
        #{operateItemsIds,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.tickets.entity.TypicalOperateTicketExample" resultType="java.lang.Integer" >
    select count(*) from typical_operate_ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update typical_operate_ticket
    <set >
      <if test="record.typicalTicketId != null" >
        typical_ticket_id = #{record.typicalTicketId,jdbcType=VARCHAR},
      </if>
      <if test="record.serialNumber != null" >
        serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.typicalTickeCode != null" >
        typical_ticke_code = #{record.typicalTickeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketTypeId != null" >
        ticket_type_id = #{record.ticketTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketTypeName != null" >
        ticket_type_name = #{record.ticketTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.maintainer != null" >
        maintainer = #{record.maintainer,jdbcType=VARCHAR},
      </if>
      <if test="record.maintainDate != null" >
        maintain_date = #{record.maintainDate,jdbcType=DATE},
      </if>
      <if test="record.localtion != null" >
        localtion = #{record.localtion,jdbcType=VARCHAR},
      </if>
      <if test="record.windId != null" >
        wind_id = #{record.windId,jdbcType=VARCHAR},
      </if>
      <if test="record.equipment != null" >
        equipment = #{record.equipment,jdbcType=VARCHAR},
      </if>
      <if test="record.dapartments != null" >
        dapartments = #{record.dapartments,jdbcType=VARCHAR},
      </if>
      <if test="record.operateContent != null" >
        operate_content = #{record.operateContent,jdbcType=VARCHAR},
      </if>
      <if test="record.operateItemsIds != null" >
        operate_items_ids = #{record.operateItemsIds,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update typical_operate_ticket
    set typical_ticket_id = #{record.typicalTicketId,jdbcType=VARCHAR},
      serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      typical_ticke_code = #{record.typicalTickeCode,jdbcType=VARCHAR},
      ticket_type_id = #{record.ticketTypeId,jdbcType=VARCHAR},
      ticket_type_name = #{record.ticketTypeName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      maintainer = #{record.maintainer,jdbcType=VARCHAR},
      maintain_date = #{record.maintainDate,jdbcType=DATE},
      localtion = #{record.localtion,jdbcType=VARCHAR},
      wind_id = #{record.windId,jdbcType=VARCHAR},
      equipment = #{record.equipment,jdbcType=VARCHAR},
      dapartments = #{record.dapartments,jdbcType=VARCHAR},
      operate_content = #{record.operateContent,jdbcType=VARCHAR},
      operate_items_ids = #{record.operateItemsIds,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.tickets.entity.TypicalOperateTicket" >
    update typical_operate_ticket
    <set >
      <if test="serialNumber != null" >
        serial_number = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="typicalTickeCode != null" >
        typical_ticke_code = #{typicalTickeCode,jdbcType=VARCHAR},
      </if>
      <if test="ticketTypeId != null" >
        ticket_type_id = #{ticketTypeId,jdbcType=VARCHAR},
      </if>
      <if test="ticketTypeName != null" >
        ticket_type_name = #{ticketTypeName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="maintainer != null" >
        maintainer = #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="maintainDate != null" >
        maintain_date = #{maintainDate,jdbcType=DATE},
      </if>
      <if test="localtion != null" >
        localtion = #{localtion,jdbcType=VARCHAR},
      </if>
      <if test="windId != null" >
        wind_id = #{windId,jdbcType=VARCHAR},
      </if>
      <if test="equipment != null" >
        equipment = #{equipment,jdbcType=VARCHAR},
      </if>
      <if test="dapartments != null" >
        dapartments = #{dapartments,jdbcType=VARCHAR},
      </if>
      <if test="operateContent != null" >
        operate_content = #{operateContent,jdbcType=VARCHAR},
      </if>
      <if test="operateItemsIds != null" >
        operate_items_ids = #{operateItemsIds,jdbcType=VARCHAR},
      </if>
    </set>
    where typical_ticket_id = #{typicalTicketId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.tickets.entity.TypicalOperateTicket" >
    update typical_operate_ticket
    set serial_number = #{serialNumber,jdbcType=VARCHAR},
      typical_ticke_code = #{typicalTickeCode,jdbcType=VARCHAR},
      ticket_type_id = #{ticketTypeId,jdbcType=VARCHAR},
      ticket_type_name = #{ticketTypeName,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      maintainer = #{maintainer,jdbcType=VARCHAR},
      maintain_date = #{maintainDate,jdbcType=DATE},
      localtion = #{localtion,jdbcType=VARCHAR},
      wind_id = #{windId,jdbcType=VARCHAR},
      equipment = #{equipment,jdbcType=VARCHAR},
      dapartments = #{dapartments,jdbcType=VARCHAR},
      operate_content = #{operateContent,jdbcType=VARCHAR},
      operate_items_ids = #{operateItemsIds,jdbcType=VARCHAR}
    where typical_ticket_id = #{typicalTicketId,jdbcType=VARCHAR}
  </update>
</mapper>