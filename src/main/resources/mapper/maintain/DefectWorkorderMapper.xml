<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.maintain.mapper.DefectWorkorderMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.maintain.entity.DefectWorkorder" >
    <id column="workorder_id" property="workorderId" jdbcType="VARCHAR" />
    <result column="serial_number" property="serialNumber" jdbcType="VARCHAR" />
    <result column="breakdown_id" property="breakdownId" jdbcType="VARCHAR" />
    <result column="workorder_type_id" property="workorderTypeId" jdbcType="VARCHAR" />
    <result column="workorder_desc" property="workorderDesc" jdbcType="VARCHAR" />
    <result column="maintainer" property="maintainer" jdbcType="VARCHAR" />
    <result column="maintain_date" property="maintainDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="flow_status" property="flowStatus" jdbcType="VARCHAR" />
    <result column="wind_id" property="windId" jdbcType="VARCHAR" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="deal_mode" property="dealMode" jdbcType="VARCHAR" />
    <result column="duty_team" property="dutyTeam" jdbcType="VARCHAR" />
    <result column="duty_head" property="dutyHead" jdbcType="VARCHAR" />
    <result column="fill_person" property="fillPerson" jdbcType="VARCHAR" />
    <result column="fill_time" property="fillTime" jdbcType="TIMESTAMP" />
    <result column="unit_member" property="unitMember" jdbcType="VARCHAR" />
    <result column="other_unit_member" property="otherUnitMember" jdbcType="VARCHAR" />
    <result column="crew_id" property="crewId" jdbcType="VARCHAR" />
    <result column="position_id" property="positionId" jdbcType="VARCHAR" />
    <result column="position_desc" property="positionDesc" jdbcType="VARCHAR" />
    <result column="equipment_id" property="equipmentId" jdbcType="VARCHAR" />
    <result column="equipment_desc" property="equipmentDesc" jdbcType="VARCHAR" />
    <result column="breakdown_desc" property="breakdownDesc" jdbcType="VARCHAR" />
    <result column="breakdown_code" property="breakdownCode" jdbcType="VARCHAR" />
    <result column="active_time" property="activeTime" jdbcType="TIMESTAMP" />
    <result column="recover_time" property="recoverTime" jdbcType="TIMESTAMP" />
    <result column="downtime_windspeed" property="downtimeWindspeed" jdbcType="VARCHAR" />
    <result column="recover_windspeed" property="recoverWindspeed" jdbcType="VARCHAR" />
    <result column="interrupt_time" property="interruptTime" jdbcType="VARCHAR" />
    <result column="electricity_loss" property="electricityLoss" jdbcType="VARCHAR" />
    <result column="grid_connected_recover_time" property="gridConnectedRecoverTime" jdbcType="TIMESTAMP" />
    <result column="breakdown_location" property="breakdownLocation" jdbcType="VARCHAR" />
    <result column="breakdown_attribute" property="breakdownAttribute" jdbcType="VARCHAR" />
    <result column="phenomenon" property="phenomenon" jdbcType="VARCHAR" />
    <result column="picture" property="picture" jdbcType="VARCHAR" />
    <result column="defect_remark" property="defectRemark" jdbcType="VARCHAR" />
    <result column="defect_analysis" property="defectAnalysis" jdbcType="VARCHAR" />
    <result column="plan_start_time" property="planStartTime" jdbcType="TIMESTAMP" />
    <result column="plan_end_time" property="planEndTime" jdbcType="TIMESTAMP" />
    <result column="plan_work_hour" property="planWorkHour" jdbcType="VARCHAR" />
    <result column="plan_material_fee" property="planMaterialFee" jdbcType="VARCHAR" />
    <result column="plan_service_fee" property="planServiceFee" jdbcType="VARCHAR" />
    <result column="actual_complete_time" property="actualCompleteTime" jdbcType="TIMESTAMP" />
    <result column="attachment" property="attachment" jdbcType="VARCHAR" />
    <result column="equipment_status_requirement_1" property="equipmentStatusRequirement1" jdbcType="VARCHAR" />
    <result column="equipment_status_requirement_2" property="equipmentStatusRequirement2" jdbcType="VARCHAR" />
    <result column="other_requirement" property="otherRequirement" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    workorder_id, serial_number, breakdown_id, workorder_type_id, workorder_desc, maintainer, 
    maintain_date, status, flow_status, wind_id, company, department, deal_mode, duty_team, 
    duty_head, fill_person, fill_time, unit_member, other_unit_member, crew_id, position_id, 
    position_desc, equipment_id, equipment_desc, breakdown_desc, breakdown_code, active_time, 
    recover_time, downtime_windspeed, recover_windspeed, interrupt_time, electricity_loss, 
    grid_connected_recover_time, breakdown_location, breakdown_attribute, phenomenon, 
    picture, defect_remark, defect_analysis, plan_start_time, plan_end_time, plan_work_hour, 
    plan_material_fee, plan_service_fee, actual_complete_time, attachment, equipment_status_requirement_1, 
    equipment_status_requirement_2, other_requirement
  </sql>











  <select id="getIdBySerialNumber" resultType="java.lang.String">
    select workorder_id
    from defect_workorder
    where serial_number = #{serialNumber}
  </select>
  <delete id="batchDeleteTrue" parameterType="java.lang.String">
    delete from defect_workorder
    where workorder_id in
    <foreach collection="list" index="index" item="item"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <update id="batchDeleteFalse" parameterType="java.lang.String">
    update defect_workorder set status = '0'
    where workorder_id in
    <foreach collection="list" index="index" item="item"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
  <resultMap id="GetResultMap" type="com.qz.zframe.maintain.vo.DefectWorkorderVo" >
    <id column="workorder_id" property="workorderId" jdbcType="VARCHAR" />
    <result column="serial_number" property="serialNumber" jdbcType="VARCHAR" />
    <result column="breakdown_id" property="breakdownId" jdbcType="VARCHAR" />
    <result column="workorder_type_id" property="workorderTypeId" jdbcType="VARCHAR" />
    <result column="workorder_desc" property="workorderDesc" jdbcType="VARCHAR" />
    <result column="maintainer" property="maintainer" jdbcType="VARCHAR" />
    <result column="maintain_date" property="maintainDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="flow_status" property="flowStatus" jdbcType="VARCHAR" />
    <result column="wind_id" property="windId" jdbcType="VARCHAR" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="deal_mode" property="dealMode" jdbcType="VARCHAR" />
    <result column="duty_team" property="dutyTeam" jdbcType="VARCHAR" />
    <result column="duty_head" property="dutyHead" jdbcType="VARCHAR" />
    <result column="fill_person" property="fillPerson" jdbcType="VARCHAR" />
    <result column="fill_time" property="fillTime" jdbcType="TIMESTAMP" />
    <result column="unit_member" property="unitMember" jdbcType="VARCHAR" />
    <result column="other_unit_member" property="otherUnitMember" jdbcType="VARCHAR" />
    <result column="crew_id" property="crewId" jdbcType="VARCHAR" />
    <result column="position_id" property="positionId" jdbcType="VARCHAR" />
    <result column="position_desc" property="positionDesc" jdbcType="VARCHAR" />
    <result column="equipment_id" property="equipmentId" jdbcType="VARCHAR" />
    <result column="equipment_desc" property="equipmentDesc" jdbcType="VARCHAR" />
    <result column="breakdown_desc" property="breakdownDesc" jdbcType="VARCHAR" />
    <result column="breakdown_code" property="breakdownCode" jdbcType="VARCHAR" />
    <result column="active_time" property="activeTime" jdbcType="TIMESTAMP" />
    <result column="recover_time" property="recoverTime" jdbcType="TIMESTAMP" />
    <result column="downtime_windspeed" property="downtimeWindspeed" jdbcType="VARCHAR" />
    <result column="recover_windspeed" property="recoverWindspeed" jdbcType="VARCHAR" />
    <result column="interrupt_time" property="interruptTime" jdbcType="VARCHAR" />
    <result column="electricity_loss" property="electricityLoss" jdbcType="VARCHAR" />
    <result column="grid_connected_recover_time" property="gridConnectedRecoverTime" jdbcType="TIMESTAMP" />
    <result column="breakdown_location" property="breakdownLocation" jdbcType="VARCHAR" />
    <result column="breakdown_attribute" property="breakdownAttribute" jdbcType="VARCHAR" />
    <result column="phenomenon" property="phenomenon" jdbcType="VARCHAR" />
    <result column="picture" property="picture" jdbcType="VARCHAR" />
    <result column="defect_remark" property="defectRemark" jdbcType="VARCHAR" />
    <result column="defect_analysis" property="defectAnalysis" jdbcType="VARCHAR" />
    <result column="plan_start_time" property="planStartTime" jdbcType="TIMESTAMP" />
    <result column="plan_end_time" property="planEndTime" jdbcType="TIMESTAMP" />
    <result column="plan_work_hour" property="planWorkHour" jdbcType="VARCHAR" />
    <result column="plan_material_fee" property="planMaterialFee" jdbcType="VARCHAR" />
    <result column="plan_service_fee" property="planServiceFee" jdbcType="VARCHAR" />
    <result column="actual_complete_time" property="actualCompleteTime" jdbcType="TIMESTAMP" />
    <result column="attachment" property="attachment" jdbcType="VARCHAR" />
    <result column="equipment_status_requirement_1" property="equipmentStatusRequirement1" jdbcType="VARCHAR" />
    <result column="equipment_status_requirement_2" property="equipmentStatusRequirement2" jdbcType="VARCHAR" />
    <result column="other_requirement" property="otherRequirement" jdbcType="VARCHAR" />
    <result column="wind_name" property="windName" jdbcType="VARCHAR" />
    <result column="position_name" property="positionName" jdbcType="VARCHAR" />
    <result column="crew_name" property="crewName" jdbcType="VARCHAR" />
    <result column="equipment_name" property="equipmentName" jdbcType="VARCHAR" />
    <result column="workorder_type_name" property="workorderTypeName" jdbcType="VARCHAR" />
    <result column="breakdown_location_title" property="breakdownLocationTitle" jdbcType="VARCHAR" />
    <result column="breakdown_attribute_title" property="breakdownAttributeTitle" jdbcType="VARCHAR" />
    <result column="deal_mode_title" property="dealModeTitle" jdbcType="VARCHAR" />
    <result column="flow_status_name" property="flowStatusName" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
    <result column="duty_team_name" property="dutyTeamName" jdbcType="VARCHAR" />
    <result column="maintainer_name" property="maintainerName" jdbcType="VARCHAR" />
    <result column="duty_head_name" property="dutyHeadName" jdbcType="VARCHAR" />
    <result column="fill_person_name" property="fillPersonName" jdbcType="VARCHAR" />
    <result column="process_sort" property="flowSort" jdbcType="VARCHAR" />
    <collection property="workorderQualityAcceptance" ofType="com.qz.zframe.maintain.entity.WorkorderQualityAcceptance" >
      <id column="quality_acceptance_id" jdbcType="VARCHAR" property="qualityAcceptanceId" />
      <result column="acceptance_work_order" jdbcType="VARCHAR" property="workorderId" />
      <result column="acceptance_order_id" jdbcType="VARCHAR" property="orderId" />
      <result column="acceptance_evaluation" jdbcType="VARCHAR" property="acceptanceEvaluation" />
      <result column="acceptance_remark" jdbcType="VARCHAR" property="acceptanceRemark" />
    </collection>
    <collection property="workorderSummary" ofType="com.qz.zframe.maintain.entity.WorkorderSummary" >
      <id column="summary_id" jdbcType="VARCHAR" property="summaryId" />
      <result column="summary_workorder_id" jdbcType="VARCHAR" property="workorderId" />
      <result column="summary_order_id" jdbcType="VARCHAR" property="orderId" />
      <result column="summary_problem_desc" jdbcType="VARCHAR" property="summaryProblemDesc" />
      <result column="summary_breakdown_phenomenon" jdbcType="VARCHAR" property="summaryBreakdownPhenomenon" />
      <result column="summary_breakdown_cause" jdbcType="VARCHAR" property="summaryBreakdownCause" />
      <result column="summary_repair_before_cond" jdbcType="VARCHAR" property="summaryRepairBeforeCond" />
      <result column="summary_repair_process_desc" jdbcType="VARCHAR" property="summaryRepairProcessDesc" />
      <result column="summary_cause_analysis" jdbcType="VARCHAR" property="summaryCauseAnalysis" />
      <result column="summary_solution" jdbcType="VARCHAR" property="summarySolution" />
      <result column="summary_konwledge_apply" jdbcType="VARCHAR" property="summaryKonwledgeApply" />
      <result column="summary_attachment" jdbcType="VARCHAR" property="summaryAttachment" />
    </collection>
  </resultMap>
  <resultMap id="Get2ResultMap" type="com.qz.zframe.maintain.vo.WorkorderVoForMaterial" >
    <result column="serial_number" property="serialNumber" jdbcType="VARCHAR" />
    <result column="workorder_desc" property="workorderDesc" jdbcType="VARCHAR" />
    <result column="wind_id" property="windId" jdbcType="VARCHAR" />
    <result column="wind_name" property="windName" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="VARCHAR" />
    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
    <result column="applicant" property="applicant" jdbcType="VARCHAR" />
    <result column="applicant_name" property="applicantName" jdbcType="VARCHAR" />
    <result column="apply_time" property="applyTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Get_Column_List" >
    a.workorder_id as workorder_id,a.serial_number as serial_number,a.breakdown_id as breakdown_id,a.workorder_type_id as workorder_type_id,
    a.workorder_desc as workorder_desc, a.maintainer as maintainer,a.maintain_date as maintain_date, a.status as status, a.wind_id as wind_id,
    a.company as company, a.department as department,a.deal_mode as deal_mode, a.duty_team as duty_team, a.duty_head as duty_head, a.fill_person as fill_person,
    a.fill_time as fill_time, a.unit_member as unit_member, a.other_unit_member as other_unit_member, a.crew_id as crew_id,
    a.position_id as position_id, a.position_desc as position_desc, a.equipment_id as equipment_id,a.equipment_desc as equipment_desc,
    a.breakdown_desc as breakdown_desc, a.breakdown_code as breakdown_code, a.active_time as active_time, a.recover_time as recover_time,
    a.downtime_windspeed as downtime_windspeed,a.recover_windspeed as recover_windspeed, a.interrupt_time as interrupt_time,
    a.electricity_loss as electricity_loss, a.grid_connected_recover_time as grid_connected_recover_time,a.breakdown_location as breakdown_location,
    a.breakdown_attribute as breakdown_attribute, a.phenomenon as phenomenon, a.picture as picture, a.defect_remark as defect_remark,
    a.defect_analysis as defect_analysis,a.plan_start_time as plan_start_time, a.plan_end_time as plan_end_time, a.plan_work_hour as plan_work_hour,
    a.plan_material_fee as plan_material_fee, a.plan_service_fee as plan_service_fee,a.actual_complete_time as actual_complete_time,
    a.attachment as attachment, a.equipment_status_requirement_1 as equipment_status_requirement_1,
    a.equipment_status_requirement_2 as equipment_status_requirement_2,a.other_requirement as other_requirement,
    b.architecture_name as wind_name,d.crew_name as crew_name,e.position_name as position_name,f.equipment_name as equipment_name,
    g.workorder_type_name as workorder_type_name,h.title as breakdown_location_title,i.title as breakdown_attribute_title,
    j.title as deal_mode_title,k.title as flow_status_name,
    l.quality_acceptance_id as quality_acceptance_id,l.workorder_id as acceptance_workorder_id,l.order_id as acceptance_order_id,
    l.acceptance_evaluation as qc_acceptance_evaluation,l.acceptance_remark as acceptance_remark,
    n.summary_id as summary_id,n.workorder_id as summary_workorder_id,n.order_id as summary_order_id,n.summary_problem_desc as summary_problem_desc,
    n.summary_breakdown_phenomenon as summary_breakdown_phenomenon,n.summary_breakdown_cause as summary_breakdown_cause,
    n.summary_repair_before_cond as summary_repair_before_cond,n.summary_repair_process_desc as summary_repair_process_desc,
    n.summary_cause_analysis as summary_cause_analysis,n.summary_solution as summary_solution,
    n.summary_konwledge_apply as summary_konwledge_apply,n.summary_attachment as summary_attachment,
    o.architecture_name as company_name,t.architecture_name as department_name,p.architecture_name as duty_team_name,q.user_name as maintainer_name,
    r.user_name as duty_head_name,s.user_name as fill_person_name,
    u.process_sort as process_sort
  </sql>
  <sql id="Get2_Column_List" >
    a.serial_number as serial_number,
    a.workorder_desc as workorder_desc,
    a.wind_id as wind_id,
    b.architecture_name as wind_name,
    a.department as department_id,
    d.architecture_name as department_name,
    a.fill_person as applicant,
    a.fill_time as apply_time,
    e.user_name as applicant_name
  </sql>
  <select id="getDefectWorkorderBySerialNumber" resultMap="Get2ResultMap">
    select
    <include refid="Get2_Column_List" />
    from defect_workorder a
    left join org_architecture b on (a.wind_id = b.architecture_code and b.architecture_type = '02')
    left join org_architecture d on a.department = d.architecture_id
    left join isc_user e on a.fill_person = e.user_id
    where a.status != '0' and a.serial_number = #{serialNumber}
  </select>
  <select id="getDefectWorkorderDetail" resultMap="GetResultMap">
    select
    <include refid="Get_Column_List" />
    from defect_workorder a
    left join org_architecture b on a.wind_id = b.architecture_code and b.architecture_type = '02'
    left join crew_information d on a.crew_id = d.crew_id
    left join position_encode e on a.position_id = e.position_id
    left join equipment_asset_ledger f on a.equipment_id = f.equipment_asset_id
    left join workorder_type g on a.workorder_type_id = g.workorder_type_id
    left join sp_code h on a.breakdown_location =h.id
    left join sp_code i on a.breakdown_attribute =i.id
    left join sp_code j on a.deal_mode = j.id
    left join sp_code k on (a.flow_status = k.name and k.code_type_id = '1046')
    left join workorder_quality_acceptance l on a.workorder_id = l.workorder_id
    left join workorder_summary n on a.workorder_id = n.workorder_id
    left join org_architecture o on a.company = o.architecture_id
    left join org_architecture t on a.department = t.architecture_id
    left join org_architecture p on a.duty_team = p.architecture_id
    left join isc_user q on a.maintainer = q.user_id
    left join isc_user r on a.duty_head = r.user_id
    left join isc_user s on a.fill_person = s.user_id
    left join process u on a.workorder_id = u.order_id
    where a.status != '0' and a.workorder_id = #{workorderId}
  </select>
  <select id="getDefectWorkorderList" resultMap="GetResultMap">
    select
    distinct
    <include refid="Get_Column_List" />
    from defect_workorder a
    left join org_architecture b on a.wind_id = b.architecture_code and b.architecture_type = '02'
    left join crew_information d on a.crew_id = d.crew_id
    left join position_encode e on a.position_id = e.position_id
    left join equipment_asset_ledger f on a.equipment_id = f.equipment_asset_id
    left join workorder_type g on a.workorder_type_id = g.workorder_type_id
    left join sp_code h on a.breakdown_location =h.id
    left join sp_code i on a.breakdown_attribute =i.id
    left join sp_code j on a.deal_mode = j.id
    left join sp_code k on (a.flow_status = k.name and k.code_type_id = '1046')
    left join workorder_quality_acceptance l on a.workorder_id = l.workorder_id
    left join workorder_summary n on a.workorder_id = n.workorder_id
    left join org_architecture o on a.company = o.architecture_id
    left join org_architecture t on a.department = t.architecture_id
    left join org_architecture p on a.duty_team = p.architecture_id
    left join isc_user q on a.maintainer = q.user_id
    left join isc_user r on a.duty_head = r.user_id
    left join isc_user s on a.fill_person = s.user_id
    left join process u on (a.workorder_id = u.order_id and u.process_status = '01')
    left join process_detail v on (u.process_id = v.process_id and ((u.process_sort+1) = v.sort))
    left join process_detail_role_rela w on v.process_detail_id = w.process_detail_id
    left join approve_record x on a.workorder_id = x.order_id
    left join isc_user y on x.approve_user = y.user_id
    where 1=1
    <if test="map.startWindId != null and map.startWindId != '' and (map.endWindId == null or map.endWindId == '')" >
      and a.wind_id = #{map.windId}
    </if>
    <if test="map.startWindId != null and map.startWindId != '' and map.endWindId != null and map.endWindId != ''" >
      and (a.wind_id between #{map.startWindId} and #{map.endWindId})
    </if>
    <if test="map.crewId != null and map.crewId != ''" >
      and a.crew_id = #{map.crewId}
    </if>
    <if test="map.dealMode != null and map.dealMode != ''" >
      and a.deal_mode = #{map.dealMode}
    </if>
    <if test="map.dutyTeam != null and map.dutyTeam != ''" >
      and a.duty_team = #{map.dutyTeam}
    </if>
    <if test="map.status == null or map.status == ''">
      and ((a.status = '01' or a.status = '02' or a.status = '04') or (a.status = '03' and a.maintainer = #{userId}))
    </if>
    <if test="map.status == '01' or map.status =='02' or map.status == '04'">
      and a.status = #{map.status}
    </if>
    <if test="map.status == '03'">
      and (a.status = #{map.status} and a.maintainer = #{userId})
    </if>
    <if test="map.approveUser != null and map.approveUser != ''">
      and (((a.flow_status = '01')
      and (w.role_id in
      <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
        #{item.roleId}
      </foreach>
      or y.user_name = #{map.approveUser}))
      or ((a.flow_status = '02' or a.flow_status = '03') and y.user_name = #{map.approveUser}))
    </if>
    <if test="map.workorderDesc != null and map.workorderDesc != ''" >
      and a.workorder_desc like '%${map.workorderDesc}%'
    </if>
    <if test="map.startTime != null and map.startTime != '' and (map.endtime == null or map.endtime == '')">
      and a.fill_time = #{map.startTime}
    </if>
    <if test="map.startTime != null and map.startTime != '' and map.endtime != null and map.endtime != ''">
      and (a.fill_time between #{map.startTime} and #{map.endTime})
    </if>
    order by a.serial_number is null desc,a.serial_number desc,a.maintain_date desc
    limit ${map.start},${map.pageSize}
  </select>
  <select id="getTotal" resultType="java.lang.Integer">
    select
    count(distinct a.workorder_id)
    from defect_workorder a
    left join org_architecture b on a.wind_id = b.architecture_code and b.architecture_type = '02'
    left join crew_information d on a.crew_id = d.crew_id
    left join position_encode e on a.position_id = e.position_id
    left join equipment_asset_ledger f on a.equipment_id = f.equipment_asset_id
    left join workorder_type g on a.workorder_type_id = g.workorder_type_id
    left join sp_code h on a.breakdown_location =h.id
    left join sp_code i on a.breakdown_attribute =i.id
    left join sp_code j on a.deal_mode = j.id
    left join sp_code k on (a.flow_status = k.name and k.code_type_id = '1046')
    left join workorder_quality_acceptance l on a.workorder_id = l.workorder_id
    left join workorder_summary n on a.workorder_id = n.workorder_id
    left join org_architecture o on a.company = o.architecture_id
    left join org_architecture t on a.department = t.architecture_id
    left join org_architecture p on a.duty_team = p.architecture_id
    left join isc_user q on a.maintainer = q.user_id
    left join isc_user r on a.duty_head = r.user_id
    left join isc_user s on a.fill_person = s.user_id
    left join process u on (a.workorder_id = u.order_id and u.process_status = '01')
    left join process_detail v on (u.process_id = v.process_id and ((u.process_sort+1) = v.sort))
    left join process_detail_role_rela w on v.process_detail_id = w.process_detail_id
    left join approve_record x on a.workorder_id = x.order_id
    left join isc_user y on x.approve_user = y.user_id
    where 1=1
    <if test="map.startWindId != null and map.startWindId != '' and (map.endWindId == null or map.endWindId == '')" >
      and a.wind_id = #{map.windId}
    </if>
    <if test="map.startWindId != null and map.startWindId != '' and map.endWindId != null and map.endWindId != ''" >
      and (a.wind_id between #{map.startWindId} and #{map.endWindId})
    </if>
    <if test="map.crewId != null and map.crewId != ''" >
      and a.crew_id = #{map.crewId}
    </if>
    <if test="map.dealMode != null and map.dealMode != ''" >
      and a.deal_mode = #{map.dealMode}
    </if>
    <if test="map.dutyTeam != null and map.dutyTeam != ''" >
      and a.duty_team = #{map.dutyTeam}
    </if>
    <if test="map.status == null or map.status == ''">
      and ((a.status = '01' or a.status = '02' or a.status = '04') or (a.status = '03' and a.maintainer = #{userId}))
    </if>
    <if test="map.status == '01' or map.status =='02' or map.status == '04'">
      and a.status = #{map.status}
    </if>
    <if test="map.status == '03'">
      and (a.status = #{map.status} and a.maintainer = #{userId})
    </if>
    <if test="map.approveUser != null and map.approveUser != ''">
      and (((a.flow_status = '01')
      and (w.role_id in
      <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
        #{item.roleId}
      </foreach>
      or y.user_name = #{map.approveUser}))
      or ((a.flow_status = '02' or a.flow_status = '03') and y.user_name = #{map.approveUser}))
    </if>
    <if test="map.workorderDesc != null and map.workorderDesc != ''" >
      and a.workorder_desc like '%${map.workorderDesc}%'
    </if>
    <if test="map.startTime != null and map.startTime != '' and (map.endtime == null or map.endtime == '')">
      and a.fill_time = #{map.startTime}
    </if>
    <if test="map.startTime != null and map.startTime != '' and map.endtime != null and map.endtime != ''">
      and (a.fill_time between #{map.startTime} and #{map.endTime})
    </if>
  </select>



















  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.maintain.entity.DefectWorkorderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from defect_workorder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from defect_workorder
    where workorder_id = #{workorderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from defect_workorder
    where workorder_id = #{workorderId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.maintain.entity.DefectWorkorderExample" >
    delete from defect_workorder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.maintain.entity.DefectWorkorder" >
    insert into defect_workorder (workorder_id, serial_number, breakdown_id, 
      workorder_type_id, workorder_desc, maintainer, 
      maintain_date, status, flow_status, 
      wind_id, company, department, 
      deal_mode, duty_team, duty_head, 
      fill_person, fill_time, unit_member, 
      other_unit_member, crew_id, position_id, 
      position_desc, equipment_id, equipment_desc, 
      breakdown_desc, breakdown_code, active_time, 
      recover_time, downtime_windspeed, recover_windspeed, 
      interrupt_time, electricity_loss, grid_connected_recover_time, 
      breakdown_location, breakdown_attribute, 
      phenomenon, picture, defect_remark, 
      defect_analysis, plan_start_time, plan_end_time, 
      plan_work_hour, plan_material_fee, plan_service_fee, 
      actual_complete_time, attachment, equipment_status_requirement_1, 
      equipment_status_requirement_2, other_requirement
      )
    values (#{workorderId,jdbcType=VARCHAR}, #{serialNumber,jdbcType=VARCHAR}, #{breakdownId,jdbcType=VARCHAR}, 
      #{workorderTypeId,jdbcType=VARCHAR}, #{workorderDesc,jdbcType=VARCHAR}, #{maintainer,jdbcType=VARCHAR}, 
      #{maintainDate,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{flowStatus,jdbcType=VARCHAR},
      #{windId,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, 
      #{dealMode,jdbcType=VARCHAR}, #{dutyTeam,jdbcType=VARCHAR}, #{dutyHead,jdbcType=VARCHAR}, 
      #{fillPerson,jdbcType=VARCHAR}, #{fillTime,jdbcType=TIMESTAMP}, #{unitMember,jdbcType=VARCHAR}, 
      #{otherUnitMember,jdbcType=VARCHAR}, #{crewId,jdbcType=VARCHAR}, #{positionId,jdbcType=VARCHAR}, 
      #{positionDesc,jdbcType=VARCHAR}, #{equipmentId,jdbcType=VARCHAR}, #{equipmentDesc,jdbcType=VARCHAR}, 
      #{breakdownDesc,jdbcType=VARCHAR}, #{breakdownCode,jdbcType=VARCHAR}, #{activeTime,jdbcType=TIMESTAMP}, 
      #{recoverTime,jdbcType=TIMESTAMP}, #{downtimeWindspeed,jdbcType=VARCHAR}, #{recoverWindspeed,jdbcType=VARCHAR}, 
      #{interruptTime,jdbcType=VARCHAR}, #{electricityLoss,jdbcType=VARCHAR}, #{gridConnectedRecoverTime,jdbcType=TIMESTAMP}, 
      #{breakdownLocation,jdbcType=VARCHAR}, #{breakdownAttribute,jdbcType=VARCHAR}, 
      #{phenomenon,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, #{defectRemark,jdbcType=VARCHAR}, 
      #{defectAnalysis,jdbcType=VARCHAR}, #{planStartTime,jdbcType=TIMESTAMP}, #{planEndTime,jdbcType=TIMESTAMP}, 
      #{planWorkHour,jdbcType=VARCHAR}, #{planMaterialFee,jdbcType=VARCHAR}, #{planServiceFee,jdbcType=VARCHAR}, 
      #{actualCompleteTime,jdbcType=TIMESTAMP}, #{attachment,jdbcType=VARCHAR}, #{equipmentStatusRequirement1,jdbcType=VARCHAR}, 
      #{equipmentStatusRequirement2,jdbcType=VARCHAR}, #{otherRequirement,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.maintain.entity.DefectWorkorder" >
    insert into defect_workorder
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="workorderId != null and workorderId != ''" >
        workorder_id,
      </if>
      <if test="serialNumber != null and serialNumber != ''" >
        serial_number,
      </if>
      <if test="breakdownId != null" >
        breakdown_id,
      </if>
      <if test="workorderTypeId != null" >
        workorder_type_id,
      </if>
      <if test="workorderDesc != null" >
        workorder_desc,
      </if>
      <if test="maintainer != null" >
        maintainer,
      </if>
      <if test="maintainDate != null" >
        maintain_date,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="flowStatus != null" >
        flow_status,
      </if>
      <if test="windId != null" >
        wind_id,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="dealMode != null" >
        deal_mode,
      </if>
      <if test="dutyTeam != null" >
        duty_team,
      </if>
      <if test="dutyHead != null" >
        duty_head,
      </if>
      <if test="fillPerson != null" >
        fill_person,
      </if>
      <if test="fillTime != null" >
        fill_time,
      </if>
      <if test="unitMember != null" >
        unit_member,
      </if>
      <if test="otherUnitMember != null" >
        other_unit_member,
      </if>
      <if test="crewId != null" >
        crew_id,
      </if>
      <if test="positionId != null" >
        position_id,
      </if>
      <if test="positionDesc != null" >
        position_desc,
      </if>
      <if test="equipmentId != null" >
        equipment_id,
      </if>
      <if test="equipmentDesc != null" >
        equipment_desc,
      </if>
      <if test="breakdownDesc != null" >
        breakdown_desc,
      </if>
      <if test="breakdownCode != null" >
        breakdown_code,
      </if>
      <if test="activeTime != null" >
        active_time,
      </if>
      <if test="recoverTime != null" >
        recover_time,
      </if>
      <if test="downtimeWindspeed != null" >
        downtime_windspeed,
      </if>
      <if test="recoverWindspeed != null" >
        recover_windspeed,
      </if>
      <if test="interruptTime != null" >
        interrupt_time,
      </if>
      <if test="electricityLoss != null" >
        electricity_loss,
      </if>
      <if test="gridConnectedRecoverTime != null" >
        grid_connected_recover_time,
      </if>
      <if test="breakdownLocation != null" >
        breakdown_location,
      </if>
      <if test="breakdownAttribute != null" >
        breakdown_attribute,
      </if>
      <if test="phenomenon != null" >
        phenomenon,
      </if>
      <if test="picture != null" >
        picture,
      </if>
      <if test="defectRemark != null" >
        defect_remark,
      </if>
      <if test="defectAnalysis != null" >
        defect_analysis,
      </if>
      <if test="planStartTime != null" >
        plan_start_time,
      </if>
      <if test="planEndTime != null" >
        plan_end_time,
      </if>
      <if test="planWorkHour != null" >
        plan_work_hour,
      </if>
      <if test="planMaterialFee != null" >
        plan_material_fee,
      </if>
      <if test="planServiceFee != null" >
        plan_service_fee,
      </if>
      <if test="actualCompleteTime != null" >
        actual_complete_time,
      </if>
      <if test="attachment != null" >
        attachment,
      </if>
      <if test="equipmentStatusRequirement1 != null" >
        equipment_status_requirement_1,
      </if>
      <if test="equipmentStatusRequirement2 != null" >
        equipment_status_requirement_2,
      </if>
      <if test="otherRequirement != null" >
        other_requirement,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="workorderId != null and  workorderId != ''" >
        #{workorderId,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null and serialNumber != ''" >
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="breakdownId != null" >
        #{breakdownId,jdbcType=VARCHAR},
      </if>
      <if test="workorderTypeId != null" >
        #{workorderTypeId,jdbcType=VARCHAR},
      </if>
      <if test="workorderDesc != null" >
        #{workorderDesc,jdbcType=VARCHAR},
      </if>
      <if test="maintainer != null" >
        #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="maintainDate != null" >
        #{maintainDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="flowStatus != null" >
        #{flowStatus,jdbcType=VARCHAR},
      </if>
      <if test="windId != null" >
        #{windId,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="dealMode != null" >
        #{dealMode,jdbcType=VARCHAR},
      </if>
      <if test="dutyTeam != null" >
        #{dutyTeam,jdbcType=VARCHAR},
      </if>
      <if test="dutyHead != null" >
        #{dutyHead,jdbcType=VARCHAR},
      </if>
      <if test="fillPerson != null" >
        #{fillPerson,jdbcType=VARCHAR},
      </if>
      <if test="fillTime != null" >
        #{fillTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unitMember != null" >
        #{unitMember,jdbcType=VARCHAR},
      </if>
      <if test="otherUnitMember != null" >
        #{otherUnitMember,jdbcType=VARCHAR},
      </if>
      <if test="crewId != null" >
        #{crewId,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null" >
        #{positionId,jdbcType=VARCHAR},
      </if>
      <if test="positionDesc != null" >
        #{positionDesc,jdbcType=VARCHAR},
      </if>
      <if test="equipmentId != null" >
        #{equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="equipmentDesc != null" >
        #{equipmentDesc,jdbcType=VARCHAR},
      </if>
      <if test="breakdownDesc != null" >
        #{breakdownDesc,jdbcType=VARCHAR},
      </if>
      <if test="breakdownCode != null" >
        #{breakdownCode,jdbcType=VARCHAR},
      </if>
      <if test="activeTime != null" >
        #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recoverTime != null" >
        #{recoverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="downtimeWindspeed != null" >
        #{downtimeWindspeed,jdbcType=VARCHAR},
      </if>
      <if test="recoverWindspeed != null" >
        #{recoverWindspeed,jdbcType=VARCHAR},
      </if>
      <if test="interruptTime != null" >
        #{interruptTime,jdbcType=VARCHAR},
      </if>
      <if test="electricityLoss != null" >
        #{electricityLoss,jdbcType=VARCHAR},
      </if>
      <if test="gridConnectedRecoverTime != null" >
        #{gridConnectedRecoverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="breakdownLocation != null" >
        #{breakdownLocation,jdbcType=VARCHAR},
      </if>
      <if test="breakdownAttribute != null" >
        #{breakdownAttribute,jdbcType=VARCHAR},
      </if>
      <if test="phenomenon != null" >
        #{phenomenon,jdbcType=VARCHAR},
      </if>
      <if test="picture != null" >
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="defectRemark != null" >
        #{defectRemark,jdbcType=VARCHAR},
      </if>
      <if test="defectAnalysis != null" >
        #{defectAnalysis,jdbcType=VARCHAR},
      </if>
      <if test="planStartTime != null" >
        #{planStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planEndTime != null" >
        #{planEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planWorkHour != null" >
        #{planWorkHour,jdbcType=VARCHAR},
      </if>
      <if test="planMaterialFee != null" >
        #{planMaterialFee,jdbcType=VARCHAR},
      </if>
      <if test="planServiceFee != null" >
        #{planServiceFee,jdbcType=VARCHAR},
      </if>
      <if test="actualCompleteTime != null" >
        #{actualCompleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attachment != null" >
        #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="equipmentStatusRequirement1 != null" >
        #{equipmentStatusRequirement1,jdbcType=VARCHAR},
      </if>
      <if test="equipmentStatusRequirement2 != null" >
        #{equipmentStatusRequirement2,jdbcType=VARCHAR},
      </if>
      <if test="otherRequirement != null" >
        #{otherRequirement,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.maintain.entity.DefectWorkorderExample" resultType="java.lang.Integer" >
    select count(*) from defect_workorder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update defect_workorder
    <set >
      <if test="record.workorderId != null" >
        workorder_id = #{record.workorderId,jdbcType=VARCHAR},
      </if>
      <if test="record.serialNumber != null" >
        serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.breakdownId != null" >
        breakdown_id = #{record.breakdownId,jdbcType=VARCHAR},
      </if>
      <if test="record.workorderTypeId != null" >
        workorder_type_id = #{record.workorderTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.workorderDesc != null" >
        workorder_desc = #{record.workorderDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.maintainer != null" >
        maintainer = #{record.maintainer,jdbcType=VARCHAR},
      </if>
      <if test="record.maintainDate != null" >
        maintain_date = #{record.maintainDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.flowStatus != null" >
        flow_status = #{record.flowStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.windId != null" >
        wind_id = #{record.windId,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null" >
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.dealMode != null" >
        deal_mode = #{record.dealMode,jdbcType=VARCHAR},
      </if>
      <if test="record.dutyTeam != null" >
        duty_team = #{record.dutyTeam,jdbcType=VARCHAR},
      </if>
      <if test="record.dutyHead != null" >
        duty_head = #{record.dutyHead,jdbcType=VARCHAR},
      </if>
      <if test="record.fillPerson != null" >
        fill_person = #{record.fillPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.fillTime != null" >
        fill_time = #{record.fillTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.unitMember != null" >
        unit_member = #{record.unitMember,jdbcType=VARCHAR},
      </if>
      <if test="record.otherUnitMember != null" >
        other_unit_member = #{record.otherUnitMember,jdbcType=VARCHAR},
      </if>
      <if test="record.crewId != null" >
        crew_id = #{record.crewId,jdbcType=VARCHAR},
      </if>
      <if test="record.positionId != null" >
        position_id = #{record.positionId,jdbcType=VARCHAR},
      </if>
      <if test="record.positionDesc != null" >
        position_desc = #{record.positionDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentId != null" >
        equipment_id = #{record.equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentDesc != null" >
        equipment_desc = #{record.equipmentDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.breakdownDesc != null" >
        breakdown_desc = #{record.breakdownDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.breakdownCode != null" >
        breakdown_code = #{record.breakdownCode,jdbcType=VARCHAR},
      </if>
      <if test="record.activeTime != null" >
        active_time = #{record.activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recoverTime != null" >
        recover_time = #{record.recoverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.downtimeWindspeed != null" >
        downtime_windspeed = #{record.downtimeWindspeed,jdbcType=VARCHAR},
      </if>
      <if test="record.recoverWindspeed != null" >
        recover_windspeed = #{record.recoverWindspeed,jdbcType=VARCHAR},
      </if>
      <if test="record.interruptTime != null" >
        interrupt_time = #{record.interruptTime,jdbcType=VARCHAR},
      </if>
      <if test="record.electricityLoss != null" >
        electricity_loss = #{record.electricityLoss,jdbcType=VARCHAR},
      </if>
      <if test="record.gridConnectedRecoverTime != null" >
        grid_connected_recover_time = #{record.gridConnectedRecoverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.breakdownLocation != null" >
        breakdown_location = #{record.breakdownLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.breakdownAttribute != null" >
        breakdown_attribute = #{record.breakdownAttribute,jdbcType=VARCHAR},
      </if>
      <if test="record.phenomenon != null" >
        phenomenon = #{record.phenomenon,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null" >
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.defectRemark != null" >
        defect_remark = #{record.defectRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.defectAnalysis != null" >
        defect_analysis = #{record.defectAnalysis,jdbcType=VARCHAR},
      </if>
      <if test="record.planStartTime != null" >
        plan_start_time = #{record.planStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.planEndTime != null" >
        plan_end_time = #{record.planEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.planWorkHour != null" >
        plan_work_hour = #{record.planWorkHour,jdbcType=VARCHAR},
      </if>
      <if test="record.planMaterialFee != null" >
        plan_material_fee = #{record.planMaterialFee,jdbcType=VARCHAR},
      </if>
      <if test="record.planServiceFee != null" >
        plan_service_fee = #{record.planServiceFee,jdbcType=VARCHAR},
      </if>
      <if test="record.actualCompleteTime != null" >
        actual_complete_time = #{record.actualCompleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attachment != null" >
        attachment = #{record.attachment,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentStatusRequirement1 != null" >
        equipment_status_requirement_1 = #{record.equipmentStatusRequirement1,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentStatusRequirement2 != null" >
        equipment_status_requirement_2 = #{record.equipmentStatusRequirement2,jdbcType=VARCHAR},
      </if>
      <if test="record.otherRequirement != null" >
        other_requirement = #{record.otherRequirement,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update defect_workorder
    set workorder_id = #{record.workorderId,jdbcType=VARCHAR},
      serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      breakdown_id = #{record.breakdownId,jdbcType=VARCHAR},
      workorder_type_id = #{record.workorderTypeId,jdbcType=VARCHAR},
      workorder_desc = #{record.workorderDesc,jdbcType=VARCHAR},
      maintainer = #{record.maintainer,jdbcType=VARCHAR},
      maintain_date = #{record.maintainDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      flow_status = #{record.flowStatus,jdbcType=VARCHAR},
      wind_id = #{record.windId,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      deal_mode = #{record.dealMode,jdbcType=VARCHAR},
      duty_team = #{record.dutyTeam,jdbcType=VARCHAR},
      duty_head = #{record.dutyHead,jdbcType=VARCHAR},
      fill_person = #{record.fillPerson,jdbcType=VARCHAR},
      fill_time = #{record.fillTime,jdbcType=TIMESTAMP},
      unit_member = #{record.unitMember,jdbcType=VARCHAR},
      other_unit_member = #{record.otherUnitMember,jdbcType=VARCHAR},
      crew_id = #{record.crewId,jdbcType=VARCHAR},
      position_id = #{record.positionId,jdbcType=VARCHAR},
      position_desc = #{record.positionDesc,jdbcType=VARCHAR},
      equipment_id = #{record.equipmentId,jdbcType=VARCHAR},
      equipment_desc = #{record.equipmentDesc,jdbcType=VARCHAR},
      breakdown_desc = #{record.breakdownDesc,jdbcType=VARCHAR},
      breakdown_code = #{record.breakdownCode,jdbcType=VARCHAR},
      active_time = #{record.activeTime,jdbcType=TIMESTAMP},
      recover_time = #{record.recoverTime,jdbcType=TIMESTAMP},
      downtime_windspeed = #{record.downtimeWindspeed,jdbcType=VARCHAR},
      recover_windspeed = #{record.recoverWindspeed,jdbcType=VARCHAR},
      interrupt_time = #{record.interruptTime,jdbcType=VARCHAR},
      electricity_loss = #{record.electricityLoss,jdbcType=VARCHAR},
      grid_connected_recover_time = #{record.gridConnectedRecoverTime,jdbcType=TIMESTAMP},
      breakdown_location = #{record.breakdownLocation,jdbcType=VARCHAR},
      breakdown_attribute = #{record.breakdownAttribute,jdbcType=VARCHAR},
      phenomenon = #{record.phenomenon,jdbcType=VARCHAR},
      picture = #{record.picture,jdbcType=VARCHAR},
      defect_remark = #{record.defectRemark,jdbcType=VARCHAR},
      defect_analysis = #{record.defectAnalysis,jdbcType=VARCHAR},
      plan_start_time = #{record.planStartTime,jdbcType=TIMESTAMP},
      plan_end_time = #{record.planEndTime,jdbcType=TIMESTAMP},
      plan_work_hour = #{record.planWorkHour,jdbcType=VARCHAR},
      plan_material_fee = #{record.planMaterialFee,jdbcType=VARCHAR},
      plan_service_fee = #{record.planServiceFee,jdbcType=VARCHAR},
      actual_complete_time = #{record.actualCompleteTime,jdbcType=TIMESTAMP},
      attachment = #{record.attachment,jdbcType=VARCHAR},
      equipment_status_requirement_1 = #{record.equipmentStatusRequirement1,jdbcType=VARCHAR},
      equipment_status_requirement_2 = #{record.equipmentStatusRequirement2,jdbcType=VARCHAR},
      other_requirement = #{record.otherRequirement,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.maintain.entity.DefectWorkorder" >
    update defect_workorder
    <set >
      <if test="serialNumber != null and serialNumber != ''" >
        serial_number = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="breakdownId != null" >
        breakdown_id = #{breakdownId,jdbcType=VARCHAR},
      </if>
      <if test="workorderTypeId != null" >
        workorder_type_id = #{workorderTypeId,jdbcType=VARCHAR},
      </if>
      <if test="workorderDesc != null" >
        workorder_desc = #{workorderDesc,jdbcType=VARCHAR},
      </if>
      <if test="maintainer != null" >
        maintainer = #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="maintainDate != null" >
        maintain_date = #{maintainDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="flowStatus != null" >
        flow_status = #{flowStatus,jdbcType=VARCHAR},
      </if>
      <if test="windId != null" >
        wind_id = #{windId,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="dealMode != null" >
        deal_mode = #{dealMode,jdbcType=VARCHAR},
      </if>
      <if test="dutyTeam != null" >
        duty_team = #{dutyTeam,jdbcType=VARCHAR},
      </if>
      <if test="dutyHead != null" >
        duty_head = #{dutyHead,jdbcType=VARCHAR},
      </if>
      <if test="fillPerson != null" >
        fill_person = #{fillPerson,jdbcType=VARCHAR},
      </if>
      <if test="fillTime != null" >
        fill_time = #{fillTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unitMember != null" >
        unit_member = #{unitMember,jdbcType=VARCHAR},
      </if>
      <if test="otherUnitMember != null" >
        other_unit_member = #{otherUnitMember,jdbcType=VARCHAR},
      </if>
      <if test="crewId != null" >
        crew_id = #{crewId,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null" >
        position_id = #{positionId,jdbcType=VARCHAR},
      </if>
      <if test="positionDesc != null" >
        position_desc = #{positionDesc,jdbcType=VARCHAR},
      </if>
      <if test="equipmentId != null" >
        equipment_id = #{equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="equipmentDesc != null" >
        equipment_desc = #{equipmentDesc,jdbcType=VARCHAR},
      </if>
      <if test="breakdownDesc != null" >
        breakdown_desc = #{breakdownDesc,jdbcType=VARCHAR},
      </if>
      <if test="breakdownCode != null" >
        breakdown_code = #{breakdownCode,jdbcType=VARCHAR},
      </if>
      <if test="activeTime != null" >
        active_time = #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recoverTime != null" >
        recover_time = #{recoverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="downtimeWindspeed != null" >
        downtime_windspeed = #{downtimeWindspeed,jdbcType=VARCHAR},
      </if>
      <if test="recoverWindspeed != null" >
        recover_windspeed = #{recoverWindspeed,jdbcType=VARCHAR},
      </if>
      <if test="interruptTime != null" >
        interrupt_time = #{interruptTime,jdbcType=VARCHAR},
      </if>
      <if test="electricityLoss != null" >
        electricity_loss = #{electricityLoss,jdbcType=VARCHAR},
      </if>
      <if test="gridConnectedRecoverTime != null" >
        grid_connected_recover_time = #{gridConnectedRecoverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="breakdownLocation != null" >
        breakdown_location = #{breakdownLocation,jdbcType=VARCHAR},
      </if>
      <if test="breakdownAttribute != null" >
        breakdown_attribute = #{breakdownAttribute,jdbcType=VARCHAR},
      </if>
      <if test="phenomenon != null" >
        phenomenon = #{phenomenon,jdbcType=VARCHAR},
      </if>
      <if test="picture != null" >
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="defectRemark != null" >
        defect_remark = #{defectRemark,jdbcType=VARCHAR},
      </if>
      <if test="defectAnalysis != null" >
        defect_analysis = #{defectAnalysis,jdbcType=VARCHAR},
      </if>
      <if test="planStartTime != null" >
        plan_start_time = #{planStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planEndTime != null" >
        plan_end_time = #{planEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="planWorkHour != null" >
        plan_work_hour = #{planWorkHour,jdbcType=VARCHAR},
      </if>
      <if test="planMaterialFee != null" >
        plan_material_fee = #{planMaterialFee,jdbcType=VARCHAR},
      </if>
      <if test="planServiceFee != null" >
        plan_service_fee = #{planServiceFee,jdbcType=VARCHAR},
      </if>
      <if test="actualCompleteTime != null" >
        actual_complete_time = #{actualCompleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attachment != null" >
        attachment = #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="equipmentStatusRequirement1 != null" >
        equipment_status_requirement_1 = #{equipmentStatusRequirement1,jdbcType=VARCHAR},
      </if>
      <if test="equipmentStatusRequirement2 != null" >
        equipment_status_requirement_2 = #{equipmentStatusRequirement2,jdbcType=VARCHAR},
      </if>
      <if test="otherRequirement != null" >
        other_requirement = #{otherRequirement,jdbcType=VARCHAR},
      </if>
    </set>
    where workorder_id = #{workorderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.maintain.entity.DefectWorkorder" >
    update defect_workorder
    set serial_number = #{serialNumber,jdbcType=VARCHAR},
      breakdown_id = #{breakdownId,jdbcType=VARCHAR},
      workorder_type_id = #{workorderTypeId,jdbcType=VARCHAR},
      workorder_desc = #{workorderDesc,jdbcType=VARCHAR},
      maintainer = #{maintainer,jdbcType=VARCHAR},
      maintain_date = #{maintainDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      flow_status = #{flowStatus,jdbcType=VARCHAR},
      wind_id = #{windId,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      deal_mode = #{dealMode,jdbcType=VARCHAR},
      duty_team = #{dutyTeam,jdbcType=VARCHAR},
      duty_head = #{dutyHead,jdbcType=VARCHAR},
      fill_person = #{fillPerson,jdbcType=VARCHAR},
      fill_time = #{fillTime,jdbcType=TIMESTAMP},
      unit_member = #{unitMember,jdbcType=VARCHAR},
      other_unit_member = #{otherUnitMember,jdbcType=VARCHAR},
      crew_id = #{crewId,jdbcType=VARCHAR},
      position_id = #{positionId,jdbcType=VARCHAR},
      position_desc = #{positionDesc,jdbcType=VARCHAR},
      equipment_id = #{equipmentId,jdbcType=VARCHAR},
      equipment_desc = #{equipmentDesc,jdbcType=VARCHAR},
      breakdown_desc = #{breakdownDesc,jdbcType=VARCHAR},
      breakdown_code = #{breakdownCode,jdbcType=VARCHAR},
      active_time = #{activeTime,jdbcType=TIMESTAMP},
      recover_time = #{recoverTime,jdbcType=TIMESTAMP},
      downtime_windspeed = #{downtimeWindspeed,jdbcType=VARCHAR},
      recover_windspeed = #{recoverWindspeed,jdbcType=VARCHAR},
      interrupt_time = #{interruptTime,jdbcType=VARCHAR},
      electricity_loss = #{electricityLoss,jdbcType=VARCHAR},
      grid_connected_recover_time = #{gridConnectedRecoverTime,jdbcType=TIMESTAMP},
      breakdown_location = #{breakdownLocation,jdbcType=VARCHAR},
      breakdown_attribute = #{breakdownAttribute,jdbcType=VARCHAR},
      phenomenon = #{phenomenon,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      defect_remark = #{defectRemark,jdbcType=VARCHAR},
      defect_analysis = #{defectAnalysis,jdbcType=VARCHAR},
      plan_start_time = #{planStartTime,jdbcType=TIMESTAMP},
      plan_end_time = #{planEndTime,jdbcType=TIMESTAMP},
      plan_work_hour = #{planWorkHour,jdbcType=VARCHAR},
      plan_material_fee = #{planMaterialFee,jdbcType=VARCHAR},
      plan_service_fee = #{planServiceFee,jdbcType=VARCHAR},
      actual_complete_time = #{actualCompleteTime,jdbcType=TIMESTAMP},
      attachment = #{attachment,jdbcType=VARCHAR},
      equipment_status_requirement_1 = #{equipmentStatusRequirement1,jdbcType=VARCHAR},
      equipment_status_requirement_2 = #{equipmentStatusRequirement2,jdbcType=VARCHAR},
      other_requirement = #{otherRequirement,jdbcType=VARCHAR}
    where workorder_id = #{workorderId,jdbcType=VARCHAR}
  </update>
</mapper>