<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.maintain.mapper.WorkorderMaterialMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.maintain.entity.WorkorderMaterial" >
    <id column="workorder_material_id" property="workorderMaterialId" jdbcType="VARCHAR" />
    <result column="workorder_id" property="workorderId" jdbcType="VARCHAR" />
    <result column="knowledge_id" property="knowledgeId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="material_number" property="materialNumber" jdbcType="VARCHAR" />
    <result column="material_desc" property="materialDesc" jdbcType="VARCHAR" />
    <result column="material_unit" property="materialUnit" jdbcType="VARCHAR" />
    <result column="material_plan_amount" property="materialPlanAmount" jdbcType="VARCHAR" />
    <result column="material_cost" property="materialCost" jdbcType="VARCHAR" />
    <result column="material_actual_amount" property="materialActualAmount" jdbcType="VARCHAR" />
    <result column="material_actual_money" property="materialActualMoney" jdbcType="VARCHAR" />
    <result column="material_wind_name" property="materialWindName" jdbcType="VARCHAR" />
    <result column="final_receive_material" property="finalReceiveMaterial" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    workorder_material_id, workorder_id, knowledge_id, order_id, material_number, material_desc, 
    material_unit, material_plan_amount, material_cost, material_actual_amount, material_actual_money, 
    material_wind_name, final_receive_material
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.maintain.entity.WorkorderMaterialExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from workorder_material
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from workorder_material
    where workorder_material_id = #{workorderMaterialId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from workorder_material
    where workorder_material_id = #{workorderMaterialId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.maintain.entity.WorkorderMaterialExample" >
    delete from workorder_material
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.maintain.entity.WorkorderMaterial" >
    insert into workorder_material (workorder_material_id, workorder_id, 
      knowledge_id, order_id, material_number, 
      material_desc, material_unit, material_plan_amount, 
      material_cost, material_actual_amount, material_actual_money, 
      material_wind_name, final_receive_material)
    values (#{workorderMaterialId,jdbcType=VARCHAR}, #{workorderId,jdbcType=VARCHAR}, 
      #{knowledgeId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{materialNumber,jdbcType=VARCHAR}, 
      #{materialDesc,jdbcType=VARCHAR}, #{materialUnit,jdbcType=VARCHAR}, #{materialPlanAmount,jdbcType=VARCHAR}, 
      #{materialCost,jdbcType=VARCHAR}, #{materialActualAmount,jdbcType=VARCHAR}, #{materialActualMoney,jdbcType=VARCHAR}, 
      #{materialWindName,jdbcType=VARCHAR}, #{finalReceiveMaterial,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.maintain.entity.WorkorderMaterial" >
    insert into workorder_material
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="workorderMaterialId != null" >
        workorder_material_id,
      </if>
      <if test="workorderId != null" >
        workorder_id,
      </if>
      <if test="knowledgeId != null" >
        knowledge_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="materialNumber != null" >
        material_number,
      </if>
      <if test="materialDesc != null" >
        material_desc,
      </if>
      <if test="materialUnit != null" >
        material_unit,
      </if>
      <if test="materialPlanAmount != null" >
        material_plan_amount,
      </if>
      <if test="materialCost != null" >
        material_cost,
      </if>
      <if test="materialActualAmount != null" >
        material_actual_amount,
      </if>
      <if test="materialActualMoney != null" >
        material_actual_money,
      </if>
      <if test="materialWindName != null" >
        material_wind_name,
      </if>
      <if test="finalReceiveMaterial != null" >
        final_receive_material,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="workorderMaterialId != null" >
        #{workorderMaterialId,jdbcType=VARCHAR},
      </if>
      <if test="workorderId != null" >
        #{workorderId,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeId != null" >
        #{knowledgeId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="materialNumber != null" >
        #{materialNumber,jdbcType=VARCHAR},
      </if>
      <if test="materialDesc != null" >
        #{materialDesc,jdbcType=VARCHAR},
      </if>
      <if test="materialUnit != null" >
        #{materialUnit,jdbcType=VARCHAR},
      </if>
      <if test="materialPlanAmount != null" >
        #{materialPlanAmount,jdbcType=VARCHAR},
      </if>
      <if test="materialCost != null" >
        #{materialCost,jdbcType=VARCHAR},
      </if>
      <if test="materialActualAmount != null" >
        #{materialActualAmount,jdbcType=VARCHAR},
      </if>
      <if test="materialActualMoney != null" >
        #{materialActualMoney,jdbcType=VARCHAR},
      </if>
      <if test="materialWindName != null" >
        #{materialWindName,jdbcType=VARCHAR},
      </if>
      <if test="finalReceiveMaterial != null" >
        #{finalReceiveMaterial,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.maintain.entity.WorkorderMaterialExample" resultType="java.lang.Integer" >
    select count(*) from workorder_material
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update workorder_material
    <set >
      <if test="record.workorderMaterialId != null" >
        workorder_material_id = #{record.workorderMaterialId,jdbcType=VARCHAR},
      </if>
      <if test="record.workorderId != null" >
        workorder_id = #{record.workorderId,jdbcType=VARCHAR},
      </if>
      <if test="record.knowledgeId != null" >
        knowledge_id = #{record.knowledgeId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.materialNumber != null" >
        material_number = #{record.materialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.materialDesc != null" >
        material_desc = #{record.materialDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.materialUnit != null" >
        material_unit = #{record.materialUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.materialPlanAmount != null" >
        material_plan_amount = #{record.materialPlanAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.materialCost != null" >
        material_cost = #{record.materialCost,jdbcType=VARCHAR},
      </if>
      <if test="record.materialActualAmount != null" >
        material_actual_amount = #{record.materialActualAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.materialActualMoney != null" >
        material_actual_money = #{record.materialActualMoney,jdbcType=VARCHAR},
      </if>
      <if test="record.materialWindName != null" >
        material_wind_name = #{record.materialWindName,jdbcType=VARCHAR},
      </if>
      <if test="record.finalReceiveMaterial != null" >
        final_receive_material = #{record.finalReceiveMaterial,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update workorder_material
    set workorder_material_id = #{record.workorderMaterialId,jdbcType=VARCHAR},
      workorder_id = #{record.workorderId,jdbcType=VARCHAR},
      knowledge_id = #{record.knowledgeId,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      material_number = #{record.materialNumber,jdbcType=VARCHAR},
      material_desc = #{record.materialDesc,jdbcType=VARCHAR},
      material_unit = #{record.materialUnit,jdbcType=VARCHAR},
      material_plan_amount = #{record.materialPlanAmount,jdbcType=VARCHAR},
      material_cost = #{record.materialCost,jdbcType=VARCHAR},
      material_actual_amount = #{record.materialActualAmount,jdbcType=VARCHAR},
      material_actual_money = #{record.materialActualMoney,jdbcType=VARCHAR},
      material_wind_name = #{record.materialWindName,jdbcType=VARCHAR},
      final_receive_material = #{record.finalReceiveMaterial,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.maintain.entity.WorkorderMaterial" >
    update workorder_material
    <set >
      <if test="workorderId != null" >
        workorder_id = #{workorderId,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeId != null" >
        knowledge_id = #{knowledgeId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="materialNumber != null" >
        material_number = #{materialNumber,jdbcType=VARCHAR},
      </if>
      <if test="materialDesc != null" >
        material_desc = #{materialDesc,jdbcType=VARCHAR},
      </if>
      <if test="materialUnit != null" >
        material_unit = #{materialUnit,jdbcType=VARCHAR},
      </if>
      <if test="materialPlanAmount != null" >
        material_plan_amount = #{materialPlanAmount,jdbcType=VARCHAR},
      </if>
      <if test="materialCost != null" >
        material_cost = #{materialCost,jdbcType=VARCHAR},
      </if>
      <if test="materialActualAmount != null" >
        material_actual_amount = #{materialActualAmount,jdbcType=VARCHAR},
      </if>
      <if test="materialActualMoney != null" >
        material_actual_money = #{materialActualMoney,jdbcType=VARCHAR},
      </if>
      <if test="materialWindName != null" >
        material_wind_name = #{materialWindName,jdbcType=VARCHAR},
      </if>
      <if test="finalReceiveMaterial != null" >
        final_receive_material = #{finalReceiveMaterial,jdbcType=VARCHAR},
      </if>
    </set>
    where workorder_material_id = #{workorderMaterialId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.maintain.entity.WorkorderMaterial" >
    update workorder_material
    set workorder_id = #{workorderId,jdbcType=VARCHAR},
      knowledge_id = #{knowledgeId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      material_number = #{materialNumber,jdbcType=VARCHAR},
      material_desc = #{materialDesc,jdbcType=VARCHAR},
      material_unit = #{materialUnit,jdbcType=VARCHAR},
      material_plan_amount = #{materialPlanAmount,jdbcType=VARCHAR},
      material_cost = #{materialCost,jdbcType=VARCHAR},
      material_actual_amount = #{materialActualAmount,jdbcType=VARCHAR},
      material_actual_money = #{materialActualMoney,jdbcType=VARCHAR},
      material_wind_name = #{materialWindName,jdbcType=VARCHAR},
      final_receive_material = #{finalReceiveMaterial,jdbcType=VARCHAR}
    where workorder_material_id = #{workorderMaterialId,jdbcType=VARCHAR}
  </update>
</mapper>