<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.maintain.mapper.MaintainWeekPlanMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.maintain.entity.MaintainWeekPlan" >
    <id column="week_id" property="weekId" jdbcType="VARCHAR" />
    <result column="serial_number" property="serialNumber" jdbcType="VARCHAR" />
    <result column="maintainer" property="maintainer" jdbcType="VARCHAR" />
    <result column="maintain_time" property="maintainTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="week_of_year" property="weekOfYear" jdbcType="VARCHAR" />
    <result column="wind_id" property="windId" jdbcType="VARCHAR" />
    <result column="record_person" property="recordPerson" jdbcType="VARCHAR" />
    <result column="on_duty_person" property="onDutyPerson" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    week_id, serial_number, maintainer, maintain_time, status, start_date, end_date, 
    week_of_year, wind_id, record_person, on_duty_person, remark
  </sql>







  <update id="batchDelete" parameterType="java.lang.String">
    update maintain_week_plan set status = "0"
    where week_id in
    <foreach collection="array" index="index" item="item"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
  <resultMap id="GetResultMap" type="com.qz.zframe.maintain.vo.MaintainWeekPlanVo" >
    <id column="week_id" property="weekId" jdbcType="VARCHAR" />
    <result column="serial_number" property="serialNumber" jdbcType="VARCHAR" />
    <result column="maintainer" property="maintainer" jdbcType="VARCHAR" />
    <result column="maintain_time" property="maintainTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
    <result column="week_of_year" property="weekOfYear" jdbcType="VARCHAR" />
    <result column="wind_id" property="windId" jdbcType="VARCHAR" />
    <result column="record_person" property="recordPerson" jdbcType="VARCHAR" />
    <result column="on_duty_person" property="onDutyPerson" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="wind_name" property="windName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Get_Column_List" >
    a.week_id as week_id, a.serial_number as serial_number, a.maintainer as maintainer, a.maintain_time as maintain_time,a.status as status,
    a.start_date as start_date, a.end_date as end_date, a.week_of_year as week_of_year,
    a.wind_id as wind_id, a.record_person as record_person, a.on_duty_person as on_duty_person, a.remark as remark,
    b.architecture_name as wind_name
  </sql>
  <select id="getMaintainWeekPlanDetail" resultMap="GetResultMap">
    select
    <include refid="Get_Column_List" />
    from maintain_week_plan a
    left join org_architecture b on a.wind_id = b.architecture_id and architecture_type = '02'
    where a.status != '0' and a.week_id = #{weekId}
  </select>
  <select id="getMaintainWeekPlanList" resultMap="GetResultMap">
    select
    <include refid="Get_Column_List" />
    from maintain_week_plan a
    left join org_architecture b on a.wind_id = b.architecture_id and architecture_type = '02'
    where a.status != '0'
    <if test="map.windId != null" >
      and a.wind_id = #{map.windId}
    </if>
    <if test="map.startDate != null">
      and a.start_date &lt;= #{map.startDate}
    </if>
    <if test="map.endDate != null">
      and a.end_date &gt;= #{map.endDate}
    </if>
  </select>
  <select id="getTotal" resultType="java.lang.Integer">
    select
    count(*)
    from maintain_week_plan
    where status != '0'
    <if test="map.windId != null" >
      and wind_id = #{map.windId}
    </if>
    <if test="map.startDate != null">
      and start_date &lt;= #{map.startDate}
    </if>
    <if test="map.endDate != null">
      and end_date &gt;= #{map.endDate}
    </if>
  </select>














  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.maintain.entity.MaintainWeekPlanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from maintain_week_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from maintain_week_plan
    where week_id = #{weekId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from maintain_week_plan
    where week_id = #{weekId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.maintain.entity.MaintainWeekPlanExample" >
    delete from maintain_week_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.maintain.entity.MaintainWeekPlan" >
    insert into maintain_week_plan (week_id, serial_number, maintainer, 
      maintain_time, status, start_date, 
      end_date, week_of_year, wind_id, 
      record_person, on_duty_person, remark
      )
    values (#{weekId,jdbcType=VARCHAR}, #{serialNumber,jdbcType=VARCHAR}, #{maintainer,jdbcType=VARCHAR}, 
      #{maintainTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE}, 
      #{endDate,jdbcType=DATE}, #{weekOfYear,jdbcType=VARCHAR}, #{windId,jdbcType=VARCHAR}, 
      #{recordPerson,jdbcType=VARCHAR}, #{onDutyPerson,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.maintain.entity.MaintainWeekPlan" >
    insert into maintain_week_plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="weekId != null" >
        week_id,
      </if>
      <if test="serialNumber != null" >
        serial_number,
      </if>
      <if test="maintainer != null" >
        maintainer,
      </if>
      <if test="maintainTime != null" >
        maintain_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="weekOfYear != null" >
        week_of_year,
      </if>
      <if test="windId != null" >
        wind_id,
      </if>
      <if test="recordPerson != null" >
        record_person,
      </if>
      <if test="onDutyPerson != null" >
        on_duty_person,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="weekId != null" >
        #{weekId,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null" >
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="maintainer != null" >
        #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="maintainTime != null" >
        #{maintainTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=DATE},
      </if>
      <if test="weekOfYear != null" >
        #{weekOfYear,jdbcType=VARCHAR},
      </if>
      <if test="windId != null" >
        #{windId,jdbcType=VARCHAR},
      </if>
      <if test="recordPerson != null" >
        #{recordPerson,jdbcType=VARCHAR},
      </if>
      <if test="onDutyPerson != null" >
        #{onDutyPerson,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.maintain.entity.MaintainWeekPlanExample" resultType="java.lang.Integer" >
    select count(*) from maintain_week_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update maintain_week_plan
    <set >
      <if test="record.weekId != null" >
        week_id = #{record.weekId,jdbcType=VARCHAR},
      </if>
      <if test="record.serialNumber != null" >
        serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.maintainer != null" >
        maintainer = #{record.maintainer,jdbcType=VARCHAR},
      </if>
      <if test="record.maintainTime != null" >
        maintain_time = #{record.maintainTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.weekOfYear != null" >
        week_of_year = #{record.weekOfYear,jdbcType=VARCHAR},
      </if>
      <if test="record.windId != null" >
        wind_id = #{record.windId,jdbcType=VARCHAR},
      </if>
      <if test="record.recordPerson != null" >
        record_person = #{record.recordPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.onDutyPerson != null" >
        on_duty_person = #{record.onDutyPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update maintain_week_plan
    set week_id = #{record.weekId,jdbcType=VARCHAR},
      serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      maintainer = #{record.maintainer,jdbcType=VARCHAR},
      maintain_time = #{record.maintainTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      week_of_year = #{record.weekOfYear,jdbcType=VARCHAR},
      wind_id = #{record.windId,jdbcType=VARCHAR},
      record_person = #{record.recordPerson,jdbcType=VARCHAR},
      on_duty_person = #{record.onDutyPerson,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.maintain.entity.MaintainWeekPlan" >
    update maintain_week_plan
    <set >
      <if test="serialNumber != null" >
        serial_number = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="maintainer != null" >
        maintainer = #{maintainer,jdbcType=VARCHAR},
      </if>
      <if test="maintainTime != null" >
        maintain_time = #{maintainTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="weekOfYear != null" >
        week_of_year = #{weekOfYear,jdbcType=VARCHAR},
      </if>
      <if test="windId != null" >
        wind_id = #{windId,jdbcType=VARCHAR},
      </if>
      <if test="recordPerson != null" >
        record_person = #{recordPerson,jdbcType=VARCHAR},
      </if>
      <if test="onDutyPerson != null" >
        on_duty_person = #{onDutyPerson,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where week_id = #{weekId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.maintain.entity.MaintainWeekPlan" >
    update maintain_week_plan
    set serial_number = #{serialNumber,jdbcType=VARCHAR},
      maintainer = #{maintainer,jdbcType=VARCHAR},
      maintain_time = #{maintainTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      week_of_year = #{weekOfYear,jdbcType=VARCHAR},
      wind_id = #{windId,jdbcType=VARCHAR},
      record_person = #{recordPerson,jdbcType=VARCHAR},
      on_duty_person = #{onDutyPerson,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where week_id = #{weekId,jdbcType=VARCHAR}
  </update>
</mapper>