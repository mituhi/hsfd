<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.zframe.maintain.mapper.WorkorderProcessMapper" >
  <resultMap id="BaseResultMap" type="com.qz.zframe.maintain.entity.WorkorderProcess" >
    <id column="process_id" property="processId" jdbcType="VARCHAR" />
    <result column="workorder_id" property="workorderId" jdbcType="VARCHAR" />
    <result column="knowledge_id" property="knowledgeId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="process_number" property="processNumber" jdbcType="VARCHAR" />
    <result column="process_desc" property="processDesc" jdbcType="VARCHAR" />
    <result column="process_external" property="processExternal" jdbcType="VARCHAR" />
    <result column="process_plan_work_hours" property="processPlanWorkHours" jdbcType="VARCHAR" />
    <result column="process_plan_person_num" property="processPlanPersonNum" jdbcType="VARCHAR" />
    <result column="process_actual_work_hours" property="processActualWorkHours" jdbcType="VARCHAR" />
    <result column="process_actual_person_num" property="processActualPersonNum" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    process_id, workorder_id, knowledge_id, order_id, process_number, process_desc, process_external, 
    process_plan_work_hours, process_plan_person_num, process_actual_work_hours, process_actual_person_num
  </sql>





  <delete id="batchDeleteByWorkOrderIds" parameterType="java.lang.String">
    delete from workorder_process
    where workorder_id in
    <foreach collection="list" index="index" item="item"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <delete id="batchDeleteByOrderIds" parameterType="java.lang.String">
    delete from workorder_process
    where order_id in
    <foreach collection="list" index="index" item="item"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <delete id="batchDeleteByKnowledgeIds" parameterType="java.lang.String">
    delete from workorder_process
    where knowledge_id in
    <foreach collection="list" index="index" item="item"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>






  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qz.zframe.maintain.entity.WorkorderProcessExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from workorder_process
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from workorder_process
    where process_id = #{processId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from workorder_process
    where process_id = #{processId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qz.zframe.maintain.entity.WorkorderProcessExample" >
    delete from workorder_process
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qz.zframe.maintain.entity.WorkorderProcess" >
    insert into workorder_process (process_id, workorder_id, knowledge_id, 
      order_id, process_number, process_desc, 
      process_external, process_plan_work_hours, 
      process_plan_person_num, process_actual_work_hours, 
      process_actual_person_num)
    values (#{processId,jdbcType=VARCHAR}, #{workorderId,jdbcType=VARCHAR}, #{knowledgeId,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=VARCHAR}, #{processNumber,jdbcType=VARCHAR}, #{processDesc,jdbcType=VARCHAR}, 
      #{processExternal,jdbcType=VARCHAR}, #{processPlanWorkHours,jdbcType=VARCHAR}, 
      #{processPlanPersonNum,jdbcType=VARCHAR}, #{processActualWorkHours,jdbcType=VARCHAR}, 
      #{processActualPersonNum,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qz.zframe.maintain.entity.WorkorderProcess" >
    insert into workorder_process
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="processId != null" >
        process_id,
      </if>
      <if test="workorderId != null" >
        workorder_id,
      </if>
      <if test="knowledgeId != null" >
        knowledge_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="processNumber != null" >
        process_number,
      </if>
      <if test="processDesc != null" >
        process_desc,
      </if>
      <if test="processExternal != null" >
        process_external,
      </if>
      <if test="processPlanWorkHours != null" >
        process_plan_work_hours,
      </if>
      <if test="processPlanPersonNum != null" >
        process_plan_person_num,
      </if>
      <if test="processActualWorkHours != null" >
        process_actual_work_hours,
      </if>
      <if test="processActualPersonNum != null" >
        process_actual_person_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="processId != null" >
        #{processId,jdbcType=VARCHAR},
      </if>
      <if test="workorderId != null" >
        #{workorderId,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeId != null" >
        #{knowledgeId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="processNumber != null" >
        #{processNumber,jdbcType=VARCHAR},
      </if>
      <if test="processDesc != null" >
        #{processDesc,jdbcType=VARCHAR},
      </if>
      <if test="processExternal != null" >
        #{processExternal,jdbcType=VARCHAR},
      </if>
      <if test="processPlanWorkHours != null" >
        #{processPlanWorkHours,jdbcType=VARCHAR},
      </if>
      <if test="processPlanPersonNum != null" >
        #{processPlanPersonNum,jdbcType=VARCHAR},
      </if>
      <if test="processActualWorkHours != null" >
        #{processActualWorkHours,jdbcType=VARCHAR},
      </if>
      <if test="processActualPersonNum != null" >
        #{processActualPersonNum,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qz.zframe.maintain.entity.WorkorderProcessExample" resultType="java.lang.Integer" >
    select count(*) from workorder_process
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update workorder_process
    <set >
      <if test="record.processId != null" >
        process_id = #{record.processId,jdbcType=VARCHAR},
      </if>
      <if test="record.workorderId != null" >
        workorder_id = #{record.workorderId,jdbcType=VARCHAR},
      </if>
      <if test="record.knowledgeId != null" >
        knowledge_id = #{record.knowledgeId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.processNumber != null" >
        process_number = #{record.processNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.processDesc != null" >
        process_desc = #{record.processDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.processExternal != null" >
        process_external = #{record.processExternal,jdbcType=VARCHAR},
      </if>
      <if test="record.processPlanWorkHours != null" >
        process_plan_work_hours = #{record.processPlanWorkHours,jdbcType=VARCHAR},
      </if>
      <if test="record.processPlanPersonNum != null" >
        process_plan_person_num = #{record.processPlanPersonNum,jdbcType=VARCHAR},
      </if>
      <if test="record.processActualWorkHours != null" >
        process_actual_work_hours = #{record.processActualWorkHours,jdbcType=VARCHAR},
      </if>
      <if test="record.processActualPersonNum != null" >
        process_actual_person_num = #{record.processActualPersonNum,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update workorder_process
    set process_id = #{record.processId,jdbcType=VARCHAR},
      workorder_id = #{record.workorderId,jdbcType=VARCHAR},
      knowledge_id = #{record.knowledgeId,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      process_number = #{record.processNumber,jdbcType=VARCHAR},
      process_desc = #{record.processDesc,jdbcType=VARCHAR},
      process_external = #{record.processExternal,jdbcType=VARCHAR},
      process_plan_work_hours = #{record.processPlanWorkHours,jdbcType=VARCHAR},
      process_plan_person_num = #{record.processPlanPersonNum,jdbcType=VARCHAR},
      process_actual_work_hours = #{record.processActualWorkHours,jdbcType=VARCHAR},
      process_actual_person_num = #{record.processActualPersonNum,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.zframe.maintain.entity.WorkorderProcess" >
    update workorder_process
    <set >
      <if test="workorderId != null" >
        workorder_id = #{workorderId,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeId != null" >
        knowledge_id = #{knowledgeId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="processNumber != null" >
        process_number = #{processNumber,jdbcType=VARCHAR},
      </if>
      <if test="processDesc != null" >
        process_desc = #{processDesc,jdbcType=VARCHAR},
      </if>
      <if test="processExternal != null" >
        process_external = #{processExternal,jdbcType=VARCHAR},
      </if>
      <if test="processPlanWorkHours != null" >
        process_plan_work_hours = #{processPlanWorkHours,jdbcType=VARCHAR},
      </if>
      <if test="processPlanPersonNum != null" >
        process_plan_person_num = #{processPlanPersonNum,jdbcType=VARCHAR},
      </if>
      <if test="processActualWorkHours != null" >
        process_actual_work_hours = #{processActualWorkHours,jdbcType=VARCHAR},
      </if>
      <if test="processActualPersonNum != null" >
        process_actual_person_num = #{processActualPersonNum,jdbcType=VARCHAR},
      </if>
    </set>
    where process_id = #{processId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.zframe.maintain.entity.WorkorderProcess" >
    update workorder_process
    set workorder_id = #{workorderId,jdbcType=VARCHAR},
      knowledge_id = #{knowledgeId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      process_number = #{processNumber,jdbcType=VARCHAR},
      process_desc = #{processDesc,jdbcType=VARCHAR},
      process_external = #{processExternal,jdbcType=VARCHAR},
      process_plan_work_hours = #{processPlanWorkHours,jdbcType=VARCHAR},
      process_plan_person_num = #{processPlanPersonNum,jdbcType=VARCHAR},
      process_actual_work_hours = #{processActualWorkHours,jdbcType=VARCHAR},
      process_actual_person_num = #{processActualPersonNum,jdbcType=VARCHAR}
    where process_id = #{processId,jdbcType=VARCHAR}
  </update>
</mapper>